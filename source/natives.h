#pragma once
#include "invoker.h"
#include <stdint.h>
#include <stdbool.h>

inline float AI_WAYPOINT_RECORDING_GET_SPEED_AT_POINT(const char* name, int point) /*0x005622AEBC33ACA9*/ {
	uint64_t val;
	nativeInit(0x005622AEBC33ACA9);
	*(const char**)(&val) = name;
	nativePush(val);
	*(int*)(&val) = point;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int AI_GET_SEQUENCE_PROGRESS(Ped ped) /*0x00A9010CFE1E3533*/ {
	uint64_t val;
	nativeInit(0x00A9010CFE1E3533);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_SET_SCENARIO_GROUP_ENABLED(const char* scenarioGroup, bool p1) /*0x02C8E5B49848664E*/ {
	uint64_t val;
	nativeInit(0x02C8E5B49848664E);
	*(const char**)(&val) = scenarioGroup;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_ANIM_RATE(Any p0, float p1, Any p2, bool p3) /*0x032D49C5E359C847*/ {
	uint64_t val;
	nativeInit(0x032D49C5E359C847);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(Any p0, Any p1, float p2, float p3, float p4, float p5, bool p6, float p7, float p8, bool p9, bool p10, Any p11) /*0x04701832B739DCE5*/ {
	uint64_t val;
	nativeInit(0x04701832B739DCE5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(Any p0, float p1, float p2, float p3, bool p4, Any p5) /*0x057A25CFCC9DB671*/ {
	uint64_t val;
	nativeInit(0x057A25CFCC9DB671);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_PARACHUTE_TASK_THRUST(Ped ped, float thrust) /*0x0729BAC1B8C64317*/ {
	uint64_t val;
	nativeInit(0x0729BAC1B8C64317);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = thrust;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_FOLLOW_WAYPOINT_RECORDING(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x0759591819534F7B*/ {
	uint64_t val;
	nativeInit(0x0759591819534F7B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SHOOT_AT_ENTITY(Entity entity, Entity target, int duration, Hash firingPattern) /*0x08DA95E8298AE772*/ {
	uint64_t val;
	nativeInit(0x08DA95E8298AE772);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Entity*)(&val) = target;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_RAPPEL_FROM_HELI(Ped ped, int unused) /*0x09693B0312F91649*/ {
	uint64_t val;
	nativeInit(0x09693B0312F91649);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline bool AI_DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float p0, float p1, float p2, Any* p3, float p4, bool p5) /*0x0A9D0C2A3BBC86C1*/ {
	uint64_t val;
	nativeInit(0x0A9D0C2A3BBC86C1);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_JUMP(Ped ped, bool unused) /*0x0AE4086104E067B1*/ {
	uint64_t val;
	nativeInit(0x0AE4086104E067B1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline void AI_RESET_SCENARIO_TYPES_ENABLED() /*0x0D40EE2A7F2B2D6D*/ {
	nativeInit(0x0D40EE2A7F2B2D6D);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_PAUSE(Any p0, bool p1, bool p2) /*0x0F342546AA06FED5*/ {
	uint64_t val;
	nativeInit(0x0F342546AA06FED5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_PARK(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, bool keepEngineOn) /*0x0F3E34E968EA374E*/ {
	uint64_t val;
	nativeInit(0x0F3E34E968EA374E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(int*)(&val) = mode;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = keepEngineOn;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_CLEAR_LOOK_AT(Ped ped) /*0x0F804F1DB19B9689*/ {
	uint64_t val;
	nativeInit(0x0F804F1DB19B9689);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_ESCORT(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int p7, float noRoadsDistance) /*0x0FA6E4B75F302400*/ {
	uint64_t val;
	nativeInit(0x0FA6E4B75F302400);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(int*)(&val) = mode;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	*(float*)(&val) = minDistance;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = noRoadsDistance;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_SHOOT_AT_PED(Ped ped, Ped target, float flag) /*0x10AB107B887214D8*/ {
	uint64_t val;
	nativeInit(0x10AB107B887214D8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(float*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveSpeed, bool p8, float p9, float p10, bool p11, Any flags, bool p13, Hash firingPattern) /*0x11315AB3385B8AC0*/ {
	uint64_t val;
	nativeInit(0x11315AB3385B8AC0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = aimAtX;
	nativePush(val);
	*(float*)(&val) = aimAtY;
	nativePush(val);
	*(float*)(&val) = aimAtZ;
	nativePush(val);
	*(float*)(&val) = moveSpeed;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(Any*)(&val) = flags;
	nativePush(val);
	*(bool*)(&val) = p13;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline void AI_VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1) /*0x121F0593E0A431D7*/ {
	uint64_t val;
	nativeInit(0x121F0593E0A431D7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SCRIPTED_ANIMATION(Ped ped, Any* p1, Any* p2, Any* p3, float p4, float p5) /*0x126EF75F1E17ABE5*/ {
	uint64_t val;
	nativeInit(0x126EF75F1E17ABE5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(float dist) /*0x13945951E16EF912*/ {
	uint64_t val;
	nativeInit(0x13945951E16EF912);
	*(float*)(&val) = dist;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_START_SCENARIO_IN_PLACE(Ped ped, const char* scenarioName, int unkDelay, bool playEnterAnim) /*0x142A02425FF02BD9*/ {
	uint64_t val;
	nativeInit(0x142A02425FF02BD9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = scenarioName;
	nativePush(val);
	*(int*)(&val) = unkDelay;
	nativePush(val);
	*(bool*)(&val) = playEnterAnim;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange) /*0x158BB33F920D360C*/ {
	uint64_t val;
	nativeInit(0x158BB33F920D360C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = driveMode;
	nativePush(val);
	*(float*)(&val) = stopRange;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_BOAT_MISSION(Ped pedDriver, Vehicle boat, Any p2, Any p3, float x, float y, float z, Any p7, float maxSpeed, int drivingStyle, float p10, Any p11) /*0x15C86013127CE63F*/ {
	uint64_t val;
	nativeInit(0x15C86013127CE63F);
	*(Ped*)(&val) = pedDriver;
	nativePush(val);
	*(Vehicle*)(&val) = boat;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = maxSpeed;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_FOLLOW_NAV_MESH_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float stoppingRange, bool persistFollowing, float unk) /*0x15D3A79D4E44B913*/ {
	uint64_t val;
	nativeInit(0x15D3A79D4E44B913);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(float*)(&val) = stoppingRange;
	nativePush(val);
	*(bool*)(&val) = persistFollowing;
	nativePush(val);
	*(float*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void AI_CLEAR_PED_SECONDARY_TASK(Ped ped) /*0x176CECF6F920D707*/ {
	uint64_t val;
	nativeInit(0x176CECF6F920D707);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(Ped ped, float x, float y, float z, float speed, int timeout, float unkFloat, int unkInt, float unkX, float unkY, float unkZ, float unk_40000f) /*0x17F58B88D085DBAC*/ {
	uint64_t val;
	nativeInit(0x17F58B88D085DBAC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(float*)(&val) = unkFloat;
	nativePush(val);
	*(int*)(&val) = unkInt;
	nativePush(val);
	*(float*)(&val) = unkX;
	nativePush(val);
	*(float*)(&val) = unkY;
	nativePush(val);
	*(float*)(&val) = unkZ;
	nativePush(val);
	*(float*)(&val) = unk_40000f;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_GOTO_NAVMESH(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange) /*0x195AEEB13CEFE2EE*/ {
	uint64_t val;
	nativeInit(0x195AEEB13CEFE2EE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = behaviorFlag;
	nativePush(val);
	*(float*)(&val) = stoppingRange;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PUT_PED_DIRECTLY_INTO_MELEE(Ped ped, Ped target, float p2, float p3, float p4, float flag) /*0x1C6CD14A876FFE39*/ {
	uint64_t val;
	nativeInit(0x1C6CD14A876FFE39);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8, Any p9, Any p10, Any p11) /*0x1DD45F9ECFDB1BC9*/ {
	uint64_t val;
	nativeInit(0x1DD45F9ECFDB1BC9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = walkingStyle;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_TURN_PED_TO_FACE_COORD(Ped ped, float x, float y, float z, int duration) /*0x1DDA930A0AC38571*/ {
	uint64_t val;
	nativeInit(0x1DDA930A0AC38571);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_HELI_PROTECT(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int p4, float radius, int altitude, int p7) /*0x1E09C32048FEFD1C*/ {
	uint64_t val;
	nativeInit(0x1E09C32048FEFD1C);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = entityToFollow;
	nativePush(val);
	*(float*)(&val) = targetSpeed;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = altitude;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_EXTEND_ROUTE(float x, float y, float z) /*0x1E7889778264843A*/ {
	uint64_t val;
	nativeInit(0x1E7889778264843A);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped, float p1) /*0x1E982AC8716912C5*/ {
	uint64_t val;
	nativeInit(0x1E982AC8716912C5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float AI_GET_PHONE_GESTURE_ANIM_TOTAL_TIME(Ped ped) /*0x1EE0F68A7C25DEC6*/ {
	uint64_t val;
	nativeInit(0x1EE0F68A7C25DEC6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void AI_TASK_SWEEP_AIM_ENTITY(Ped ped, const char* animDict, const char* animName1, const char* animName2, const char* animName3, int duration, Entity entity, float p7, float p8) /*0x2047C02158D6405A*/ {
	uint64_t val;
	nativeInit(0x2047C02158D6405A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName1;
	nativePush(val);
	*(const char**)(&val) = animName2;
	nativePush(val);
	*(const char**)(&val) = animName3;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_ANIM_WEIGHT(Any p0, float p1, Any p2, Any p3, bool p4) /*0x207F1A47C0342F48*/ {
	uint64_t val;
	nativeInit(0x207F1A47C0342F48);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_START_AIMING_AT_PED(Any p0, Any p1, bool p2) /*0x20E330937C399D29*/ {
	uint64_t val;
	nativeInit(0x20E330937C399D29);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SMART_FLEE_PED(Ped ped, Ped fleeTarget, float distance, Any fleeTime, bool p4, bool p5) /*0x22B0D0E37CCB840D*/ {
	uint64_t val;
	nativeInit(0x22B0D0E37CCB840D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = fleeTarget;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(Any*)(&val) = fleeTime;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_ADD_PATROL_ROUTE_LINK(Any p0, Any p1) /*0x23083260DEC3A551*/ {
	uint64_t val;
	nativeInit(0x23083260DEC3A551);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLANE_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float unk, float targetHeading, float maxZ, float minZ) /*0x23703CD154E83B88*/ {
	uint64_t val;
	nativeInit(0x23703CD154E83B88);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Vehicle*)(&val) = aircraft;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(float*)(&val) = destinationX;
	nativePush(val);
	*(float*)(&val) = destinationY;
	nativePush(val);
	*(float*)(&val) = destinationZ;
	nativePush(val);
	*(int*)(&val) = missionFlag;
	nativePush(val);
	*(float*)(&val) = angularDrag;
	nativePush(val);
	*(float*)(&val) = unk;
	nativePush(val);
	*(float*)(&val) = targetHeading;
	nativePush(val);
	*(float*)(&val) = maxZ;
	nativePush(val);
	*(float*)(&val) = minZ;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_RESUME(Any p0, bool p1, Any p2, Any p3) /*0x244F70C84C547D2D*/ {
	uint64_t val;
	nativeInit(0x244F70C84C547D2D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_MOVE_BLEND_RATIO_SPRINTING(Ped ped) /*0x24A2AD74FA9814E2*/ {
	uint64_t val;
	nativeInit(0x24A2AD74FA9814E2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int AI_GET_PED_WAYPOINT_PROGRESS(Ped ped) /*0x2720AAA75001E094*/ {
	uint64_t val;
	nativeInit(0x2720AAA75001E094);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_TASK_USE_NEAREST_SCENARIO_TO_COORD(Ped ped, float x, float y, float z, float distance, int duration) /*0x277F471BA9DB000B*/ {
	uint64_t val;
	nativeInit(0x277F471BA9DB000B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline bool AI_PED_HAS_USE_SCENARIO_TASK(Ped ped) /*0x295E3CCEC879CCD7*/ {
	uint64_t val;
	nativeInit(0x295E3CCEC879CCD7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_IS_PED_GETTING_UP(Ped ped) /*0x2A74E1D5F2F00EEC*/ {
	uint64_t val;
	nativeInit(0x2A74E1D5F2F00EEC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(Ped ped, float radius, int duration, bool unk) /*0x2BBA30B854534A0C*/ {
	uint64_t val;
	nativeInit(0x2BBA30B854534A0C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLANE_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) /*0x2D2386F273FF7A25*/ {
	uint64_t val;
	nativeInit(0x2D2386F273FF7A25);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Entity*)(&val) = entityToFollow;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI__TASK_MOVE_NETWORK(Ped ped, const char* task, float multiplier, bool p3, const char* animDict, int flags) /*0x2D537BA194896636*/ {
	uint64_t val;
	nativeInit(0x2D537BA194896636);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = task;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_DRIVE_BY(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, bool p8, Hash firingPattern) /*0x2F8AF0E82773A171*/ {
	uint64_t val;
	nativeInit(0x2F8AF0E82773A171);
	*(Ped*)(&val) = driverPed;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(float*)(&val) = targetX;
	nativePush(val);
	*(float*)(&val) = targetY;
	nativePush(val);
	*(float*)(&val) = targetZ;
	nativePush(val);
	*(float*)(&val) = distanceToShoot;
	nativePush(val);
	*(int*)(&val) = pedAccuracy;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline bool AI_WAYPOINT_RECORDING_GET_COORD(const char* name, int point, Vector3* coord) /*0x2FB897405C90B361*/ {
	uint64_t val;
	nativeInit(0x2FB897405C90B361);
	*(const char**)(&val) = name;
	nativePush(val);
	*(int*)(&val) = point;
	nativePush(val);
	*(Vector3**)(&val) = coord;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_FOLLOW_TO_OFFSET_OF_ENTITY(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, bool persistFollowing) /*0x304AE42E357B8C7E*/ {
	uint64_t val;
	nativeInit(0x304AE42E357B8C7E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = movementSpeed;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(float*)(&val) = stoppingRange;
	nativePush(val);
	*(bool*)(&val) = persistFollowing;
	nativePush(val);
	nativeCall();
}
inline bool AI_0x30ED88D5E0C56A37(Any p0) /*0x30ED88D5E0C56A37*/ {
	uint64_t val;
	nativeInit(0x30ED88D5E0C56A37);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(Ped ped, Vehicle vehicle, const char* WPRecording, int p3, int p4, int p5, int p6, float p7, bool p8, float p9) /*0x3123FAA6DB1CF7ED*/ {
	uint64_t val;
	nativeInit(0x3123FAA6DB1CF7ED);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = WPRecording;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GOTO_ENTITY_OFFSET_XY(Ped ped, Entity entity, int duration, float xOffset, float yOffset, float zOffset, float moveBlendRatio, bool useNavmesh) /*0x338E7EF52B6095A9*/ {
	uint64_t val;
	nativeInit(0x338E7EF52B6095A9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = moveBlendRatio;
	nativePush(val);
	*(bool*)(&val) = useNavmesh;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_MOVE_BLEND_RATIO_STILL(Ped ped) /*0x349CE7B56DAFD95C*/ {
	uint64_t val;
	nativeInit(0x349CE7B56DAFD95C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_ASSISTED_MOVEMENT_REMOVE_ROUTE(const char* route) /*0x3548536485DD792B*/ {
	uint64_t val;
	nativeInit(0x3548536485DD792B);
	*(const char**)(&val) = route;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_SCENARIO_GROUP_ENABLED(const char* scenarioGroup) /*0x367A09DED4E05B99*/ {
	uint64_t val;
	nativeInit(0x367A09DED4E05B99);
	*(const char**)(&val) = scenarioGroup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any AI_CLEAR_SEQUENCE_TASK(Object* taskSequence) /*0x3841422E9C488D8C*/ {
	uint64_t val;
	nativeInit(0x3841422E9C488D8C);
	*(Object**)(&val) = taskSequence;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_SET_PED_PATH_PREFER_TO_AVOID_WATER(Ped ped, bool avoidWater) /*0x38FE1EC73743793C*/ {
	uint64_t val;
	nativeInit(0x38FE1EC73743793C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = avoidWater;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SEEK_COVER_TO_COORDS(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, Any p7, bool p8) /*0x39246A6958EF072C*/ {
	uint64_t val;
	nativeInit(0x39246A6958EF072C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline Any AI_CLOSE_SEQUENCE_TASK(Object taskSequence) /*0x39E72BC99E6360CB*/ {
	uint64_t val;
	nativeInit(0x39E72BC99E6360CB);
	*(Object*)(&val) = taskSequence;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool AI_IS_SCENARIO_TYPE_ENABLED(const char* scenarioType) /*0x3A815DB3EA088722*/ {
	uint64_t val;
	nativeInit(0x3A815DB3EA088722);
	*(const char**)(&val) = scenarioType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* AI_GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(int p0) /*0x3A8CADC7D37AACC5*/ {
	uint64_t val;
	nativeInit(0x3A8CADC7D37AACC5);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void AI_TASK_VEHICLE_CHASE(Ped driver, Entity targetEnt) /*0x3C08A8E30363B353*/ {
	uint64_t val;
	nativeInit(0x3C08A8E30363B353);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(Entity*)(&val) = targetEnt;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_RUNNING_ARREST_TASK(Ped ped) /*0x3DC52677769B4AE0*/ {
	uint64_t val;
	nativeInit(0x3DC52677769B4AE0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_0x3E38E28A1D80DDF6(Ped ped) /*0x3E38E28A1D80DDF6*/ {
	uint64_t val;
	nativeInit(0x3E38E28A1D80DDF6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_COWER(Ped ped, int duration) /*0x3EB1FE9E8E908E15*/ {
	uint64_t val;
	nativeInit(0x3EB1FE9E8E908E15);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI__TASK_STOP_PHONE_GESTURE_ANIMATION(Ped ped) /*0x3FA00D4F4641BFAE*/ {
	uint64_t val;
	nativeInit(0x3FA00D4F4641BFAE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_DRIVE_TASK_MAX_CRUISE_SPEED(Any p0, float p1) /*0x404A5AA9B9F0B746*/ {
	uint64_t val;
	nativeInit(0x404A5AA9B9F0B746);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any AI_GET_VEHICLE_WAYPOINT_TARGET_POINT(Ped ped) /*0x416B62AC8B9E5BBD*/ {
	uint64_t val;
	nativeInit(0x416B62AC8B9E5BBD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_TASK_PUT_PED_DIRECTLY_INTO_COVER(Ped ped, float x, float y, float z, Any timeout, bool p5, float p6, bool p7, bool p8, Any p9, bool p10) /*0x4172393E6BE1FECE*/ {
	uint64_t val;
	nativeInit(0x4172393E6BE1FECE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = timeout;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline void AI_RESET_EXCLUSIVE_SCENARIO_GROUP() /*0x4202BBCB8684563D*/ {
	nativeInit(0x4202BBCB8684563D);
	nativeCall();
}
inline void AI_SET_PED_PATH_AVOID_FIRE(Ped ped, bool avoidFire) /*0x4455517B28441E60*/ {
	uint64_t val;
	nativeInit(0x4455517B28441E60);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = avoidFire;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_AIM_AT_COORD(Ped ped, float x, float y, float z) /*0x447C1E9EF844BC0F*/ {
	uint64_t val;
	nativeInit(0x447C1E9EF844BC0F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SHOCKING_EVENT_REACT(Ped ped, int eventHandle) /*0x452419CBD838065B*/ {
	uint64_t val;
	nativeInit(0x452419CBD838065B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = eventHandle;
	nativePush(val);
	nativeCall();
}
inline void AI_ADD_COVER_BLOCKING_AREA(float playerX, float playerY, float playerZ, float radiusX, float radiusY, float radiusZ, bool p6, bool p7, bool p8, bool p9) /*0x45C597097DD7CB81*/ {
	uint64_t val;
	nativeInit(0x45C597097DD7CB81);
	*(float*)(&val) = playerX;
	nativePush(val);
	*(float*)(&val) = playerY;
	nativePush(val);
	*(float*)(&val) = playerZ;
	nativePush(val);
	*(float*)(&val) = radiusX;
	nativePush(val);
	*(float*)(&val) = radiusY;
	nativePush(val);
	*(float*)(&val) = radiusZ;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SHOOT_AT_COORD(Ped ped, float x, float y, float z, int duration, Hash firingPattern) /*0x46A6CC01E0826106*/ {
	uint64_t val;
	nativeInit(0x46A6CC01E0826106);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline float AI_GET_PHONE_GESTURE_ANIM_CURRENT_TIME(Ped ped) /*0x47619ABE8B268C60*/ {
	uint64_t val;
	nativeInit(0x47619ABE8B268C60);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void AI_WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(Any p0) /*0x47EFA040EBB8E2EA*/ {
	uint64_t val;
	nativeInit(0x47EFA040EBB8E2EA);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_DRIVE_WANDER(Ped ped, Vehicle vehicle, float speed, int drivingStyle) /*0x480142959D337D00*/ {
	uint64_t val;
	nativeInit(0x480142959D337D00);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GUARD_CURRENT_POSITION(Ped p0, float p1, float p2, bool p3) /*0x4A58A47A72E3FCB4*/ {
	uint64_t val;
	nativeInit(0x4A58A47A72E3FCB4);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_COMBAT_HATED_TARGETS_IN_AREA(Ped ped, float x, float y, float z, float radius, Any p5) /*0x4CF5F55DAC3280A0*/ {
	uint64_t val;
	nativeInit(0x4CF5F55DAC3280A0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_FORCE_MOTION_STATE(Ped ped, Hash state, bool p2) /*0x4F056E1AFFEF17AB*/ {
	uint64_t val;
	nativeInit(0x4F056E1AFFEF17AB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = state;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_LEAVE_ANY_VEHICLE(Ped ped, int p1, int p2) /*0x504D54DF3F6F2247*/ {
	uint64_t val;
	nativeInit(0x504D54DF3F6F2247);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_SHOOT_AT_COORD(Ped ped, float x, float y, float z, float p4) /*0x5190796ED39C9B6D*/ {
	uint64_t val;
	nativeInit(0x5190796ED39C9B6D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool AI_WAYPOINT_RECORDING_GET_NUM_POINTS(const char* name, int* points) /*0x5343532C01A07234*/ {
	uint64_t val;
	nativeInit(0x5343532C01A07234);
	*(const char**)(&val) = name;
	nativePush(val);
	*(int**)(&val) = points;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int AI_GET_ACTIVE_VEHICLE_MISSION_TYPE(Vehicle veh) /*0x534AEBA6E5ED4CAB*/ {
	uint64_t val;
	nativeInit(0x534AEBA6E5ED4CAB);
	*(Vehicle*)(&val) = veh;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_SET_EXCLUSIVE_SCENARIO_GROUP(const char* scenarioGroup) /*0x535E97E1F7FC0C6A*/ {
	uint64_t val;
	nativeInit(0x535E97E1F7FC0C6A);
	*(const char**)(&val) = scenarioGroup;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_SPRINTING(Ped ped) /*0x57E457CD2C0FC168*/ {
	uint64_t val;
	nativeInit(0x57E457CD2C0FC168);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_SET_SEQUENCE_TO_REPEAT(Object taskSequence, bool repeat) /*0x58C70CF3A41E4AE7*/ {
	uint64_t val;
	nativeInit(0x58C70CF3A41E4AE7);
	*(Object*)(&val) = taskSequence;
	nativePush(val);
	*(bool*)(&val) = repeat;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, Any p5) /*0x58E2E0F23F6B76C3*/ {
	uint64_t val;
	nativeInit(0x58E2E0F23F6B76C3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Vector3 AI_GET_SCRIPTED_COVER_POINT_COORDS(ScrHandle coverpoint) /*0x594A1028FC2A3E85*/ {
	uint64_t val;
	nativeInit(0x594A1028FC2A3E85);
	*(ScrHandle*)(&val) = coverpoint;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void AI_TASK_FOLLOW_POINT_ROUTE(Ped ped, float speed, int unknown) /*0x595583281858626E*/ {
	uint64_t val;
	nativeInit(0x595583281858626E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = unknown;
	nativePush(val);
	nativeCall();
}
inline void AI_USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(Any* p0, bool p1, float p2, float p3) /*0x5A353B8E6B1095B5*/ {
	uint64_t val;
	nativeInit(0x5A353B8E6B1095B5);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PED_SLIDE_TO_COORD_HDG_RATE(Ped ped, float x, float y, float z, float heading, float p5, float p6) /*0x5A4A6A6D3DC64F52*/ {
	uint64_t val;
	nativeInit(0x5A4A6A6D3DC64F52);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool AI_DOES_SCENARIO_EXIST_IN_AREA(float x, float y, float z, float radius, bool b) /*0x5A59271FFADD33C1*/ {
	uint64_t val;
	nativeInit(0x5A59271FFADD33C1);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = b;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any AI_TASK_PERFORM_SEQUENCE(Ped ped, Object taskSequence) /*0x5ABA3986D90D8A3B*/ {
	uint64_t val;
	nativeInit(0x5ABA3986D90D8A3B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Object*)(&val) = taskSequence;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_TASK_TURN_PED_TO_FACE_ENTITY(Ped ped, Entity entity, int duration) /*0x5AD23D40115353AC*/ {
	uint64_t val;
	nativeInit(0x5AD23D40115353AC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_COORD_ANY_MEANS(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8) /*0x5BC448CB78FA3E88*/ {
	uint64_t val;
	nativeInit(0x5BC448CB78FA3E88);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = walkingStyle;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_DRIVE_TASK_CRUISE_SPEED(Ped driver, float cruiseSpeed) /*0x5C9B84BD7D31D908*/ {
	uint64_t val;
	nativeInit(0x5C9B84BD7D31D908);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(float*)(&val) = cruiseSpeed;
	nativePush(val);
	nativeCall();
}
inline void AI_VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0) /*0x5CEB25A7D2848963*/ {
	uint64_t val;
	nativeInit(0x5CEB25A7D2848963);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_ADD_VEHICLE_SUBTASK_ATTACK_COORD(Ped ped, float x, float y, float z) /*0x5CF0D8F9BBA0DD75*/ {
	uint64_t val;
	nativeInit(0x5CF0D8F9BBA0DD75);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_USE_MOBILE_PHONE_TIMED(Ped ped, int duration) /*0x5EE02954A14C69DB*/ {
	uint64_t val;
	nativeInit(0x5EE02954A14C69DB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SKY_DIVE(Ped ped) /*0x601736CFE536B0A0*/ {
	uint64_t val;
	nativeInit(0x601736CFE536B0A0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool AI_ASSISTED_MOVEMENT_IS_ROUTE_LOADED(const char* route) /*0x60F9A4393A21F741*/ {
	uint64_t val;
	nativeInit(0x60F9A4393A21F741);
	*(const char**)(&val) = route;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(Entity entity1, Entity entity2, float p2, float p3, float p4, float p5, Any p6) /*0x61E360B7E040D12E*/ {
	uint64_t val;
	nativeInit(0x61E360B7E040D12E);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool AI_0x621C6E4729388E41(Ped ped) /*0x621C6E4729388E41*/ {
	uint64_t val;
	nativeInit(0x621C6E4729388E41);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_RELOAD_WEAPON(Ped ped, bool unused) /*0x62D2916F56B9CD2D*/ {
	uint64_t val;
	nativeInit(0x62D2916F56B9CD2D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline int AI_GET_NAVMESH_ROUTE_RESULT(Ped ped) /*0x632E831F382A0FA8*/ {
	uint64_t val;
	nativeInit(0x632E831F382A0FA8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(Ped ped, float distance) /*0x639B642FACBE4EDD*/ {
	uint64_t val;
	nativeInit(0x639B642FACBE4EDD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_MISSION(int p0, int p1, Vehicle veh, Any p3, float p4, Any p5, float p6, float p7, bool p8) /*0x659427E0EF36BCDE*/ {
	uint64_t val;
	nativeInit(0x659427E0EF36BCDE);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(Vehicle*)(&val) = veh;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0) /*0x6599D834B12D0800*/ {
	uint64_t val;
	nativeInit(0x6599D834B12D0800);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_AIM_GUN_AT_COORD(Ped ped, float x, float y, float z, int time, bool p5, bool p6) /*0x6671F3EEC681BDA1*/ {
	uint64_t val;
	nativeInit(0x6671F3EEC681BDA1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void AI_UNCUFF_PED(Ped ped) /*0x67406F2C8F87FC4F*/ {
	uint64_t val;
	nativeInit(0x67406F2C8F87FC4F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_LOOK_AT_ENTITY(Ped ped, Entity lookAt, int duration, int unknown1, int unknown2) /*0x69F4BE8C8CC4796C*/ {
	uint64_t val;
	nativeInit(0x69F4BE8C8CC4796C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = lookAt;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = unknown1;
	nativePush(val);
	*(int*)(&val) = unknown2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_PLAY_ANIM(Vehicle vehicle, const char* animation_set, const char* animation_name) /*0x69F5C3BD0F3EBD89*/ {
	uint64_t val;
	nativeInit(0x69F5C3BD0F3EBD89);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = animation_set;
	nativePush(val);
	*(const char**)(&val) = animation_name;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_ENTITY(Entity entity, Entity target, int duration, float distance, float speed, float p5, int p6) /*0x6A071245EB0D1882*/ {
	uint64_t val;
	nativeInit(0x6A071245EB0D1882);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Entity*)(&val) = target;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(float height) /*0x6C6B148586F934F7*/ {
	uint64_t val;
	nativeInit(0x6C6B148586F934F7);
	*(float*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_LOOK_AT_COORD(Entity entity, float x, float y, float z, float duration, Any p5, Any p6) /*0x6FA46612594F7973*/ {
	uint64_t val;
	nativeInit(0x6FA46612594F7973);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_ANIM_LOOPED(Any p0, bool p1, Any p2, bool p3) /*0x70033C3CC29A1FF4*/ {
	uint64_t val;
	nativeInit(0x70033C3CC29A1FF4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool AI_WAYPOINT_PLAYBACK_GET_IS_PAUSED(Any p0) /*0x701375A7D43F01CB*/ {
	uint64_t val;
	nativeInit(0x701375A7D43F01CB);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* AI__GET_PED_NETWORK_TASK_PHASE(Ped ped) /*0x717E4D1F2048376D*/ {
	uint64_t val;
	nativeInit(0x717E4D1F2048376D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void AI_TASK_THROW_PROJECTILE(int ped, float x, float y, float z) /*0x7285951DBF6B5A51*/ {
	uint64_t val;
	nativeInit(0x7285951DBF6B5A51);
	*(int*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_REACT_AND_FLEE_PED(Ped ped, Ped fleeTarget) /*0x72C896464915D1B1*/ {
	uint64_t val;
	nativeInit(0x72C896464915D1B1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = fleeTarget;
	nativePush(val);
	nativeCall();
}
inline void AI_PLAY_ANIM_ON_RUNNING_SCENARIO(Ped ped, const char* animDict, const char* animName) /*0x748040460F8DF5DC*/ {
	uint64_t val;
	nativeInit(0x748040460F8DF5DC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_CUFFED(Ped ped) /*0x74E559B3BC910685*/ {
	uint64_t val;
	nativeInit(0x74E559B3BC910685);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_SEEK_COVER_FROM_POS(Ped ped, float x, float y, float z, int duration, bool p5) /*0x75AC2B60386D89F2*/ {
	uint64_t val;
	nativeInit(0x75AC2B60386D89F2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_DELETE_PATROL_ROUTE(const char* patrolRoute) /*0x7767DD9D65E91319*/ {
	uint64_t val;
	nativeInit(0x7767DD9D65E91319);
	*(const char**)(&val) = patrolRoute;
	nativePush(val);
	nativeCall();
}
inline void AI_PLAY_ENTITY_SCRIPTED_ANIM(Any p0, Any* p1, Any* p2, Any* p3, float p4, float p5) /*0x77A1EEC547E7FCF1*/ {
	uint64_t val;
	nativeInit(0x77A1EEC547E7FCF1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Any AI_SET_PED_PATH_CAN_USE_LADDERS(Ped ped, bool Toggle) /*0x77A5B103C87F476E*/ {
	uint64_t val;
	nativeInit(0x77A5B103C87F476E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int AI_GET_SCRIPT_TASK_STATUS(Ped targetPed, Hash taskHash) /*0x77F1BEB8863288D5*/ {
	uint64_t val;
	nativeInit(0x77F1BEB8863288D5);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(Hash*)(&val) = taskHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool AI_IS_SCENARIO_OCCUPIED(float x, float y, float z, float radius, bool p4) /*0x788756D73AC2E07C*/ {
	uint64_t val;
	nativeInit(0x788756D73AC2E07C);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_EXIT_COVER(Ped ped, int p1, float posX, float posY, float posZ) /*0x79B258E397854D29*/ {
	uint64_t val;
	nativeInit(0x79B258E397854D29);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_AIM_GUN_SCRIPTED(Ped ped, Hash scriptTask, bool p2, bool p3) /*0x7A192BE16D373D00*/ {
	uint64_t val;
	nativeInit(0x7A192BE16D373D00);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = scriptTask;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(Ped ped, Vehicle vehicle) /*0x7AA80209BDA643EB*/ {
	uint64_t val;
	nativeInit(0x7AA80209BDA643EB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SWEEP_AIM_POSITION(Ped ped, const char* animDict, const char* animName1, const char* animName2, const char* animName3, int timeout, float X, float Y, float Z, float unk, float flag) /*0x7AFE8FDC10BC07D2*/ {
	uint64_t val;
	nativeInit(0x7AFE8FDC10BC07D2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName1;
	nativePush(val);
	*(const char**)(&val) = animName2;
	nativePush(val);
	*(const char**)(&val) = animName3;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	*(float*)(&val) = unk;
	nativePush(val);
	*(float*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_COMBAT_HATED_TARGETS_AROUND_PED(Ped ped, float radius, int p2) /*0x7BF835BB9E2698C8*/ {
	uint64_t val;
	nativeInit(0x7BF835BB9E2698C8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1, bool p2) /*0x7D7D2B47FA788E85*/ {
	uint64_t val;
	nativeInit(0x7D7D2B47FA788E85);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_EVERYONE_LEAVE_VEHICLE(Vehicle vehicle) /*0x7F93691AB4B92272*/ {
	uint64_t val;
	nativeInit(0x7F93691AB4B92272);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AI_ASSISTED_MOVEMENT_REQUEST_ROUTE(const char* route) /*0x817268968605947A*/ {
	uint64_t val;
	nativeInit(0x817268968605947A);
	*(const char**)(&val) = route;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLAY_ANIM_ADVANCED(Ped ped, const char* animDict, const char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float speed, float speedMultiplier, int duration, Any flag, float animTime, int p14, int p15) /*0x83CDB10EA29B370B*/ {
	uint64_t val;
	nativeInit(0x83CDB10EA29B370B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMultiplier;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Any*)(&val) = flag;
	nativePush(val);
	*(float*)(&val) = animTime;
	nativePush(val);
	*(int*)(&val) = p14;
	nativePush(val);
	*(int*)(&val) = p15;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_FLUSH_ROUTE() /*0x841142A1376E9006*/ {
	nativeInit(0x841142A1376E9006);
	nativeCall();
}
inline void AI_TASK_SEEK_COVER_FROM_PED(Ped ped, Ped target, int duration, bool p3) /*0x84D32B3BEC531324*/ {
	uint64_t val;
	nativeInit(0x84D32B3BEC531324);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline float AI_GET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped) /*0x8517D4A6CA8513ED*/ {
	uint64_t val;
	nativeInit(0x8517D4A6CA8513ED);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void AI_ADD_VEHICLE_SUBTASK_ATTACK_PED(Ped ped, Ped ped2) /*0x85F462BADC7DA47F*/ {
	uint64_t val;
	nativeInit(0x85F462BADC7DA47F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = ped2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_AIM_GUN_SCRIPTED_WITH_TARGET(Any p0, Any p1, float p2, float p3, float p4, Any p5, bool p6, bool p7) /*0x8605AF0DE8B3A5AC*/ {
	uint64_t val;
	nativeInit(0x8605AF0DE8B3A5AC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) /*0x8785E6E40C7A8818*/ {
	uint64_t val;
	nativeInit(0x8785E6E40C7A8818);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_0x88E32DB8C1A4AA4B(Ped ped, float p1) /*0x88E32DB8C1A4AA4B*/ {
	uint64_t val;
	nativeInit(0x88E32DB8C1A4AA4B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Ped ped, Object taskSequence, int currentProgress, int progressToSetTo) /*0x89221B16730234F0*/ {
	uint64_t val;
	nativeInit(0x89221B16730234F0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Object*)(&val) = taskSequence;
	nativePush(val);
	*(int*)(&val) = currentProgress;
	nativePush(val);
	*(int*)(&val) = progressToSetTo;
	nativePush(val);
	nativeCall();
}
inline void AI_WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(Any p0, float p1, float p2, float p3, bool p4) /*0x8968400D900ED8B3*/ {
	uint64_t val;
	nativeInit(0x8968400D900ED8B3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_CLIMB(Ped ped, bool unused) /*0x89D9FCC2435112F1*/ {
	uint64_t val;
	nativeInit(0x89D9FCC2435112F1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline void AI_VEHICLE_WAYPOINT_PLAYBACK_PAUSE(Any p0) /*0x8A4E6AC373666BC5*/ {
	uint64_t val;
	nativeInit(0x8A4E6AC373666BC5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_CHAT_TO_PED(Ped ped, Ped target, int p2, float p3, float p4, float p5, float p6, float p7) /*0x8C338E0263E4FD19*/ {
	uint64_t val;
	nativeInit(0x8C338E0263E4FD19);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_HIGH_FALL_TASK(Ped ped, Any p1, Any p2, Any p3) /*0x8C825BDC7741D37C*/ {
	uint64_t val;
	nativeInit(0x8C825BDC7741D37C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any AI_SET_PED_PATH_CAN_USE_CLIMBOVERS(Ped ped, bool Toggle) /*0x8E06A6FE76C9EFF4*/ {
	uint64_t val;
	nativeInit(0x8E06A6FE76C9EFF4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_ADD_PATROL_ROUTE_NODE(int p0, const char* p1, float x1, float y1, float z1, float x2, float y2, float z2, int p8) /*0x8EDF950167586B7C*/ {
	uint64_t val;
	nativeInit(0x8EDF950167586B7C);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLAY_PHONE_GESTURE_ANIMATION(Ped ped, const char* animDict, const char* animation, const char* boneMaskType, float p4, float p5, bool p6, bool p7) /*0x8FBB6758B3B3E9EC*/ {
	uint64_t val;
	nativeInit(0x8FBB6758B3B3E9EC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animation;
	nativePush(val);
	*(const char**)(&val) = boneMaskType;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void AI_0x8FD89A6240813FD0(Ped ped, bool p1, bool p2) /*0x8FD89A6240813FD0*/ {
	uint64_t val;
	nativeInit(0x8FD89A6240813FD0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_BEING_ARRESTED(Ped ped) /*0x90A09F3A45FED688*/ {
	uint64_t val;
	nativeInit(0x90A09F3A45FED688);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, bool toggle) /*0x90D2156198831D69*/ {
	uint64_t val;
	nativeInit(0x90D2156198831D69);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_STAND_STILL(Ped ped, int time) /*0x919BE13EED931959*/ {
	uint64_t val;
	nativeInit(0x919BE13EED931959);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline bool AI__IS_TASK_MOVE_SCRIPTED_ACTIVE(Ped handle) /*0x921CE12C489C4C41*/ {
	uint64_t val;
	nativeInit(0x921CE12C489C4C41);
	*(Ped*)(&val) = handle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_SET_SPHERE_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4) /*0x933C06518B52A9A4*/ {
	uint64_t val;
	nativeInit(0x933C06518B52A9A4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_ACHIEVE_HEADING(Ped ped, float heading, int timeout) /*0x93B93A37987F1F3D*/ {
	uint64_t val;
	nativeInit(0x93B93A37987F1F3D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_COMBAT_PED_TIMED(Any p0, Ped ped, int duration, Any p3) /*0x944F30DCB7096BDE*/ {
	uint64_t val;
	nativeInit(0x944F30DCB7096BDE);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_MISSION_PED_TARGET(Ped ped, Vehicle vehicle, Ped pedTarget, int mode, float maxSpeed, int drivingStyle, float minDistance, float p7, bool p8) /*0x9454528DF15D657A*/ {
	uint64_t val;
	nativeInit(0x9454528DF15D657A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = pedTarget;
	nativePush(val);
	*(int*)(&val) = mode;
	nativePush(val);
	*(float*)(&val) = maxSpeed;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	*(float*)(&val) = minDistance;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SMART_FLEE_COORD(Ped ped, float x, float y, float z, float distance, int time, bool p6, bool p7) /*0x94587F17E9C365D5*/ {
	uint64_t val;
	nativeInit(0x94587F17E9C365D5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_CLEAR_DEFENSIVE_AREA(Any p0) /*0x95A6C46A31D1917D*/ {
	uint64_t val;
	nativeInit(0x95A6C46A31D1917D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_OPEN_VEHICLE_DOOR(Ped ped, Vehicle vehicle, int timeOut, int doorIndex, float speed) /*0x965791A9A488A062*/ {
	uint64_t val;
	nativeInit(0x965791A9A488A062);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = timeOut;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLANT_BOMB(Ped ped, float x, float y, float z, float heading) /*0x965FEC691D55E9BF*/ {
	uint64_t val;
	nativeInit(0x965FEC691D55E9BF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline void AI_UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(Ped p0, Ped p1, float p2, float p3, float p4, bool p5) /*0x9724FB59A3E72AD0*/ {
	uint64_t val;
	nativeInit(0x9724FB59A3E72AD0);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(Ped*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, bool shootatEntity, float p5, float p6, bool p7, bool p8, Hash firingPattern) /*0x97465886D35210E9*/ {
	uint64_t val;
	nativeInit(0x97465886D35210E9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entityToWalkTo;
	nativePush(val);
	*(Entity*)(&val) = entityToAimAt;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(bool*)(&val) = shootatEntity;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(Any p0, float p1, float p2, float p3, float p4, Any p5) /*0x97A28E63F0BA5631*/ {
	uint64_t val;
	nativeInit(0x97A28E63F0BA5631);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_STOP_ANIM_TASK(Ped ped, const char* animDictionary, const char* animationName, float p3) /*0x97FF36A1D40EA00A*/ {
	uint64_t val;
	nativeInit(0x97FF36A1D40EA00A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animationName;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline int AI_GET_VEHICLE_WAYPOINT_PROGRESS(Vehicle vehicle) /*0x9824CFF8FC66E159*/ {
	uint64_t val;
	nativeInit(0x9824CFF8FC66E159);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_TASK_WARP_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seat) /*0x9A7D091411C5F684*/ {
	uint64_t val;
	nativeInit(0x9A7D091411C5F684);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = seat;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_AIM_GUN_AT_ENTITY(Ped ped, Entity entity, int duration, bool unk) /*0x9B53BB6E8943AF53*/ {
	uint64_t val;
	nativeInit(0x9B53BB6E8943AF53);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void AI__TASK_GET_OFF_BOAT(Ped ped, Vehicle boat) /*0x9C00E77AF14B2DFF*/ {
	uint64_t val;
	nativeInit(0x9C00E77AF14B2DFF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = boat;
	nativePush(val);
	nativeCall();
}
inline void AI_REQUEST_WAYPOINT_RECORDING(const char* name) /*0x9EEFB62EB27B5792*/ {
	uint64_t val;
	nativeInit(0x9EEFB62EB27B5792);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(Any p0, float p1, float p2, float p3, float p4, Any p5) /*0x9FDA1B3D7E7028B3*/ {
	uint64_t val;
	nativeInit(0x9FDA1B3D7E7028B3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SWAP_WEAPON(Ped ped, bool p1) /*0xA21C51255B205245*/ {
	uint64_t val;
	nativeInit(0xA21C51255B205245);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) /*0xA320EF046186FA3B*/ {
	uint64_t val;
	nativeInit(0xA320EF046186FA3B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_OPEN_PATROL_ROUTE(const char* patrolRoute) /*0xA36BFB5EE89F3D82*/ {
	uint64_t val;
	nativeInit(0xA36BFB5EE89F3D82);
	*(const char**)(&val) = patrolRoute;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, bool shootAtEnemies, float distanceToStopAt, float noRoadsDistance, bool unkTrue, int unkFlag, int aimingFlag, Hash firingPattern) /*0xA55547801EB331FC*/ {
	uint64_t val;
	nativeInit(0xA55547801EB331FC);
	*(Ped*)(&val) = pedHandle;
	nativePush(val);
	*(float*)(&val) = goToLocationX;
	nativePush(val);
	*(float*)(&val) = goToLocationY;
	nativePush(val);
	*(float*)(&val) = goToLocationZ;
	nativePush(val);
	*(float*)(&val) = focusLocationX;
	nativePush(val);
	*(float*)(&val) = focusLocationY;
	nativePush(val);
	*(float*)(&val) = focusLocationZ;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(bool*)(&val) = shootAtEnemies;
	nativePush(val);
	*(float*)(&val) = distanceToStopAt;
	nativePush(val);
	*(float*)(&val) = noRoadsDistance;
	nativePush(val);
	*(bool*)(&val) = unkTrue;
	nativePush(val);
	*(int*)(&val) = unkFlag;
	nativePush(val);
	*(int*)(&val) = aimingFlag;
	nativePush(val);
	*(Hash*)(&val) = firingPattern;
	nativePush(val);
	nativeCall();
}
inline float AI_GET_WAYPOINT_DISTANCE_ALONG_ROUTE(const char* p0, int p1) /*0xA5B769058763E497*/ {
	uint64_t val;
	nativeInit(0xA5B769058763E497);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool AI_0xA7FFBA498E4AAF67(Ped ped, const char* p1) /*0xA7FFBA498E4AAF67*/ {
	uint64_t val;
	nativeInit(0xA7FFBA498E4AAF67);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(float x, float y, float z) /*0xA98B8E3C088E5A31*/ {
	uint64_t val;
	nativeInit(0xA98B8E3C088E5A31);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_UPDATE_TASK_HANDS_UP_DURATION(Ped ped, int duration) /*0xA98FCAFD7893C834*/ {
	uint64_t val;
	nativeInit(0xA98FCAFD7893C834);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GOTO_ENTITY_AIMING(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist) /*0xA9DA48FAB8A76C12*/ {
	uint64_t val;
	nativeInit(0xA9DA48FAB8A76C12);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = target;
	nativePush(val);
	*(float*)(&val) = distanceToStopAt;
	nativePush(val);
	*(float*)(&val) = StartAimingDist;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_ACTIVE_IN_SCENARIO(Ped ped) /*0xAA135F9482C82CC3*/ {
	uint64_t val;
	nativeInit(0xAA135F9482C82CC3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_STEALTH_KILL(Ped killer, Ped target, Hash actionType, float p3, Any p4) /*0xAA5DC05579D60BD9*/ {
	uint64_t val;
	nativeInit(0xAA5DC05579D60BD9);
	*(Ped*)(&val) = killer;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(Hash*)(&val) = actionType;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_CLEAR_PED_TASKS_IMMEDIATELY(Ped ped) /*0xAAA34F8A7CB32098*/ {
	uint64_t val;
	nativeInit(0xAAA34F8A7CB32098);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline Any AI_0xAB13A5565480B6D9(Ped ped, const char* unk) /*0xAB13A5565480B6D9*/ {
	uint64_t val;
	nativeInit(0xAB13A5565480B6D9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = unk;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool AI_IS_PED_STILL(Ped ped) /*0xAC29253EEF8F0180*/ {
	uint64_t val;
	nativeInit(0xAC29253EEF8F0180);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_HELI_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) /*0xAC83B1DB38D0ADA0*/ {
	uint64_t val;
	nativeInit(0xAC83B1DB38D0ADA0);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Entity*)(&val) = entityToFollow;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_TOGGLE_DUCK(bool p0, bool p1) /*0xAC96609B9995EDF8*/ {
	uint64_t val;
	nativeInit(0xAC96609B9995EDF8);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_STAND_GUARD(Ped ped, float x, float y, float z, float heading, const char* scenarioName) /*0xAE032F8BBA959E90*/ {
	uint64_t val;
	nativeInit(0xAE032F8BBA959E90);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(const char**)(&val) = scenarioName;
	nativePush(val);
	nativeCall();
}
inline void AI_REMOVE_COVER_POINT(ScrHandle coverpoint) /*0xAE287C923D891715*/ {
	uint64_t val;
	nativeInit(0xAE287C923D891715);
	*(ScrHandle*)(&val) = coverpoint;
	nativePush(val);
	nativeCall();
}
inline void AI_CREATE_PATROL_ROUTE() /*0xAF8A443CCC8018DC*/ {
	nativeInit(0xAF8A443CCC8018DC);
	nativeCall();
}
inline void AI_CLOSE_PATROL_ROUTE() /*0xB043ECA801B8CBC1*/ {
	nativeInit(0xB043ECA801B8CBC1);
	nativeCall();
}
inline bool AI_GET_IS_TASK_ACTIVE(Ped ped, int taskNumber) /*0xB0760331C7AA4155*/ {
	uint64_t val;
	nativeInit(0xB0760331C7AA4155);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = taskNumber;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI__SET_NETWORK_TASK_PARAM_bool(Ped ped, const char* p1, bool p2) /*0xB0A6CFD2C69C1088*/ {
	uint64_t val;
	nativeInit(0xB0A6CFD2C69C1088);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(Any p0, float p1, float p2, float p3, Any p4, float p5, bool p6, float p7, float p8, bool p9, Any p10, bool p11, Any p12, Any p13) /*0xB2A16444EAD9AE47*/ {
	uint64_t val;
	nativeInit(0xB2A16444EAD9AE47);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(Any*)(&val) = p12;
	nativePush(val);
	*(Any*)(&val) = p13;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PARACHUTE_TO_TARGET(Ped ped, float x, float y, float z) /*0xB33E291AFA6BD03A*/ {
	uint64_t val;
	nativeInit(0xB33E291AFA6BD03A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline bool AI_0xB4F47213DF45A64C(Ped ped, const char* p1) /*0xB4F47213DF45A64C*/ {
	uint64_t val;
	nativeInit(0xB4F47213DF45A64C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(const char* name, float x, float y, float z, int* point) /*0xB629A298081F876F*/ {
	uint64_t val;
	nativeInit(0xB629A298081F876F);
	*(const char**)(&val) = name;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int**)(&val) = point;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_CLIMB_LADDER(Ped ped, int p1) /*0xB6C987F9285A3814*/ {
	uint64_t val;
	nativeInit(0xB6C987F9285A3814);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PLAYING_PHONE_GESTURE_ANIM(Ped ped) /*0xB8EBB1E9D3588C10*/ {
	uint64_t val;
	nativeInit(0xB8EBB1E9D3588C10);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(Ped ped, float x, float y, float z, float speed, Any p5, bool p6, int walkingStyle, float p8, Any p9, Any p10, Any p11, Any p12) /*0xB8ECD61F531A7B02*/ {
	uint64_t val;
	nativeInit(0xB8ECD61F531A7B02);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = walkingStyle;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	*(Any*)(&val) = p12;
	nativePush(val);
	nativeCall();
}
inline void AI_UPDATE_TASK_SWEEP_AIM_POSITION(Ped ped, float X, float Y, float Z) /*0xBB106883F5201FC4*/ {
	uint64_t val;
	nativeInit(0xBB106883F5201FC4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_WANDER_STANDARD(Ped ped, float p1, int p2) /*0xBB9CE077274F6A1B*/ {
	uint64_t val;
	nativeInit(0xBB9CE077274F6A1B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_USE_MOBILE_PHONE(Ped ped, int p1) /*0xBD2A8EC3AF4DE7DB*/ {
	uint64_t val;
	nativeInit(0xBD2A8EC3AF4DE7DB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PATROL(Ped ped, const char* p1, Any p2, bool p3, bool p4) /*0xBDA5DF49D080FE4E*/ {
	uint64_t val;
	nativeInit(0xBDA5DF49D080FE4E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PLANE_LAND(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ) /*0xBF19721FA34D32C0*/ {
	uint64_t val;
	nativeInit(0xBF19721FA34D32C0);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Vehicle*)(&val) = plane;
	nativePush(val);
	*(float*)(&val) = runwayStartX;
	nativePush(val);
	*(float*)(&val) = runwayStartY;
	nativePush(val);
	*(float*)(&val) = runwayStartZ;
	nativePush(val);
	*(float*)(&val) = runwayEndX;
	nativePush(val);
	*(float*)(&val) = runwayEndY;
	nativePush(val);
	*(float*)(&val) = runwayEndZ;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_ENTER_VEHICLE(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, Any p6) /*0xC20E50AA46D09CA8*/ {
	uint64_t val;
	nativeInit(0xC20E50AA46D09CA8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(int*)(&val) = seat;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_PARACHUTE_TASK_TARGET(Ped ped, float x, float y, float z) /*0xC313379AF0FCEDA7*/ {
	uint64_t val;
	nativeInit(0xC313379AF0FCEDA7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) /*0xC35B5CDB2824CF69*/ {
	uint64_t val;
	nativeInit(0xC35B5CDB2824CF69);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_TEMP_ACTION(Ped driver, Vehicle vehicle, int action, int time) /*0xC429DCEEB339E129*/ {
	uint64_t val;
	nativeInit(0xC429DCEEB339E129);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = action;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_RUNNING(Ped ped) /*0xC5286FFC176F28A2*/ {
	uint64_t val;
	nativeInit(0xC5286FFC176F28A2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int AI_GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, float* distRemaining, bool* isPathReady) /*0xC6F5C0BCDC74D62D*/ {
	uint64_t val;
	nativeInit(0xC6F5C0BCDC74D62D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float**)(&val) = distRemaining;
	nativePush(val);
	*(bool**)(&val) = isPathReady;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AI_TASK_GUARD_SPHERE_DEFENSIVE_AREA(Ped p0, float p1, float p2, float p3, float p4, float p5, Any p6, float p7, float p8, float p9, float p10) /*0xC946FE14BE0EB5E2*/ {
	uint64_t val;
	nativeInit(0xC946FE14BE0EB5E2);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline bool AI_GET_IS_WAYPOINT_RECORDING_LOADED(const char* name) /*0xCB4E8BE8A0063C5D*/ {
	uint64_t val;
	nativeInit(0xCB4E8BE8A0063C5D);
	*(const char**)(&val) = name;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(Ped ped, int flag, bool set) /*0xCC665AAC360D31E7*/ {
	uint64_t val;
	nativeInit(0xCC665AAC360D31E7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(bool*)(&val) = set;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_MOUNTED_WEAPON_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) /*0xCCD892192C6D2BB9*/ {
	uint64_t val;
	nativeInit(0xCCD892192C6D2BB9);
	*(Ped*)(&val) = shootingPed;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_WRITHE(Ped ped, Ped target, int time, int p3) /*0xCDDC2B77CE54AC6E*/ {
	uint64_t val;
	nativeInit(0xCDDC2B77CE54AC6E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any AI__SET_NETWORK_TASK_ACTION(Ped ped, const char* p1) /*0xD01015C7316AE176*/ {
	uint64_t val;
	nativeInit(0xD01015C7316AE176);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_TASK_PED_SLIDE_TO_COORD(Ped ped, float x, float y, float z, float heading, float duration) /*0xD04FE6765D990A06*/ {
	uint64_t val;
	nativeInit(0xD04FE6765D990A06);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4, float p5, Any p6) /*0xD2A207EEBDF9889B*/ {
	uint64_t val;
	nativeInit(0xD2A207EEBDF9889B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PARACHUTE(Ped ped, bool p1) /*0xD2F1C53C97EE81AB*/ {
	uint64_t val;
	nativeInit(0xD2F1C53C97EE81AB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_LEAVE_VEHICLE(Ped ped, Vehicle vehicle, int flags) /*0xD3DBCE61A490BE02*/ {
	uint64_t val;
	nativeInit(0xD3DBCE61A490BE02);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SEEK_COVER_TO_COVER_POINT(Any p0, Any p1, float p2, float p3, float p4, Any p5, bool p6) /*0xD43D95C7A869447F*/ {
	uint64_t val;
	nativeInit(0xD43D95C7A869447F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_MOVE_BLEND_RATIO_RUNNING(Ped ped) /*0xD4D8636C0199A939*/ {
	uint64_t val;
	nativeInit(0xD4D8636C0199A939);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(const char* route, int props) /*0xD5002D78B7162E1B*/ {
	uint64_t val;
	nativeInit(0xD5002D78B7162E1B);
	*(const char**)(&val) = route;
	nativePush(val);
	*(int*)(&val) = props;
	nativePush(val);
	nativeCall();
}
inline void AI__TASK_MOVE_NETWORK_ADVANCED(Ped ped, const char* p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8, float p9, bool p10, const char* animDict, int flags) /*0xD5B35BEA41919ACB*/ {
	uint64_t val;
	nativeInit(0xD5B35BEA41919ACB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void AI__SET_NETWORK_TASK_PARAM_FLOAT(Ped ped, const char* p1, float p2) /*0xD5BB4025AE449A4E*/ {
	uint64_t val;
	nativeInit(0xD5BB4025AE449A4E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Any AI_ADD_COVER_POINT(float posX, float posY, float posZ, float heading, bool p4, int p5, bool p6, bool p7) /*0xD5C12A75C7B9497F*/ {
	uint64_t val;
	nativeInit(0xD5C12A75C7B9497F);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_TASK_GO_STRAIGHT_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide) /*0xD76B57B44F1E6F8B*/ {
	uint64_t val;
	nativeInit(0xD76B57B44F1E6F8B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = timeout;
	nativePush(val);
	*(float*)(&val) = targetHeading;
	nativePush(val);
	*(float*)(&val) = distanceToSlide;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_DRIVE_TASK_DRIVING_STYLE(Ped ped, int drivingStyle) /*0xDACE1BE37D88AF67*/ {
	uint64_t val;
	nativeInit(0xDACE1BE37D88AF67);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_HELI_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float landingRadius, float targetHeading, int unk1, int unk2, Hash unk3, int landingFlags) /*0xDAD029E187A2BEB4*/ {
	uint64_t val;
	nativeInit(0xDAD029E187A2BEB4);
	*(Ped*)(&val) = pilot;
	nativePush(val);
	*(Vehicle*)(&val) = aircraft;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(float*)(&val) = destinationX;
	nativePush(val);
	*(float*)(&val) = destinationY;
	nativePush(val);
	*(float*)(&val) = destinationZ;
	nativePush(val);
	*(int*)(&val) = missionFlag;
	nativePush(val);
	*(float*)(&val) = maxSpeed;
	nativePush(val);
	*(float*)(&val) = landingRadius;
	nativePush(val);
	*(float*)(&val) = targetHeading;
	nativePush(val);
	*(int*)(&val) = unk1;
	nativePush(val);
	*(int*)(&val) = unk2;
	nativePush(val);
	*(Hash*)(&val) = unk3;
	nativePush(val);
	*(int*)(&val) = landingFlags;
	nativePush(val);
	nativeCall();
}
inline void AI_REMOVE_ALL_COVER_BLOCKING_AREAS() /*0xDB6708C0B46F56D8*/ {
	nativeInit(0xDB6708C0B46F56D8);
	nativeCall();
}
inline void AI_VEHICLE_WAYPOINT_PLAYBACK_RESUME(Any p0) /*0xDC04FCAA7839D492*/ {
	uint64_t val;
	nativeInit(0xDC04FCAA7839D492);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool AI_CONTROL_MOUNTED_WEAPON(Ped ped) /*0xDCFE42068FE0135A*/ {
	uint64_t val;
	nativeInit(0xDCFE42068FE0135A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_RESET_SCENARIO_GROUPS_ENABLED() /*0xDD902D0349AFAD3A*/ {
	nativeInit(0xDD902D0349AFAD3A);
	nativeCall();
}
inline bool AI_IS_PED_WALKING(Ped ped) /*0xDE4C184B2B9B071A*/ {
	uint64_t val;
	nativeInit(0xDE4C184B2B9B071A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_IS_PED_IN_WRITHE(Ped ped) /*0xDEB6D52126E7D640*/ {
	uint64_t val;
	nativeInit(0xDEB6D52126E7D640);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(Any p0) /*0xE03B3F2D3DC59B64*/ {
	uint64_t val;
	nativeInit(0xE03B3F2D3DC59B64);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_WANDER_IN_AREA(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks) /*0xE054346CA3A0F315*/ {
	uint64_t val;
	nativeInit(0xE054346CA3A0F315);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(float*)(&val) = minimalLength;
	nativePush(val);
	*(float*)(&val) = timeBetweenWalks;
	nativePush(val);
	nativeCall();
}
inline void AI_CLEAR_PED_TASKS(Ped ped) /*0xE1EF3C1216AFF2CD*/ {
	uint64_t val;
	nativeInit(0xE1EF3C1216AFF2CD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_DRIVE_TO_COORD(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float p10) /*0xE2A2AA2F659D77A7*/ {
	uint64_t val;
	nativeInit(0xE2A2AA2F659D77A7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Hash*)(&val) = vehicleModel;
	nativePush(val);
	*(int*)(&val) = drivingMode;
	nativePush(val);
	*(float*)(&val) = stopRange;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_PED_PATH_CAN_DROP_FROM_HEIGHT(Ped ped, bool Toggle) /*0xE361C5C71C431A4F*/ {
	uint64_t val;
	nativeInit(0xE361C5C71C431A4F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_GOTO_ENTITY_OFFSET(Ped ped, Any p1, Any p2, float x, float y, float z, int duration) /*0xE39B4FF4FDEBDE27*/ {
	uint64_t val;
	nativeInit(0xE39B4FF4FDEBDE27);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_AIM_AT_PED(Ped ped, Ped target) /*0xE41885592B08B097*/ {
	uint64_t val;
	nativeInit(0xE41885592B08B097);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_PED_STRAFING(Ped ped) /*0xE45B7F222DE47E09*/ {
	uint64_t val;
	nativeInit(0xE45B7F222DE47E09);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_UPDATE_TASK_SWEEP_AIM_ENTITY(Ped ped, Entity entity) /*0xE4973DBDBE6E44B3*/ {
	uint64_t val;
	nativeInit(0xE4973DBDBE6E44B3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_DRIVEBY_TASK_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) /*0xE5B302114D8162EE*/ {
	uint64_t val;
	nativeInit(0xE5B302114D8162EE);
	*(Ped*)(&val) = shootingPed;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(Vehicle*)(&val) = targetVehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_STAY_IN_COVER(Ped ped) /*0xE5DA8615A6180789*/ {
	uint64_t val;
	nativeInit(0xE5DA8615A6180789);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline float AI_GET_PED_WAYPOINT_DISTANCE(Ped ped) /*0xE6A877C64CAF1BC5*/ {
	uint64_t val;
	nativeInit(0xE6A877C64CAF1BC5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void AI__WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(Any p0, Any p1, bool p2, Any p3) /*0xE70BA7B90F8390DC*/ {
	uint64_t val;
	nativeInit(0xE70BA7B90F8390DC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_PAUSE(Ped ped, int time) /*0xE73A266DB0CA9042*/ {
	uint64_t val;
	nativeInit(0xE73A266DB0CA9042);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline Any AI_OPEN_SEQUENCE_TASK(Object* taskSequence) /*0xE8854A4326B9E12B*/ {
	uint64_t val;
	nativeInit(0xE8854A4326B9E12B);
	*(Object**)(&val) = taskSequence;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_TASK_PLAY_ANIM(Ped ped, const char* animDictionary, const char* animationName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, bool lockX, bool lockY, bool lockZ) /*0xEA47FE3719165B94*/ {
	uint64_t val;
	nativeInit(0xEA47FE3719165B94);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animationName;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMultiplier;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(float*)(&val) = playbackRate;
	nativePush(val);
	*(bool*)(&val) = lockX;
	nativePush(val);
	*(bool*)(&val) = lockY;
	nativePush(val);
	*(bool*)(&val) = lockZ;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_SCENARIO_TYPE_ENABLED(const char* scenarioType, bool toggle) /*0xEB47EC4E34FB7EE1*/ {
	uint64_t val;
	nativeInit(0xEB47EC4E34FB7EE1);
	*(const char**)(&val) = scenarioType;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SET_DECISION_MAKER(Ped p0, Hash p1) /*0xEB8517DDA73720DA*/ {
	uint64_t val;
	nativeInit(0xEB8517DDA73720DA);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(Hash*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any AI_SET_PED_WAYPOINT_ROUTE_OFFSET(Ped ped, float offsetX, float offsetY, float offsetZ) /*0xED98E10B0AFCE4B4*/ {
	uint64_t val;
	nativeInit(0xED98E10B0AFCE4B4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AI_STOP_ANIM_PLAYBACK(Ped ped, int p1, bool p2) /*0xEE08C992D238C5D1*/ {
	uint64_t val;
	nativeInit(0xEE08C992D238C5D1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_SYNCHRONIZED_SCENE(Ped ped, int scene, const char* animDictionary, const char* animationName, float speed, float speedMultiplier, int headingFlag, int flag, float playbackRate, Any p9) /*0xEEA929141F699854*/ {
	uint64_t val;
	nativeInit(0xEEA929141F699854);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = scene;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animationName;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMultiplier;
	nativePush(val);
	*(int*)(&val) = headingFlag;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(float*)(&val) = playbackRate;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_VEHICLE_MISSION_COORS_TARGET(Ped ped, Vehicle vehicle, float x, float y, float z, int p5, int p6, int p7, float p8, float p9, bool p10) /*0xF0AF20AA7731F8C3*/ {
	uint64_t val;
	nativeInit(0xF0AF20AA7731F8C3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_MOVE_BLEND_RATIO_WALKING(Ped ped) /*0xF133BBBE91E1691F*/ {
	uint64_t val;
	nativeInit(0xF133BBBE91E1691F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_COMBAT_PED(Ped ped, Ped targetPed, int p2, int p3) /*0xF166E48407BAC484*/ {
	uint64_t val;
	nativeInit(0xF166E48407BAC484);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_NEXT_DESIRED_MOVE_STATE(float p0) /*0xF1B9F16E89E2C93A*/ {
	uint64_t val;
	nativeInit(0xF1B9F16E89E2C93A);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_HANDS_UP(Ped ped, int duration, Ped facingPed, int p3, bool p4) /*0xF2EAB31979A7F910*/ {
	uint64_t val;
	nativeInit(0xF2EAB31979A7F910);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Ped*)(&val) = facingPed;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AI_SET_PED_PATHS_WIDTH_PLANT(Ped ped, bool mayEnterWater) /*0xF35425A4204367EC*/ {
	uint64_t val;
	nativeInit(0xF35425A4204367EC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = mayEnterWater;
	nativePush(val);
	nativeCall();
}
inline void AI_TASK_ARREST_PED(Ped ped, Ped target) /*0xF3B9A78A178572B1*/ {
	uint64_t val;
	nativeInit(0xF3B9A78A178572B1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	nativeCall();
}
inline bool AI_IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(Any p0) /*0xF5134943EA29868C*/ {
	uint64_t val;
	nativeInit(0xF5134943EA29868C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AI_DOES_SCENARIO_GROUP_EXIST(const char* scenarioGroup) /*0xF9034C136C9E00D3*/ {
	uint64_t val;
	nativeInit(0xF9034C136C9E00D3);
	*(const char**)(&val) = scenarioGroup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AI_TASK_START_SCENARIO_AT_POSITION(Ped ped, const char* scenarioName, float x, float y, float z, float heading, int duration, bool sittingScenario, bool teleport) /*0xFA4EFC79F69D4F07*/ {
	uint64_t val;
	nativeInit(0xFA4EFC79F69D4F07);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = scenarioName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = sittingScenario;
	nativePush(val);
	*(bool*)(&val) = teleport;
	nativePush(val);
	nativeCall();
}
inline void AI__TASK_VEHICLE_FOLLOW(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance) /*0xFC545A9F0626E3B6*/ {
	uint64_t val;
	nativeInit(0xFC545A9F0626E3B6);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = targetEntity;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(int*)(&val) = drivingStyle;
	nativePush(val);
	*(int*)(&val) = minDistance;
	nativePush(val);
	nativeCall();
}
inline void AI_REMOVE_WAYPOINT_RECORDING(const char* name) /*0xFF1B8B4AA1C25DC8*/ {
	uint64_t val;
	nativeInit(0xFF1B8B4AA1C25DC8);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline float APP_APP_GET_FLOAT(const char* property) /*0x1514FB24C02C2322*/ {
	uint64_t val;
	nativeInit(0x1514FB24C02C2322);
	*(const char**)(&val) = property;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void APP_APP_SET_FLOAT(const char* property, float value) /*0x25D7687C68E0DAA4*/ {
	uint64_t val;
	nativeInit(0x25D7687C68E0DAA4);
	*(const char**)(&val) = property;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void APP_APP_SET_BLOCK(const char* blockName) /*0x262AB456A3D21F93*/ {
	uint64_t val;
	nativeInit(0x262AB456A3D21F93);
	*(const char**)(&val) = blockName;
	nativePush(val);
	nativeCall();
}
inline void APP_APP_SET_STRING(const char* property, const char* value) /*0x3FF2FCEC4B7721B4*/ {
	uint64_t val;
	nativeInit(0x3FF2FCEC4B7721B4);
	*(const char**)(&val) = property;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool APP_APP_DELETE_APP_DATA(const char* appName) /*0x44151AEA95C8A003*/ {
	uint64_t val;
	nativeInit(0x44151AEA95C8A003);
	*(const char**)(&val) = appName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void APP_APP_CLEAR_BLOCK() /*0x5FE1DF3342DB7DBA*/ {
	nativeInit(0x5FE1DF3342DB7DBA);
	nativeCall();
}
inline void APP_APP_SET_INT(const char* property, int value) /*0x607E8E3D3E4F9611*/ {
	uint64_t val;
	nativeInit(0x607E8E3D3E4F9611);
	*(const char**)(&val) = property;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool APP_APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT() /*0x71EEE69745088DA0*/ {
	nativeInit(0x71EEE69745088DA0); return *(bool*)(nativeCall());
}
inline const char* APP_APP_GET_STRING(const char* property) /*0x749B023950D2311C*/ {
	uint64_t val;
	nativeInit(0x749B023950D2311C);
	*(const char**)(&val) = property;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Hash APP_APP_DATA_VALID() /*0x846AA8E7D55EE5B6*/ {
	nativeInit(0x846AA8E7D55EE5B6); return *(Hash*)(nativeCall());
}
inline void APP_APP_SAVE_DATA() /*0x95C5D356CDA6E85F*/ {
	nativeInit(0x95C5D356CDA6E85F);
	nativeCall();
}
inline Any APP_APP_GET_DELETED_FILE_STATUS() /*0xC9853A2BE3DED1A6*/ {
	nativeInit(0xC9853A2BE3DED1A6); return *(Any*)(nativeCall());
}
inline bool APP_APP_HAS_SYNCED_DATA(const char* appName) /*0xCA52279A7271517F*/ {
	uint64_t val;
	nativeInit(0xCA52279A7271517F);
	*(const char**)(&val) = appName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void APP_APP_SET_APP(const char* appName) /*0xCFD0406ADAF90D2B*/ {
	uint64_t val;
	nativeInit(0xCFD0406ADAF90D2B);
	*(const char**)(&val) = appName;
	nativePush(val);
	nativeCall();
}
inline int* APP_APP_GET_INT(ScrHandle property) /*0xD3A58A12C77D9D4B*/ {
	uint64_t val;
	nativeInit(0xD3A58A12C77D9D4B);
	*(ScrHandle*)(&val) = property;
	nativePush(val);
	return *(int**)(nativeCall());
}
inline void APP_APP_CLOSE_APP() /*0xE41C65E07A5F05FC*/ {
	nativeInit(0xE41C65E07A5F05FC);
	nativeCall();
}
inline void APP_APP_CLOSE_BLOCK() /*0xE8E3FCF72EAC0EF8*/ {
	nativeInit(0xE8E3FCF72EAC0EF8);
	nativeCall();
}
inline bool AUDIO_START_AUDIO_SCENE(const char* scene) /*0x013A80FC08F6E4F2*/ {
	uint64_t val;
	nativeInit(0x013A80FC08F6E4F2);
	*(const char**)(&val) = scene;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x0150B6FF25A9E2E5() /*0x0150B6FF25A9E2E5*/ {
	nativeInit(0x0150B6FF25A9E2E5);
	nativeCall();
}
inline void AUDIO_0x01BB4D577D38BD9E(Any p0, float p1) /*0x01BB4D577D38BD9E*/ {
	uint64_t val;
	nativeInit(0x01BB4D577D38BD9E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_AMBIENT_ZONE_ENABLED(const char* ambientZone) /*0x01E2817A479A7F9B*/ {
	uint64_t val;
	nativeInit(0x01E2817A479A7F9B);
	*(const char**)(&val) = ambientZone;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash AUDIO_GET_VEHICLE_DEFAULT_HORN(Vehicle vehicle) /*0x02165D55000219AC*/ {
	uint64_t val;
	nativeInit(0x02165D55000219AC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool AUDIO_PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(int SceneID, const char* audioName) /*0x029FE7CD1B7E2E75*/ {
	uint64_t val;
	nativeInit(0x029FE7CD1B7E2E75);
	*(int*)(&val) = SceneID;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x02E93C796ABD3A97(bool p0) /*0x02E93C796ABD3A97*/ {
	uint64_t val;
	nativeInit(0x02E93C796ABD3A97);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x031ACB6ABA18C729(const char* radioStation, const char* p1) /*0x031ACB6ABA18C729*/ {
	uint64_t val;
	nativeInit(0x031ACB6ABA18C729);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO__IS_VEHICLE_RADIO_LOUD(Vehicle vehicle) /*0x032A116663A4D5AC*/ {
	uint64_t val;
	nativeInit(0x032A116663A4D5AC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_START_ALARM(const char* alarmName, bool p2) /*0x0355EF116C4C97B2*/ {
	uint64_t val;
	nativeInit(0x0355EF116C4C97B2);
	*(const char**)(&val) = alarmName;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x044DBAD7A7FA2BE5(const char* p0, const char* p1) /*0x044DBAD7A7FA2BE5*/ {
	uint64_t val;
	nativeInit(0x044DBAD7A7FA2BE5);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_PED_IN_CURRENT_CONVERSATION(Ped ped) /*0x049E937F18F4020C*/ {
	uint64_t val;
	nativeInit(0x049E937F18F4020C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_0x0626A247D2405330() /*0x0626A247D2405330*/ {
	nativeInit(0x0626A247D2405330); return *(bool*)(nativeCall());
}
inline void AUDIO_0x062D5EAD4DA2FA6A() /*0x062D5EAD4DA2FA6A*/ {
	nativeInit(0x062D5EAD4DA2FA6A);
	nativeCall();
}
inline void AUDIO_0x06C0023BED16DD6B(Any p0, bool p1) /*0x06C0023BED16DD6B*/ {
	uint64_t val;
	nativeInit(0x06C0023BED16DD6B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x0B568201DD99F0EB(bool p0) /*0x0B568201DD99F0EB*/ {
	uint64_t val;
	nativeInit(0x0B568201DD99F0EB);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RELEASE_MISSION_AUDIO_BANK() /*0x0EC92A1BF0857187*/ {
	nativeInit(0x0EC92A1BF0857187);
	nativeCall();
}
inline bool AUDIO_0x109697E2FFBAC8A1() /*0x109697E2FFBAC8A1*/ {
	nativeInit(0x109697E2FFBAC8A1); return *(bool*)(nativeCall());
}
inline void AUDIO_SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(bool Toggle) /*0x1098355A16064BB3*/ {
	uint64_t val;
	nativeInit(0x1098355A16064BB3);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_CLEAR_AMBIENT_ZONE_LIST_STATE(Any* p0, bool p1) /*0x120C48C614909FA4*/ {
	uint64_t val;
	nativeInit(0x120C48C614909FA4);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x12561FCBB62D5B9C(int p0) /*0x12561FCBB62D5B9C*/ {
	uint64_t val;
	nativeInit(0x12561FCBB62D5B9C);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_OVERRIDE_TREVOR_RAGE(const char* p0) /*0x13AD665062541A7E*/ {
	uint64_t val;
	nativeInit(0x13AD665062541A7E);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x149AEE66F0CB3A99(float p0, float p1) /*0x149AEE66F0CB3A99*/ {
	uint64_t val;
	nativeInit(0x149AEE66F0CB3A99);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__DYNAMIC_MIXER_RELATED_FN(Entity p0, const char* p1, float p2) /*0x153973AB99FE8980*/ {
	uint64_t val;
	nativeInit(0x153973AB99FE8980);
	*(Entity*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x1654F24A88A8E3FE(const char* radioStation) /*0x1654F24A88A8E3FE*/ {
	uint64_t val;
	nativeInit(0x1654F24A88A8E3FE);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_SCRIPTED_CONVERSATION_ONGOING() /*0x16754C556D2EDE3D*/ {
	nativeInit(0x16754C556D2EDE3D); return *(bool*)(nativeCall());
}
inline void AUDIO_0x18EB48CFC41F2EA0(Any p0, float p1) /*0x18EB48CFC41F2EA0*/ {
	uint64_t val;
	nativeInit(0x18EB48CFC41F2EA0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_MISSION_COMPLETE_PLAYING() /*0x19A30C23F5827F8A*/ {
	nativeInit(0x19A30C23F5827F8A); return *(bool*)(nativeCall());
}
inline void AUDIO_0x19AF7ED9B9D23058() /*0x19AF7ED9B9D23058*/ {
	nativeInit(0x19AF7ED9B9D23058);
	nativeCall();
}
inline void AUDIO_SET_USER_RADIO_CONTROL_ENABLED(bool toggle) /*0x19F21E63AE6EAE4E*/ {
	uint64_t val;
	nativeInit(0x19F21E63AE6EAE4E);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_BLIP_SIREN(Vehicle vehicle) /*0x1B9025BDA76822B6*/ {
	uint64_t val;
	nativeInit(0x1B9025BDA76822B6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_VEH_RADIO_STATION(Vehicle vehicle, const char* radioStation) /*0x1B9C0099CB942AC6*/ {
	uint64_t val;
	nativeInit(0x1B9C0099CB942AC6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x1C073274E065C6D2(Any p0, bool p1) /*0x1C073274E065C6D2*/ {
	uint64_t val;
	nativeInit(0x1C073274E065C6D2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AMBIENT_ZONE_STATE_PERSISTENT(const char* ambientZone, bool p1, bool p2) /*0x1D6650420CEC9D3B*/ {
	uint64_t val;
	nativeInit(0x1D6650420CEC9D3B);
	*(const char**)(&val) = ambientZone;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_PREPARE_MUSIC_EVENT(const char* eventName) /*0x1E5185B72EF5158A*/ {
	uint64_t val;
	nativeInit(0x1E5185B72EF5158A);
	*(const char**)(&val) = eventName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_IS_PED_RINGTONE_PLAYING(Ped ped) /*0x1E8E5E20937E3137*/ {
	uint64_t val;
	nativeInit(0x1E8E5E20937E3137);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_LOAD_STREAM(const char* streamName, const char* soundSet) /*0x1F1F957154EC51DF*/ {
	uint64_t val;
	nativeInit(0x1F1F957154EC51DF);
	*(const char**)(&val) = streamName;
	nativePush(val);
	*(const char**)(&val) = soundSet;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_SET_SIREN_WITH_NO_DRIVER(Vehicle vehicle, bool toggle) /*0x1FEF0683B96EBCF2*/ {
	uint64_t val;
	nativeInit(0x1FEF0683B96EBCF2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SPECIAL_FRONTEND_EQUAL(float x, float y, float z) /*0x21442F412E8DE56B*/ {
	uint64_t val;
	nativeInit(0x21442F412E8DE56B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1) /*0x218DD44AAAC964FF*/ {
	uint64_t val;
	nativeInit(0x218DD44AAAC964FF);
	*(const char**)(&val) = zoneName;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_ALARM_PLAYING(const char* alarmName) /*0x226435CB96CCFC8C*/ {
	uint64_t val;
	nativeInit(0x226435CB96CCFC8C);
	*(const char**)(&val) = alarmName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_START_PRELOADED_CONVERSATION() /*0x23641AFE870AF385*/ {
	nativeInit(0x23641AFE870AF385);
	nativeCall();
}
inline void AUDIO_START_SCRIPT_PHONE_CONVERSATION(bool p0, bool p1) /*0x252E5F915EABB675*/ {
	uint64_t val;
	nativeInit(0x252E5F915EABB675);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x2BE4BC731D039D5A(Any p0, bool p1) /*0x2BE4BC731D039D5A*/ {
	uint64_t val;
	nativeInit(0x2BE4BC731D039D5A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x2C96CDB04FCA358E(float p0) /*0x2C96CDB04FCA358E*/ {
	uint64_t val;
	nativeInit(0x2C96CDB04FCA358E);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int AUDIO_GET_NETWORK_ID_FROM_SOUND_ID(int soundId) /*0x2DE3F0A134FFBC0D*/ {
	uint64_t val;
	nativeInit(0x2DE3F0A134FFBC0D);
	*(int*)(&val) = soundId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AUDIO_STOP_ALL_ALARMS(bool stop) /*0x2F794A877ADD4C92*/ {
	uint64_t val;
	nativeInit(0x2F794A877ADD4C92);
	*(bool*)(&val) = stop;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_REQUEST_SCRIPT_AUDIO_BANK(const char* p0, bool p1) /*0x2F844A8B08D76685*/ {
	uint64_t val;
	nativeInit(0x2F844A8B08D76685);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_SET_VARIABLE_ON_STREAM(const char* p0, float p1) /*0x2F9D3834AEB9EF79*/ {
	uint64_t val;
	nativeInit(0x2F9D3834AEB9EF79);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x33E3C6C6F2F0B506(Any p0, float p1, float p2, float p3) /*0x33E3C6C6F2F0B506*/ {
	uint64_t val;
	nativeInit(0x33E3C6C6F2F0B506);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_FREEZE_RADIO_STATION(const char* radioStation) /*0x344F393B027E38C3*/ {
	uint64_t val;
	nativeInit(0x344F393B027E38C3);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__PLAY_AMBIENT_SPEECH_WITH_VOICE(Ped p0, const char* speechName, const char* voiceName, const char* speechParam, bool p4) /*0x3523634255FC3318*/ {
	uint64_t val;
	nativeInit(0x3523634255FC3318);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = speechName;
	nativePush(val);
	*(const char**)(&val) = voiceName;
	nativePush(val);
	*(const char**)(&val) = speechParam;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RELEASE_SOUND_ID(int soundId) /*0x353FC880830B88FA*/ {
	uint64_t val;
	nativeInit(0x353FC880830B88FA);
	*(int*)(&val) = soundId;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AGGRESSIVE_HORNS(bool toggle) /*0x395BF71085D1B1D9*/ {
	uint64_t val;
	nativeInit(0x395BF71085D1B1D9);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_STATIC_EMITTER_ENABLED(const char* emitterName, bool toggle) /*0x399D2D3B33F1B8EB*/ {
	uint64_t val;
	nativeInit(0x399D2D3B33F1B8EB);
	*(const char**)(&val) = emitterName;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_0x3A48AB4445D499BE() /*0x3A48AB4445D499BE*/ {
	nativeInit(0x3A48AB4445D499BE); return *(bool*)(nativeCall());
}
inline void AUDIO_PLAY_VEHICLE_DOOR_OPEN_SOUND(Vehicle vehicle, int p1) /*0x3A539D52857EA82D*/ {
	uint64_t val;
	nativeInit(0x3A539D52857EA82D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PRELOAD_SCRIPT_CONVERSATION(bool p0, bool p1, bool p2, bool p3) /*0x3B3CAD6166916D87*/ {
	uint64_t val;
	nativeInit(0x3B3CAD6166916D87);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_CUTSCENE_AUDIO_OVERRIDE(const char* p0) /*0x3B4BF5F0859204D9*/ {
	uint64_t val;
	nativeInit(0x3B4BF5F0859204D9);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_VEHICLE_RADIO_ENABLED(Vehicle vehicle, bool toggle) /*0x3B988190C0AA6C0B*/ {
	uint64_t val;
	nativeInit(0x3B988190C0AA6C0B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_GPS_ACTIVE(bool active) /*0x3BD3F52BA9B1E4E8*/ {
	uint64_t val;
	nativeInit(0x3BD3F52BA9B1E4E8);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_OVERRIDE_VEH_HORN(Vehicle vehicle, bool mute, int p2) /*0x3CDC1E622CCE0356*/ {
	uint64_t val;
	nativeInit(0x3CDC1E622CCE0356);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = mute;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__RESET_AMBIENT_VOICE(Ped ped) /*0x40CF0D12D142A9E8*/ {
	uint64_t val;
	nativeInit(0x40CF0D12D142A9E8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int AUDIO_GET_SOUND_ID() /*0x430386FE9BF80B45*/ {
	nativeInit(0x430386FE9BF80B45); return *(int*)(nativeCall());
}
inline void AUDIO_0x43FA0DFC5DF87815(Vehicle vehicle, bool p1) /*0x43FA0DFC5DF87815*/ {
	uint64_t val;
	nativeInit(0x43FA0DFC5DF87815);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_GET_CURRENT_SCRIPTED_CONVERSATION_LINE() /*0x480357EE890C295A*/ {
	nativeInit(0x480357EE890C295A); return *(Any*)(nativeCall());
}
inline bool AUDIO__CAN_PED_SPEAK(Ped ped, const char* speechName, bool unk) /*0x49B99BF3FDA89A7A*/ {
	uint64_t val;
	nativeInit(0x49B99BF3FDA89A7A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = speechName;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_SET_VEHICLE_BOOST_ACTIVE(Vehicle vehicle, bool toggle) /*0x4A04DE7CAB2739A1*/ {
	uint64_t val;
	nativeInit(0x4A04DE7CAB2739A1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__SET_PED_TALK(Ped ped) /*0x4ADA3F19BE4A6047*/ {
	uint64_t val;
	nativeInit(0x4ADA3F19BE4A6047);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x4E404A9361F75BB2(const char* radioStation, const char* p1, bool p2) /*0x4E404A9361F75BB2*/ {
	uint64_t val;
	nativeInit(0x4E404A9361F75BB2);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int AUDIO_GET_STREAM_PLAY_TIME() /*0x4E72BBDBCA58A3DB*/ {
	nativeInit(0x4E72BBDBCA58A3DB); return *(int*)(nativeCall());
}
inline void AUDIO__FORCE_VEHICLE_ENGINE_AUDIO(Vehicle vehicle, const char* audioName) /*0x4F0C413926060B38*/ {
	uint64_t val;
	nativeInit(0x4F0C413926060B38);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	nativeCall();
}
inline int AUDIO_GET_AUDIBLE_MUSIC_TRACK_TEXT_ID() /*0x50B196FC9ED6545B*/ {
	nativeInit(0x50B196FC9ED6545B); return *(int*)(nativeCall());
}
inline bool AUDIO_0x544810ED9DB6BBE6() /*0x544810ED9DB6BBE6*/ {
	nativeInit(0x544810ED9DB6BBE6); return *(bool*)(nativeCall());
}
inline void AUDIO__FORCE_AMBIENT_SIREN(bool value) /*0x552369F549563AD5*/ {
	uint64_t val;
	nativeInit(0x552369F549563AD5);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x58BB377BEC7CD5F4(bool p0, bool p1) /*0x58BB377BEC7CD5F4*/ {
	uint64_t val;
	nativeInit(0x58BB377BEC7CD5F4);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_STREAM_FRONTEND() /*0x58FCE43488F9F5F4*/ {
	nativeInit(0x58FCE43488F9F5F4);
	nativeCall();
}
inline bool AUDIO_LOAD_STREAM_WITH_START_OFFSET(const char* streamName, int startOffset, const char* soundSet) /*0x59C16B79F53B3712*/ {
	uint64_t val;
	nativeInit(0x59C16B79F53B3712);
	*(const char**)(&val) = streamName;
	nativePush(val);
	*(int*)(&val) = startOffset;
	nativePush(val);
	*(const char**)(&val) = soundSet;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x59E7B488451F4D3A(Any p0, float p1) /*0x59E7B488451F4D3A*/ {
	uint64_t val;
	nativeInit(0x59E7B488451F4D3A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_CANCEL_MUSIC_EVENT(const char* eventName) /*0x5B17A90291133DA5*/ {
	uint64_t val;
	nativeInit(0x5B17A90291133DA5);
	*(const char**)(&val) = eventName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_0x5B50ABB1FE3746F4() /*0x5B50ABB1FE3746F4*/ {
	nativeInit(0x5B50ABB1FE3746F4); return *(bool*)(nativeCall());
}
inline bool AUDIO_0x5DB8010EE71FDEF2(Vehicle vehicle) /*0x5DB8010EE71FDEF2*/ {
	uint64_t val;
	nativeInit(0x5DB8010EE71FDEF2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO__IS_PLAYER_VEHICLE_RADIO_ENABLED() /*0x5F43D83FD6738741*/ {
	nativeInit(0x5F43D83FD6738741); return *(bool*)(nativeCall());
}
inline void AUDIO_PRELOAD_SCRIPT_PHONE_CONVERSATION(bool p0, bool p1) /*0x6004BCB0E226AAEA*/ {
	uint64_t val;
	nativeInit(0x6004BCB0E226AAEA);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x61631F5DF50D1C34(bool p0) /*0x61631F5DF50D1C34*/ {
	uint64_t val;
	nativeInit(0x61631F5DF50D1C34);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_VEHICLE_DOOR_CLOSE_SOUND(Vehicle vehicle, int p1) /*0x62A456AA4769EF34*/ {
	uint64_t val;
	nativeInit(0x62A456AA4769EF34);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RELEASE_AMBIENT_AUDIO_BANK() /*0x65475A218FFAA93D*/ {
	nativeInit(0x65475A218FFAA93D);
	nativeCall();
}
inline int AUDIO_GET_NUMBER_OF_PASSENGER_VOICE_VARIATIONS(Any p0) /*0x66E49BF55B4B1874*/ {
	uint64_t val;
	nativeInit(0x66E49BF55B4B1874);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AUDIO_PLAY_SOUND_FRONTEND(int soundId, const char* audioName, const char* audioRef, bool p3) /*0x67C540AA08E4A6F5*/ {
	uint64_t val;
	nativeInit(0x67C540AA08E4A6F5);
	*(int*)(&val) = soundId;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	*(const char**)(&val) = audioRef;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_START_SCRIPT_CONVERSATION(bool p0, bool p1, bool p2, bool p3) /*0x6B17C62C9635D2DC*/ {
	uint64_t val;
	nativeInit(0x6B17C62C9635D2DC);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_PED_RINGTONE(Ped ped) /*0x6C5AE23EFA885092*/ {
	uint64_t val;
	nativeInit(0x6C5AE23EFA885092);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AMBIENT_VOICE_NAME(Ped ped, const char* name) /*0x6C8065A3B780185B*/ {
	uint64_t val;
	nativeInit(0x6C8065A3B780185B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_GAME_IN_CONTROL_OF_MUSIC() /*0x6D28DC1671E334FD*/ {
	nativeInit(0x6D28DC1671E334FD); return *(bool*)(nativeCall());
}
inline void AUDIO_SKIP_RADIO_FORWARD() /*0x6DDBBDD98E2E9C25*/ {
	nativeInit(0x6DDBBDD98E2E9C25);
	nativeCall();
}
inline bool AUDIO_0x6F259F82D873B8B8() /*0x6F259F82D873B8B8*/ {
	nativeInit(0x6F259F82D873B8B8); return *(bool*)(nativeCall());
}
inline void AUDIO_0x6FDDAD856E36988A(Any p0, bool p1) /*0x6FDDAD856E36988A*/ {
	uint64_t val;
	nativeInit(0x6FDDAD856E36988A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_TRIGGER_MUSIC_EVENT(const char* eventName) /*0x706D57B0F50DA710*/ {
	uint64_t val;
	nativeInit(0x706D57B0F50DA710);
	*(const char**)(&val) = eventName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x70B8EC8FC108A634(bool p0, Any p1) /*0x70B8EC8FC108A634*/ {
	uint64_t val;
	nativeInit(0x70B8EC8FC108A634);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_ANY_SPEECH_PLAYING(Ped ped) /*0x729072355FA39EC9*/ {
	uint64_t val;
	nativeInit(0x729072355FA39EC9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x733ADF241531E5C2(const char* name, float p1) /*0x733ADF241531E5C2*/ {
	uint64_t val;
	nativeInit(0x733ADF241531E5C2);
	*(const char**)(&val) = name;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_REQUEST_MISSION_AUDIO_BANK(const char* p0, bool p1) /*0x7345BDD95E62E0F2*/ {
	uint64_t val;
	nativeInit(0x7345BDD95E62E0F2);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_IS_MOBILE_PHONE_CALL_ONGOING() /*0x7497D2CE2C30D24C*/ {
	nativeInit(0x7497D2CE2C30D24C); return *(bool*)(nativeCall());
}
inline int AUDIO_GET_SOUND_ID_FROM_NETWORK_ID(int netId) /*0x75262FD12D0A1C84*/ {
	uint64_t val;
	nativeInit(0x75262FD12D0A1C84);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AUDIO_0x75773E11BA459E90(Any p0, bool p1) /*0x75773E11BA459E90*/ {
	uint64_t val;
	nativeInit(0x75773E11BA459E90);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_HORN_ENABLED(Vehicle vehicle, bool toggle) /*0x76D683C108594D0E*/ {
	uint64_t val;
	nativeInit(0x76D683C108594D0E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x774BD811F656A122(const char* radioStation, bool p1) /*0x774BD811F656A122*/ {
	uint64_t val;
	nativeInit(0x774BD811F656A122);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RELEASE_NAMED_SCRIPT_AUDIO_BANK(const char* audioBank) /*0x77ED170667F50170*/ {
	uint64_t val;
	nativeInit(0x77ED170667F50170);
	*(const char**)(&val) = audioBank;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RELEASE_SCRIPT_AUDIO_BANK() /*0x7A2D8AD0A9EB9C3F*/ {
	nativeInit(0x7A2D8AD0A9EB9C3F);
	nativeCall();
}
inline void AUDIO__SET_PED_MUTE(Ped ped) /*0x7A73D05A607734C7*/ {
	uint64_t val;
	nativeInit(0x7A73D05A607734C7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x7CDC8C3B89F661B3(Ped playerPed, Hash p1) /*0x7CDC8C3B89F661B3*/ {
	uint64_t val;
	nativeInit(0x7CDC8C3B89F661B3);
	*(Ped*)(&val) = playerPed;
	nativePush(val);
	*(Hash*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_SOUND(Player soundId, const char* audioName, const char* audioRef, bool p3, Any p4, bool p5) /*0x7FF4944CC209192D*/ {
	uint64_t val;
	nativeInit(0x7FF4944CC209192D);
	*(Player*)(&val) = soundId;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	*(const char**)(&val) = audioRef;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x806058BBDC136E06() /*0x806058BBDC136E06*/ {
	nativeInit(0x806058BBDC136E06);
	nativeCall();
}
inline bool AUDIO_AUDIO_IS_SCRIPTED_MUSIC_PLAYING() /*0x845FFC3A4FEEFA3E*/ {
	nativeInit(0x845FFC3A4FEEFA3E); return *(bool*)(nativeCall());
}
inline void AUDIO_PAUSE_SCRIPTED_CONVERSATION(bool p0) /*0x8530AD776CD72B12*/ {
	uint64_t val;
	nativeInit(0x8530AD776CD72B12);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_INITIAL_PLAYER_STATION(const char* radioStation) /*0x88795F13FACDA88D*/ {
	uint64_t val;
	nativeInit(0x88795F13FACDA88D);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_STREAM_FROM_PED(Ped ped) /*0x89049DD63C08B5D1*/ {
	uint64_t val;
	nativeInit(0x89049DD63C08B5D1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x892B6AB8F33606F5(Any p0, Any p1) /*0x892B6AB8F33606F5*/ {
	uint64_t val;
	nativeInit(0x892B6AB8F33606F5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x8A694D7A68F8DC38(Ped p0, const char* p1, const char* p2) /*0x8A694D7A68F8DC38*/ {
	uint64_t val;
	nativeInit(0x8A694D7A68F8DC38);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_PLAY_SYNCHRONIZED_AUDIO_EVENT(int SceneID) /*0x8B2FD4560E55DD2D*/ {
	uint64_t val;
	nativeInit(0x8B2FD4560E55DD2D);
	*(int*)(&val) = SceneID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0x8BF907833BE275DE(float p0, float p1) /*0x8BF907833BE275DE*/ {
	uint64_t val;
	nativeInit(0x8BF907833BE275DE);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int AUDIO_FIND_RADIO_STATION_INDEX(int station) /*0x8D67489793FF428B*/ {
	uint64_t val;
	nativeInit(0x8D67489793FF428B);
	*(int*)(&val) = station;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void AUDIO_PLAY_SOUND_FROM_COORD(int soundId, const char* audioName, float x, float y, float z, const char* audioRef, bool p6, int range, bool p8) /*0x8D8686B622B88120*/ {
	uint64_t val;
	nativeInit(0x8D8686B622B88120);
	*(int*)(&val) = soundId;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(const char**)(&val) = audioRef;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = range;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__PLAY_AMBIENT_SPEECH1(Ped ped, const char* speechName, const char* speechParam) /*0x8E04FEDD28D42462*/ {
	uint64_t val;
	nativeInit(0x8E04FEDD28D42462);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = speechName;
	nativePush(val);
	*(const char**)(&val) = speechParam;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_HINT_AMBIENT_AUDIO_BANK(Any p0, Any p1) /*0x8F8C0E370AE62F5C*/ {
	uint64_t val;
	nativeInit(0x8F8C0E370AE62F5C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool AUDIO_IS_AMBIENT_SPEECH_PLAYING(Ped p0) /*0x9072C8B49907BFAD*/ {
	uint64_t val;
	nativeInit(0x9072C8B49907BFAD);
	*(Ped*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_STOP_SYNCHRONIZED_AUDIO_EVENT(int SceneID) /*0x92D6A88E64A94430*/ {
	uint64_t val;
	nativeInit(0x92D6A88E64A94430);
	*(int*)(&val) = SceneID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_IS_AMBIENT_SPEECH_DISABLED(Ped ped) /*0x932C2D096A2C3FFF*/ {
	uint64_t val;
	nativeInit(0x932C2D096A2C3FFF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO__SET_SYNCHRONIZED_AUDIO_EVENT_POSITION_THIS_FRAME(const char* p0, Entity p1) /*0x950A154B8DAB6185*/ {
	uint64_t val;
	nativeInit(0x950A154B8DAB6185);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Entity*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_PED_IS_DRUNK(Ped ped, bool toggle) /*0x95D2D383D5396B8A*/ {
	uint64_t val;
	nativeInit(0x95D2D383D5396B8A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_ADD_PED_TO_CONVERSATION(int pedIndex, Ped ped, const char* name) /*0x95D9F4BC443956E7*/ {
	uint64_t val;
	nativeInit(0x95D9F4BC443956E7);
	*(int*)(&val) = pedIndex;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE() /*0x9663FE6B7A61EB00*/ {
	nativeInit(0x9663FE6B7A61EB00);
	nativeCall();
}
inline void AUDIO_SET_AMBIENT_ZONE_LIST_STATE(const char* p0, bool p1, bool p2) /*0x9748FA4DE50CCE3E*/ {
	uint64_t val;
	nativeInit(0x9748FA4DE50CCE3E);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x9AC92EED5E4793AB() /*0x9AC92EED5E4793AB*/ {
	nativeInit(0x9AC92EED5E4793AB);
	nativeCall();
}
inline void AUDIO_RESTART_SCRIPTED_CONVERSATION() /*0x9AEB285D1818C9AC*/ {
	nativeInit(0x9AEB285D1818C9AC);
	nativeCall();
}
inline void AUDIO__SOUND_VEHICLE_HORN_THIS_FRAME(Vehicle vehicle) /*0x9C11908013EA4715*/ {
	uint64_t val;
	nativeInit(0x9C11908013EA4715);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0x9D3AF56E94C9AE98(Any p0, float p1) /*0x9D3AF56E94C9AE98*/ {
	uint64_t val;
	nativeInit(0x9D3AF56E94C9AE98);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_PED_SPEAKING(Ped ped, bool speaking) /*0x9D64D7405520E3D3*/ {
	uint64_t val;
	nativeInit(0x9D64D7405520E3D3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = speaking;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_HORN_ACTIVE(Vehicle vehicle) /*0x9D6BFC12B05C6121*/ {
	uint64_t val;
	nativeInit(0x9D6BFC12B05C6121);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_PREPARE_ALARM(const char* alarmName) /*0x9D74AE343DB65533*/ {
	uint64_t val;
	nativeInit(0x9D74AE343DB65533);
	*(const char**)(&val) = alarmName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_INTERRUPT_CONVERSATION(Any p0, Any* p1, Any* p2) /*0xA018A12E5C5C2FA6*/ {
	uint64_t val;
	nativeInit(0xA018A12E5C5C2FA6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_0xA097AB275061FB21() /*0xA097AB275061FB21*/ {
	nativeInit(0xA097AB275061FB21); return *(Any*)(nativeCall());
}
inline bool AUDIO_IS_RADIO_RETUNING() /*0xA151A7394A214E65*/ {
	nativeInit(0xA151A7394A214E65); return *(bool*)(nativeCall());
}
inline void AUDIO_STOP_ALARM(const char* alarmName, bool toggle) /*0xA1CADDCD98415A41*/ {
	uint64_t val;
	nativeInit(0xA1CADDCD98415A41);
	*(const char**)(&val) = alarmName;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_SOUND(int soundId) /*0xA3B0C41BA5CC0BB5*/ {
	uint64_t val;
	nativeInit(0xA3B0C41BA5CC0BB5);
	*(int*)(&val) = soundId;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_STREAM() /*0xA4718A1419D18151*/ {
	nativeInit(0xA4718A1419D18151);
	nativeCall();
}
inline void AUDIO_0xA5342D390CDA41D6(Any p0, bool p1) /*0xA5342D390CDA41D6*/ {
	uint64_t val;
	nativeInit(0xA5342D390CDA41D6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_GET_PLAYER_RADIO_STATION_GENRE() /*0xA571991A7FE6CCEB*/ {
	nativeInit(0xA571991A7FE6CCEB); return *(Any*)(nativeCall());
}
inline void AUDIO_0xA5F377B175A699C5(Any p0) /*0xA5F377B175A699C5*/ {
	uint64_t val;
	nativeInit(0xA5F377B175A699C5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_RADIO_TO_STATION_INDEX(int radioStation) /*0xA619B168B8A8570F*/ {
	uint64_t val;
	nativeInit(0xA619B168B8A8570F);
	*(int*)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_UNREGISTER_SCRIPT_WITH_AUDIO() /*0xA8638BE228D4751A*/ {
	nativeInit(0xA8638BE228D4751A);
	nativeCall();
}
inline void AUDIO_DISABLE_PED_PAIN_AUDIO(Ped ped, bool toggle) /*0xA9A41C1E940FB0E8*/ {
	uint64_t val;
	nativeInit(0xA9A41C1E940FB0E8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_0xAA19F5572C38B564(Any* p0) /*0xAA19F5572C38B564*/ {
	uint64_t val;
	nativeInit(0xAA19F5572C38B564);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Hash AUDIO__GET_VEHICLE_HORN_HASH(Vehicle vehicle) /*0xACB5DCCA1EC76840*/ {
	uint64_t val;
	nativeInit(0xACB5DCCA1EC76840);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void AUDIO_SET_EMITTER_RADIO_STATION(const char* emitterName, const char* radioStation) /*0xACF57305B12AF907*/ {
	uint64_t val;
	nativeInit(0xACF57305B12AF907);
	*(const char**)(&val) = emitterName;
	nativePush(val);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_VARIABLE_ON_SOUND(int soundId, const char* variableName, float value) /*0xAD6B3148A78AE9B6*/ {
	uint64_t val;
	nativeInit(0xAD6B3148A78AE9B6);
	*(int*)(&val) = soundId;
	nativePush(val);
	*(const char**)(&val) = variableName;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_MISSION_COMPLETE_AUDIO(const char* audioName) /*0xB138AAB8A70D3C69*/ {
	uint64_t val;
	nativeInit(0xB138AAB8A70D3C69);
	*(const char**)(&val) = audioName;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_UNLOCK_MISSION_NEWS_STORY(int newsStory) /*0xB165AB7C248B2DC1*/ {
	uint64_t val;
	nativeInit(0xB165AB7C248B2DC1);
	*(int*)(&val) = newsStory;
	nativePush(val);
	nativeCall();
}
inline const char* AUDIO_GET_RADIO_STATION_NAME(int radioStation) /*0xB28ECA15046CA8B9*/ {
	uint64_t val;
	nativeInit(0xB28ECA15046CA8B9);
	*(int*)(&val) = radioStation;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void AUDIO_CLEAR_ALL_BROKEN_GLASS() /*0xB32209EFFDC04913*/ {
	nativeInit(0xB32209EFFDC04913);
	nativeCall();
}
inline bool AUDIO_IS_MOBILE_PHONE_RADIO_ACTIVE() /*0xB35CE999E8EF317E*/ {
	nativeInit(0xB35CE999E8EF317E); return *(bool*)(nativeCall());
}
inline void AUDIO_SET_RADIO_TRACK(const char* radioStation, const char* radioTrack) /*0xB39786F201FEE30B*/ {
	uint64_t val;
	nativeInit(0xB39786F201FEE30B);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	*(const char**)(&val) = radioTrack;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xB4BBFD9CD8B3922B(const char* p0) /*0xB4BBFD9CD8B3922B*/ {
	uint64_t val;
	nativeInit(0xB4BBFD9CD8B3922B);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__DISABLE_POLICE_REPORTS() /*0xB4F90FAF7670B16F*/ {
	nativeInit(0xB4F90FAF7670B16F);
	nativeCall();
}
inline void AUDIO_0xB542DE8C3D1CB210(bool p0) /*0xB542DE8C3D1CB210*/ {
	uint64_t val;
	nativeInit(0xB542DE8C3D1CB210);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_AUDIO_SCENE_ACTIVE(const char* scene) /*0xB65B60556E2A9225*/ {
	uint64_t val;
	nativeInit(0xB65B60556E2A9225);
	*(const char**)(&val) = scene;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_SET_MICROPHONE_POSITION(bool p0, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3) /*0xB6AE90EDDE95C762*/ {
	uint64_t val;
	nativeInit(0xB6AE90EDDE95C762);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = x3;
	nativePush(val);
	*(float*)(&val) = y3;
	nativePush(val);
	*(float*)(&val) = z3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_STREAM_FROM_VEHICLE(Vehicle vehicle) /*0xB70374A758007DFA*/ {
	uint64_t val;
	nativeInit(0xB70374A758007DFA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_CURRENT_PLAYING_AMBIENT_SPEECH(Ped ped) /*0xB8BEC0CA6F0EDB0F*/ {
	uint64_t val;
	nativeInit(0xB8BEC0CA6F0EDB0F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AUDIO_FLAG(const char* flagName, bool toggle) /*0xB9EFD5C25018725A*/ {
	uint64_t val;
	nativeInit(0xB9EFD5C25018725A);
	*(const char**)(&val) = flagName;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_STOP_AUDIO_SCENES() /*0xBAC7FC81A75EC1A1*/ {
	nativeInit(0xBAC7FC81A75EC1A1);
	nativeCall();
}
inline void AUDIO_SET_VEHICLE_RADIO_LOUD(Vehicle vehicle, bool toggle) /*0xBB6F1CAEC68B0BCE*/ {
	uint64_t val;
	nativeInit(0xBB6F1CAEC68B0BCE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_PAIN(Ped ped, int painID, float p1) /*0xBC9AE166038A5CEC*/ {
	uint64_t val;
	nativeInit(0xBC9AE166038A5CEC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = painID;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_GET_PLAYER_HEADSET_SOUND_ALTERNATE(const char* p0, float p1) /*0xBCC29F935ED07688*/ {
	uint64_t val;
	nativeInit(0xBCC29F935ED07688);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AMBIENT_ZONE_STATE(Any* p0, bool p1, bool p2) /*0xBDA07E5950085E46*/ {
	uint64_t val;
	nativeInit(0xBDA07E5950085E46);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xBEF34B1D9624D5DD(bool p0) /*0xBEF34B1D9624D5DD*/ {
	uint64_t val;
	nativeInit(0xBEF34B1D9624D5DD);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_MOBILE_PHONE_RADIO_STATE(bool state) /*0xBF286C554784F3DF*/ {
	uint64_t val;
	nativeInit(0xBF286C554784F3DF);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xBF4DC1784BE94DFA(Any p0, bool p1, Any p2) /*0xBF4DC1784BE94DFA*/ {
	uint64_t val;
	nativeInit(0xBF4DC1784BE94DFA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xC15907D667F7CFB2(Vehicle vehicle, bool toggle) /*0xC15907D667F7CFB2*/ {
	uint64_t val;
	nativeInit(0xC15907D667F7CFB2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__SET_VEHICLE_AS_AMBIENT_EMMITTER(Vehicle vehicle) /*0xC1805D05E6D4FE10*/ {
	uint64_t val;
	nativeInit(0xC1805D05E6D4FE10);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_RADIO_AUTO_UNFREEZE(bool toggle) /*0xC1AA9F53CE982990*/ {
	uint64_t val;
	nativeInit(0xC1AA9F53CE982990);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_0xC265DF9FB44A9FBD(Any p0) /*0xC265DF9FB44A9FBD*/ {
	uint64_t val;
	nativeInit(0xC265DF9FB44A9FBD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_ADD_LINE_TO_CONVERSATION(int p0, const char* p1, const char* p2, int p3, int p4, bool p5, bool p6, bool p7, bool p8, int p9, bool p10, bool p11, bool p12) /*0xC5EF963405593646*/ {
	uint64_t val;
	nativeInit(0xC5EF963405593646);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(bool*)(&val) = p12;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__PLAY_AMBIENT_SPEECH2(Ped ped, const char* speechName, const char* speechParam) /*0xC6941B4A3A8FBBB9*/ {
	uint64_t val;
	nativeInit(0xC6941B4A3A8FBBB9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = speechName;
	nativePush(val);
	*(const char**)(&val) = speechParam;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_RADIO_TO_STATION_NAME(const char* stationName) /*0xC69EDA28699D5107*/ {
	uint64_t val;
	nativeInit(0xC69EDA28699D5107);
	*(const char**)(&val) = stationName;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_REGISTER_SCRIPT_WITH_AUDIO(int p0) /*0xC6ED9D5092438D91*/ {
	uint64_t val;
	nativeInit(0xC6ED9D5092438D91);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_PREPARE_SYNCHRONIZED_AUDIO_EVENT(const char* audioName, bool unk) /*0xC7ABCACA4985A766*/ {
	uint64_t val;
	nativeInit(0xC7ABCACA4985A766);
	*(const char**)(&val) = audioName;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool AUDIO_0xC8B1B2425604CDD0() /*0xC8B1B2425604CDD0*/ {
	nativeInit(0xC8B1B2425604CDD0); return *(bool*)(nativeCall());
}
inline void AUDIO_0xC8EDE9BDBCCBA6D4(Any* p0, float p1, float p2, float p3) /*0xC8EDE9BDBCCBA6D4*/ {
	uint64_t val;
	nativeInit(0xC8EDE9BDBCCBA6D4);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xCADA5A0D0702381E(const char* p0, const char* soundset) /*0xCADA5A0D0702381E*/ {
	uint64_t val;
	nativeInit(0xCADA5A0D0702381E);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = soundset;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_ANIMAL_MOOD(Ped animal, int mood) /*0xCC97B29285B1DC3B*/ {
	uint64_t val;
	nativeInit(0xCC97B29285B1DC3B);
	*(Ped*)(&val) = animal;
	nativePush(val);
	*(int*)(&val) = mood;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_SCRIPTED_SPEECH_PLAYING(Any p0) /*0xCC9AA18DCC7084F4*/ {
	uint64_t val;
	nativeInit(0xCC9AA18DCC7084F4);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_PLAY_END_CREDITS_MUSIC(bool play) /*0xCD536C4D33DCC900*/ {
	uint64_t val;
	nativeInit(0xCD536C4D33DCC900);
	*(bool*)(&val) = play;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xD01005D2BA2EB778(const char* p0) /*0xD01005D2BA2EB778*/ {
	uint64_t val;
	nativeInit(0xD01005D2BA2EB778);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_STREAM_PLAYING() /*0xD11FA52EB849D978*/ {
	nativeInit(0xD11FA52EB849D978); return *(bool*)(nativeCall());
}
inline void AUDIO_CREATE_NEW_SCRIPTED_CONVERSATION() /*0xD2C91A0B572AAE56*/ {
	nativeInit(0xD2C91A0B572AAE56);
	nativeCall();
}
inline void AUDIO_0xD2CC78CD3D0B50F9(Any p0, bool p1) /*0xD2CC78CD3D0B50F9*/ {
	uint64_t val;
	nativeInit(0xD2CC78CD3D0B50F9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xD2DCCD8E16E20997(Any p0) /*0xD2DCCD8E16E20997*/ {
	uint64_t val;
	nativeInit(0xD2DCCD8E16E20997);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xD57AAAE0E2214D11() /*0xD57AAAE0E2214D11*/ {
	nativeInit(0xD57AAAE0E2214D11);
	nativeCall();
}
inline Any AUDIO_STOP_SCRIPTED_CONVERSATION(bool p0) /*0xD79DEEFB53455EBA*/ {
	uint64_t val;
	nativeInit(0xD79DEEFB53455EBA);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AUDIO_0xDD6BCF9E94425DF9() /*0xDD6BCF9E94425DF9*/ {
	nativeInit(0xDD6BCF9E94425DF9);
	nativeCall();
}
inline void AUDIO_0xDDC635D5B3262C56(const char* p0) /*0xDDC635D5B3262C56*/ {
	uint64_t val;
	nativeInit(0xDDC635D5B3262C56);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_IS_SCRIPTED_CONVERSATION_LOADED() /*0xDF0D54BE7A776737*/ {
	nativeInit(0xDF0D54BE7A776737); return *(bool*)(nativeCall());
}
inline void AUDIO_STOP_AUDIO_SCENE(const char* scene) /*0xDFE8422B3B94E688*/ {
	uint64_t val;
	nativeInit(0xDFE8422B3B94E688);
	*(const char**)(&val) = scene;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_PLAY_POLICE_REPORT(const char* name, float p1) /*0xDFEBD56D9BD1EB16*/ {
	uint64_t val;
	nativeInit(0xDFEBD56D9BD1EB16);
	*(const char**)(&val) = name;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AUDIO_0xE4E6DD5566D28C82() /*0xE4E6DD5566D28C82*/ {
	nativeInit(0xE4E6DD5566D28C82);
	nativeCall();
}
inline void AUDIO_SET_AUDIO_VEHICLE_PRIORITY(Vehicle vehicle, Any p1) /*0xE5564483E407F914*/ {
	uint64_t val;
	nativeInit(0xE5564483E407F914);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_SOUND_FROM_ENTITY(int soundId, const char* audioName, Entity entity, const char* audioRef, bool p4, Any p5) /*0xE65F427EB70AB1ED*/ {
	uint64_t val;
	nativeInit(0xE65F427EB70AB1ED);
	*(int*)(&val) = soundId;
	nativePush(val);
	*(const char**)(&val) = audioName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = audioRef;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_0xE73364DB90778FFA() /*0xE73364DB90778FFA*/ {
	nativeInit(0xE73364DB90778FFA); return *(bool*)(nativeCall());
}
inline void AUDIO_RESET_TREVOR_RAGE() /*0xE78503B10C4314E0*/ {
	nativeInit(0xE78503B10C4314E0);
	nativeCall();
}
inline Any AUDIO_GET_MUSIC_PLAYTIME() /*0xE7A0D23DC414507B*/ {
	nativeInit(0xE7A0D23DC414507B); return *(Any*)(nativeCall());
}
inline int AUDIO_GET_PLAYER_RADIO_STATION_INDEX() /*0xE8AF77C4C06ADC93*/ {
	nativeInit(0xE8AF77C4C06ADC93); return *(int*)(nativeCall());
}
inline void AUDIO_SET_PLAYER_ANGRY(Ped playerPed, bool value) /*0xEA241BB04110F091*/ {
	uint64_t val;
	nativeInit(0xEA241BB04110F091);
	*(Ped*)(&val) = playerPed;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_STREAM_FROM_OBJECT(Object object) /*0xEBAA9B64D76356FD*/ {
	uint64_t val;
	nativeInit(0xEBAA9B64D76356FD);
	*(Object*)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline void AUDIO__PLAY_AMBIENT_SPEECH_AT_COORDS(const char* speechName, const char* voiceName, float x, float y, float z, const char* speechParam) /*0xED640017ED337E45*/ {
	uint64_t val;
	nativeInit(0xED640017ED337E45);
	*(const char**)(&val) = speechName;
	nativePush(val);
	*(const char**)(&val) = voiceName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(const char**)(&val) = speechParam;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xEE066C7006C49C0A(Entity entity, int unk, const char* speech) /*0xEE066C7006C49C0A*/ {
	uint64_t val;
	nativeInit(0xEE066C7006C49C0A);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	*(const char**)(&val) = speech;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AUDIO_SCENE_VARIABLE(const char* scene, const char* variable, float value) /*0xEF21A9EF089A2668*/ {
	uint64_t val;
	nativeInit(0xEF21A9EF089A2668);
	*(const char**)(&val) = scene;
	nativePush(val);
	*(const char**)(&val) = variable;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xF154B8D1775B2DEC(bool p0) /*0xF154B8D1775B2DEC*/ {
	uint64_t val;
	nativeInit(0xF154B8D1775B2DEC);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int AUDIO__MAX_RADIO_STATION_INDEX() /*0xF1620ECB50E01DE7*/ {
	nativeInit(0xF1620ECB50E01DE7); return *(int*)(nativeCall());
}
inline void AUDIO_0xF1F8157B8C3F171C(Any p0, const char* p1, const char* p2) /*0xF1F8157B8C3F171C*/ {
	uint64_t val;
	nativeInit(0xF1F8157B8C3F171C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_OVERRIDE_UNDERWATER_STREAM(Any* p0, bool p1) /*0xF2A9CDABCEA04BD6*/ {
	uint64_t val;
	nativeInit(0xF2A9CDABCEA04BD6);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_0xF3365489E0DD50F9(Any p0, bool p1) /*0xF3365489E0DD50F9*/ {
	uint64_t val;
	nativeInit(0xF3365489E0DD50F9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(const char* ambientZone, bool p1, bool p2) /*0xF3638DAE8C4045E1*/ {
	uint64_t val;
	nativeInit(0xF3638DAE8C4045E1);
	*(const char**)(&val) = ambientZone;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_RESET_PED_AUDIO_FLAGS(Ped ped) /*0xF54BB7B61036F335*/ {
	uint64_t val;
	nativeInit(0xF54BB7B61036F335);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline const char* AUDIO_GET_PLAYER_RADIO_STATION_NAME() /*0xF6D733C32076AD03*/ {
	nativeInit(0xF6D733C32076AD03); return *(const char**)(nativeCall());
}
inline void AUDIO_SET_FRONTEND_RADIO_ACTIVE(bool active) /*0xF7F26C6E9CC9EBB8*/ {
	uint64_t val;
	nativeInit(0xF7F26C6E9CC9EBB8);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_PLAY_PED_RINGTONE(const char* ringtoneName, Ped ped, bool p2) /*0xF9E56683CA8E11A5*/ {
	uint64_t val;
	nativeInit(0xF9E56683CA8E11A5);
	*(const char**)(&val) = ringtoneName;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_USE_SIREN_AS_HORN(Vehicle vehicle, bool toggle) /*0xFA932DE350266EF8*/ {
	uint64_t val;
	nativeInit(0xFA932DE350266EF8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any AUDIO_HINT_SCRIPT_AUDIO_BANK(Any p0, Any p1) /*0xFB380A29641EC31A*/ {
	uint64_t val;
	nativeInit(0xFB380A29641EC31A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void AUDIO_0xFBE20329593DEC9D(Any p0, Any p1, Any p2, Any p3) /*0xFBE20329593DEC9D*/ {
	uint64_t val;
	nativeInit(0xFBE20329593DEC9D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void AUDIO_UNFREEZE_RADIO_STATION(const char* radioStation) /*0xFC00454CF60B91DD*/ {
	uint64_t val;
	nativeInit(0xFC00454CF60B91DD);
	*(const char**)(&val) = radioStation;
	nativePush(val);
	nativeCall();
}
inline bool AUDIO_HAS_SOUND_FINISHED(int soundId) /*0xFCBDCE714A7C88E5*/ {
	uint64_t val;
	nativeInit(0xFCBDCE714A7C88E5);
	*(int*)(&val) = soundId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool AUDIO_REQUEST_AMBIENT_AUDIO_BANK(const char* p0, bool p1) /*0xFE02FFBED8CA9D99*/ {
	uint64_t val;
	nativeInit(0xFE02FFBED8CA9D99);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void AUDIO_0xFF266D1D0EB1195D() /*0xFF266D1D0EB1195D*/ {
	nativeInit(0xFF266D1D0EB1195D);
	nativeCall();
}
inline void BRAIN_0x0B40ED49D7D6FF84() /*0x0B40ED49D7D6FF84*/ {
	nativeInit(0x0B40ED49D7D6FF84);
	nativeCall();
}
inline void BRAIN_REGISTER_OBJECT_SCRIPT_BRAIN(const char* scriptName, Hash objectName, int p2, float p3, int p4, int p5) /*0x0BE84C318BA6EC22*/ {
	uint64_t val;
	nativeInit(0x0BE84C318BA6EC22);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	*(Hash*)(&val) = objectName;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_DISABLE_SCRIPT_BRAIN_SET(int brainSet) /*0x14D8518E9760F08F*/ {
	uint64_t val;
	nativeInit(0x14D8518E9760F08F);
	*(int*)(&val) = brainSet;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_REGISTER_WORLD_POINT_SCRIPT_BRAIN(Any* p0, float p1, Any p2) /*0x3CDC7136613284BD*/ {
	uint64_t val;
	nativeInit(0x3CDC7136613284BD);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_0x4D953DF78EBF8158() /*0x4D953DF78EBF8158*/ {
	nativeInit(0x4D953DF78EBF8158);
	nativeCall();
}
inline void BRAIN_ADD_SCRIPT_TO_RANDOM_PED(const char* name, Hash model, float p2, float p3) /*0x4EE5367468A65CCC*/ {
	uint64_t val;
	nativeInit(0x4EE5367468A65CCC);
	*(const char**)(&val) = name;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_ENABLE_SCRIPT_BRAIN_SET(int brainSet) /*0x67AA4D73F0CFA86B*/ {
	uint64_t val;
	nativeInit(0x67AA4D73F0CFA86B);
	*(int*)(&val) = brainSet;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_0x6D6840CEE8845831(const char* action) /*0x6D6840CEE8845831*/ {
	uint64_t val;
	nativeInit(0x6D6840CEE8845831);
	*(const char**)(&val) = action;
	nativePush(val);
	nativeCall();
}
inline void BRAIN_0x6E91B04E08773030(const char* action) /*0x6E91B04E08773030*/ {
	uint64_t val;
	nativeInit(0x6E91B04E08773030);
	*(const char**)(&val) = action;
	nativePush(val);
	nativeCall();
}
inline bool BRAIN_IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE() /*0xC5042CC6F5E3D450*/ {
	nativeInit(0xC5042CC6F5E3D450); return *(bool*)(nativeCall());
}
inline bool BRAIN_IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(Object object) /*0xCCBA154209823057*/ {
	uint64_t val;
	nativeInit(0xCCBA154209823057);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_GAMEPLAY_CAM_SHAKING() /*0x016C090630DF1F89*/ {
	nativeInit(0x016C090630DF1F89); return *(bool*)(nativeCall());
}
inline void CAM_0x0225778816FDC28C(float p0) /*0x0225778816FDC28C*/ {
	uint64_t val;
	nativeInit(0x0225778816FDC28C);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_ACTIVE(Cam cam, bool active) /*0x026FB97D0A425F84*/ {
	uint64_t val;
	nativeInit(0x026FB97D0A425F84);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_CAM_SPLINE_PAUSED(Any p0) /*0x0290F35C0AD97864*/ {
	uint64_t val;
	nativeInit(0x0290F35C0AD97864);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_CAM_RENDERING(Cam cam) /*0x02EC0AF5C5A49B7A*/ {
	uint64_t val;
	nativeInit(0x02EC0AF5C5A49B7A);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_CAM_INTERPOLATING(Cam cam) /*0x036F97C908C2B52C*/ {
	uint64_t val;
	nativeInit(0x036F97C908C2B52C);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_RENDER_SCRIPT_CAMS(bool render, bool ease, int easeTime, bool p3, bool p4) /*0x07E5B515DB0636FC*/ {
	uint64_t val;
	nativeInit(0x07E5B515DB0636FC);
	*(bool*)(&val) = render;
	nativePush(val);
	*(bool*)(&val) = ease;
	nativePush(val);
	*(int*)(&val) = easeTime;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x0A9F2A468B328E74(Any p0, Any p1, Any p2, Any p3) /*0x0A9F2A468B328E74*/ {
	uint64_t val;
	nativeInit(0x0A9F2A468B328E74);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_FIRST_PERSON_CAM_NEAR_CLIP(float distance) /*0x0AF7B437918103B3*/ {
	uint64_t val;
	nativeInit(0x0AF7B437918103B3);
	*(float*)(&val) = distance;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_GAMEPLAY_CAM_SHAKING(bool p0) /*0x0EF93E9F3D08C178*/ {
	uint64_t val;
	nativeInit(0x0EF93E9F3D08C178);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x0FB82563989CF4FB(Any p0, Any p1, Any p2, Any p3) /*0x0FB82563989CF4FB*/ {
	uint64_t val;
	nativeInit(0x0FB82563989CF4FB);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_GAMEPLAY_CAM_RAW_YAW(float yaw) /*0x103991D4A307D472*/ {
	uint64_t val;
	nativeInit(0x103991D4A307D472);
	*(float*)(&val) = yaw;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x11FA5D3479C7DD47(Any p0) /*0x11FA5D3479C7DD47*/ {
	uint64_t val;
	nativeInit(0x11FA5D3479C7DD47);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x12DED8CA53D47EA5(float p0) /*0x12DED8CA53D47EA5*/ {
	uint64_t val;
	nativeInit(0x12DED8CA53D47EA5);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_SPLINE_DURATION(int cam, int timeDuration) /*0x1381539FEE034CDA*/ {
	uint64_t val;
	nativeInit(0x1381539FEE034CDA);
	*(int*)(&val) = cam;
	nativePush(val);
	*(int*)(&val) = timeDuration;
	nativePush(val);
	nativeCall();
}
inline Vector3 CAM_GET_GAMEPLAY_CAM_COORD() /*0x14D6F5678D8F1B37*/ {
	nativeInit(0x14D6F5678D8F1B37); return *(Vector3*)(nativeCall());
}
inline float CAM_0x162F9D995753DC19() /*0x162F9D995753DC19*/ {
	nativeInit(0x162F9D995753DC19); return *(float*)(nativeCall());
}
inline void CAM_SET_CAM_USE_SHALLOW_DOF_MODE(Cam cam, bool toggle) /*0x16A96863A17552BB*/ {
	uint64_t val;
	nativeInit(0x16A96863A17552BB);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any CAM_0x17FCA7199A530203() /*0x17FCA7199A530203*/ {
	nativeInit(0x17FCA7199A530203); return *(Any*)(nativeCall());
}
inline void CAM_SET_GAMEPLAY_ENTITY_HINT(Entity entity, float xOffset, float yOffset, float zOffset, bool p4, int duration, int fadeInTime, int fadeOutTime, int flags) /*0x189E955A8313E298*/ {
	uint64_t val;
	nativeInit(0x189E955A8313E298);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = fadeInTime;
	nativePush(val);
	*(int*)(&val) = fadeOutTime;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int zoomLevel) /*0x19464CB6E4078C8A*/ {
	uint64_t val;
	nativeInit(0x19464CB6E4078C8A);
	*(int*)(&val) = zoomLevel;
	nativePush(val);
	nativeCall();
}
inline Any CAM_0x19CAFA3C87F7C2FF() /*0x19CAFA3C87F7C2FF*/ {
	nativeInit(0x19CAFA3C87F7C2FF); return *(Any*)(nativeCall());
}
inline void CAM_DISABLE_AIM_CAM_THIS_UPDATE() /*0x1A31FE0049E542F6*/ {
	nativeInit(0x1A31FE0049E542F6);
	nativeCall();
}
inline void CAM_SET_CAM_DEBUG_NAME(Cam camera, const char* name) /*0x1B93E0107865DD40*/ {
	uint64_t val;
	nativeInit(0x1B93E0107865DD40);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_SCRIPT_GLOBAL_SHAKING(bool p0) /*0x1C9D7949FA533490*/ {
	uint64_t val;
	nativeInit(0x1C9D7949FA533490);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any CAM_0x1F2300CB7FA7B7F6() /*0x1F2300CB7FA7B7F6*/ {
	nativeInit(0x1F2300CB7FA7B7F6); return *(Any*)(nativeCall());
}
inline void CAM_0x21E253A7F8DA5DFB(const char* vehicleName) /*0x21E253A7F8DA5DFB*/ {
	uint64_t val;
	nativeInit(0x21E253A7F8DA5DFB);
	*(const char**)(&val) = vehicleName;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_CINEMATIC_CAM_SHAKING(bool p0) /*0x2238E588E588A6D7*/ {
	uint64_t val;
	nativeInit(0x2238E588E588A6D7);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_SPLINE_PHASE(Cam cam, float p1) /*0x242B5874F0A4E052*/ {
	uint64_t val;
	nativeInit(0x242B5874F0A4E052);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x247ACBC4ABBC9D1C(bool p0) /*0x247ACBC4ABBC9D1C*/ {
	uint64_t val;
	nativeInit(0x247ACBC4ABBC9D1C);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float CAM_GET_CAM_FAR_DOF(Cam cam) /*0x255F8DAFD540D397*/ {
	uint64_t val;
	nativeInit(0x255F8DAFD540D397);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int CAM_0x26903D9CD1175F2C(Any p0, Any p1) /*0x26903D9CD1175F2C*/ {
	uint64_t val;
	nativeInit(0x26903D9CD1175F2C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void CAM_0x271017B9BA825366(Any p0, bool p1) /*0x271017B9BA825366*/ {
	uint64_t val;
	nativeInit(0x271017B9BA825366);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x271401846BD26E92(bool p0, bool p1) /*0x271401846BD26E92*/ {
	uint64_t val;
	nativeInit(0x271401846BD26E92);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x2A2173E46DAECD12(Any p0, Any p1) /*0x2A2173E46DAECD12*/ {
	uint64_t val;
	nativeInit(0x2A2173E46DAECD12);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x2AED6301F67007D5(Entity entity) /*0x2AED6301F67007D5*/ {
	uint64_t val;
	nativeInit(0x2AED6301F67007D5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_GAMEPLAY_PED_HINT(Ped p0, float x1, float y1, float z1, bool p4, Any p5, Any p6, Any p7) /*0x2B486269ACD548D3*/ {
	uint64_t val;
	nativeInit(0x2B486269ACD548D3);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(Cam camera, float p1) /*0x2C654B4943BDDF7C*/ {
	uint64_t val;
	nativeInit(0x2C654B4943BDDF7C);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x2F7F2B26DD3F18EE(float p0, float p1) /*0x2F7F2B26DD3F18EE*/ {
	uint64_t val;
	nativeInit(0x2F7F2B26DD3F18EE);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool CAM_0x3044240D2E0FA842() /*0x3044240D2E0FA842*/ {
	nativeInit(0x3044240D2E0FA842); return *(bool*)(nativeCall());
}
inline int CAM_GET_FOLLOW_PED_CAM_ZOOM_LEVEL() /*0x33E6C8EFD0CD93E9*/ {
	nativeInit(0x33E6C8EFD0CD93E9); return *(int*)(nativeCall());
}
inline bool CAM_IS_GAMEPLAY_CAM_RENDERING() /*0x39B5D1B10383F0C8*/ {
	nativeInit(0x39B5D1B10383F0C8); return *(bool*)(nativeCall());
}
inline float CAM_GET_GAMEPLAY_CAM_RELATIVE_PITCH() /*0x3A6867B4845BEDA2*/ {
	nativeInit(0x3A6867B4845BEDA2); return *(float*)(nativeCall());
}
inline void CAM_SET_CAM_DOF_PLANES(Cam cam, float p1, float p2, float p3, float p4) /*0x3CF48F6F96E749DC*/ {
	uint64_t val;
	nativeInit(0x3CF48F6F96E749DC);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_NEAR_DOF(Cam cam, float nearDOF) /*0x3FA4BF0A7AB7DE2C*/ {
	uint64_t val;
	nativeInit(0x3FA4BF0A7AB7DE2C);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = nearDOF;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x4008EDF7D6E48175(bool p0) /*0x4008EDF7D6E48175*/ {
	uint64_t val;
	nativeInit(0x4008EDF7D6E48175);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_OVERRIDE_CAM_SPLINE_VELOCITY(Cam cam, int p1, float p2, float p3) /*0x40B62FA033EB0346*/ {
	uint64_t val;
	nativeInit(0x40B62FA033EB0346);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_ANIM_CURRENT_PHASE(Cam cam, float phase) /*0x4145A4C44FF3B5A6*/ {
	uint64_t val;
	nativeInit(0x4145A4C44FF3B5A6);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = phase;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP(float distance) /*0x42156508606DE65E*/ {
	uint64_t val;
	nativeInit(0x42156508606DE65E);
	*(float*)(&val) = distance;
	nativePush(val);
	nativeCall();
}
inline bool CAM_SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(const char* p0, int p1) /*0x44A113DD6FFC48D1*/ {
	uint64_t val;
	nativeInit(0x44A113DD6FFC48D1);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_SET_CAM_INHERIT_ROLL_VEHICLE(Cam cam, bool p1) /*0x45F1DE9C34B93AE6*/ {
	uint64_t val;
	nativeInit(0x45F1DE9C34B93AE6);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x469F2ECDEC046337(bool p0) /*0x469F2ECDEC046337*/ {
	uint64_t val;
	nativeInit(0x469F2ECDEC046337);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_CUSTOM_MENU_COORDINATES(float p0) /*0x487A82C650EB7799*/ {
	uint64_t val;
	nativeInit(0x487A82C650EB7799);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x49482F9FCD825AAA(Entity entity) /*0x49482F9FCD825AAA*/ {
	uint64_t val;
	nativeInit(0x49482F9FCD825AAA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_COORD(Cam cam, float posX, float posY, float posZ) /*0x4D41783FB745E42E*/ {
	uint64_t val;
	nativeInit(0x4D41783FB745E42E);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline bool CAM__IS_IN_VEHICLE_CAM_DISABLED() /*0x4F32C0D5A90A9B40*/ {
	nativeInit(0x4F32C0D5A90A9B40); return *(bool*)(nativeCall());
}
inline void CAM_0x503F5920162365B2(Any p0, float p1, float p2, float p3) /*0x503F5920162365B2*/ {
	uint64_t val;
	nativeInit(0x503F5920162365B2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_GAMEPLAY_HINT_FOV(float FOV) /*0x513403FB9C56211F*/ {
	uint64_t val;
	nativeInit(0x513403FB9C56211F);
	*(float*)(&val) = FOV;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CINEMATIC_BUTTON_ACTIVE(bool p0) /*0x51669F7D1FB53D9F*/ {
	uint64_t val;
	nativeInit(0x51669F7D1FB53D9F);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Cam CAM_GET_RENDERING_CAM() /*0x5234F9F10919EABA*/ {
	nativeInit(0x5234F9F10919EABA); return *(Cam*)(nativeCall());
}
inline void CAM_POINT_CAM_AT_ENTITY(Cam cam, Entity entity, float p2, float p3, float p4, bool p5) /*0x5640BFF86B16E8DC*/ {
	uint64_t val;
	nativeInit(0x5640BFF86B16E8DC);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x59424BD75174C9B1() /*0x59424BD75174C9B1*/ {
	nativeInit(0x59424BD75174C9B1);
	nativeCall();
}
inline void CAM_0x5A43C76F7FC7BA5F() /*0x5A43C76F7FC7BA5F*/ {
	nativeInit(0x5A43C76F7FC7BA5F);
	nativeCall();
}
inline void CAM_SET_FOLLOW_PED_CAM_VIEW_MODE(int viewMode) /*0x5A4F9EDF1673F704*/ {
	uint64_t val;
	nativeInit(0x5A4F9EDF1673F704);
	*(int*)(&val) = viewMode;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_SCREEN_FADED_IN() /*0x5A859503B0C08678*/ {
	nativeInit(0x5A859503B0C08678);
	return *(bool*)(nativeCall());
}
inline Vector3 CAM__GET_GAMEPLAY_CAM_ROT(int rotationOrder) /*0x5B4E4C817FCC2DFB*/ {
	uint64_t val;
	nativeInit(0x5B4E4C817FCC2DFB);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void CAM_0x5C41E6BABC9E2112(Any p0) /*0x5C41E6BABC9E2112*/ {
	uint64_t val;
	nativeInit(0x5C41E6BABC9E2112);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_0x5C48A1D6E3B33179(Any p0) /*0x5C48A1D6E3B33179*/ {
	uint64_t val;
	nativeInit(0x5C48A1D6E3B33179);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_SCREEN_FADING_IN() /*0x5C544BC6C57AC575*/ {
	nativeInit(0x5C544BC6C57AC575); return *(bool*)(nativeCall());
}
inline void CAM_0x5D7B620DAE436138(float p0) /*0x5D7B620DAE436138*/ {
	uint64_t val;
	nativeInit(0x5D7B620DAE436138);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_FIRST_PERSON_AIM_CAM_ACTIVE() /*0x5E346D934122613F*/ {
	nativeInit(0x5E346D934122613F); return *(bool*)(nativeCall());
}
inline Cam CAM_CREATE_CAMERA(Hash camHash, bool p1) /*0x5E3CF89C6BCCA67D*/ {
	uint64_t val;
	nativeInit(0x5E3CF89C6BCCA67D);
	*(Hash*)(&val) = camHash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Cam*)(nativeCall());
}
inline void CAM_SET_CAM_DOF_STRENGTH(Cam cam, float dofStrength) /*0x5EE29B4D7D5DF897*/ {
	uint64_t val;
	nativeInit(0x5EE29B4D7D5DF897);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = dofStrength;
	nativePush(val);
	nativeCall();
}
inline float CAM_0x5F35F6732C3FBBA0(Any p0) /*0x5F35F6732C3FBBA0*/ {
	uint64_t val;
	nativeInit(0x5F35F6732C3FBBA0);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CAM_0x609278246A29CA34(Any p0, Any p1, Any p2) /*0x609278246A29CA34*/ {
	uint64_t val;
	nativeInit(0x609278246A29CA34);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void CAM_ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, bool heading) /*0x61A3DBA14AB7F411*/ {
	uint64_t val;
	nativeInit(0x61A3DBA14AB7F411);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x62ECFCFDEE7885D6() /*0x62ECFCFDEE7885D6*/ {
	nativeInit(0x62ECFCFDEE7885D6);
	nativeCall();
}
inline float CAM_GET_GAMEPLAY_CAM_FOV() /*0x65019750A0324133*/ {
	nativeInit(0x65019750A0324133); return *(float*)(nativeCall());
}
inline void CAM_0x661B5C8654ADD825(Any p0, bool p1) /*0x661B5C8654ADD825*/ {
	uint64_t val;
	nativeInit(0x661B5C8654ADD825);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_POINT_CAM_AT_PED_BONE(Cam cam, int ped, int boneIndex, float x, float y, float z, bool p6) /*0x68B2B5F33BA63C41*/ {
	uint64_t val;
	nativeInit(0x68B2B5F33BA63C41);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(int*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_AIM_CAM_ACTIVE() /*0x68EDDA28A5976D07*/ {
	nativeInit(0x68EDDA28A5976D07); return *(bool*)(nativeCall());
}
inline void CAM_SHAKE_CAM(Cam cam, const char* type, float amplitude) /*0x6A25241C340D3822*/ {
	uint64_t val;
	nativeInit(0x6A25241C340D3822);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(const char**)(&val) = type;
	nativePush(val);
	*(float*)(&val) = amplitude;
	nativePush(val);
	nativeCall();
}
inline Cam CAM_CREATE_CAMERA_WITH_PARAMS(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, Any p9) /*0x6ABFA3E16460F22D*/ {
	uint64_t val;
	nativeInit(0x6ABFA3E16460F22D);
	*(Hash*)(&val) = camHash;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = fov;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	return *(Cam*)(nativeCall());
}
inline bool CAM_IS_CAM_SHAKING(Cam cam) /*0x6B24BFE83A2BE47B*/ {
	uint64_t val;
	nativeInit(0x6B24BFE83A2BE47B);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_SET_GAMEPLAY_CAM_RELATIVE_PITCH(float x, float Value2) /*0x6D0858B8EDFD2B7D*/ {
	uint64_t val;
	nativeInit(0x6D0858B8EDFD2B7D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = Value2;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_MOTION_BLUR_STRENGTH(Cam cam, float strength) /*0x6F0F77FBA9A8F2E6*/ {
	uint64_t val;
	nativeInit(0x6F0F77FBA9A8F2E6);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = strength;
	nativePush(val);
	nativeCall();
}
inline bool CAM_0x705A276EBFF3133D() /*0x705A276EBFF3133D*/ {
	nativeInit(0x705A276EBFF3133D); return *(bool*)(nativeCall());
}
inline Any CAM_0x70894BD0915C5BCA(float p0) /*0x70894BD0915C5BCA*/ {
	uint64_t val;
	nativeInit(0x70894BD0915C5BCA);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool CAM_IS_GAMEPLAY_CAM_LOOKING_BEHIND() /*0x70FDA869F3317EA9*/ {
	nativeInit(0x70FDA869F3317EA9); return *(bool*)(nativeCall());
}
inline void CAM_CREATE_CINEMATIC_SHOT(Any p0, int p1, Any p2, Entity entity) /*0x741B0129D4560F31*/ {
	uint64_t val;
	nativeInit(0x741B0129D4560F31);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline float CAM_GET_GAMEPLAY_CAM_RELATIVE_HEADING() /*0x743607648ADD4587*/ {
	nativeInit(0x743607648ADD4587); return *(float*)(nativeCall());
}
inline bool CAM_0x74BD83EA840F6BC9() /*0x74BD83EA840F6BC9*/ {
	nativeInit(0x74BD83EA840F6BC9); return *(bool*)(nativeCall());
}
inline void CAM__SET_GAMEPLAY_CAM_RAW_PITCH(float pitch) /*0x759E13EBC1C15C5A*/ {
	uint64_t val;
	nativeInit(0x759E13EBC1C15C5A);
	*(float*)(&val) = pitch;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_CINEMATIC_SHOT(Any p0) /*0x7660C6E75D3A078E*/ {
	uint64_t val;
	nativeInit(0x7660C6E75D3A078E);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_SCREEN_FADING_OUT() /*0x797AC7CB535BA28F*/ {
	nativeInit(0x797AC7CB535BA28F); return *(bool*)(nativeCall());
}
inline void CAM_0x7BF1A54AE67AC070(Any p0, Any p1, Any p2) /*0x7BF1A54AE67AC070*/ {
	uint64_t val;
	nativeInit(0x7BF1A54AE67AC070);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Vector3 CAM_GET_CAM_ROT(Cam cam, int rotationOrder) /*0x7D304C1C955E3E12*/ {
	uint64_t val;
	nativeInit(0x7D304C1C955E3E12);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void CAM_OVERRIDE_CAM_SPLINE_MOTION_BLUR(Cam cam, int p1, float p2, float p3) /*0x7DCF7C708D292D55*/ {
	uint64_t val;
	nativeInit(0x7DCF7C708D292D55);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_CAM_DOF_FNUMBER_OF_LENS(Cam camera, float p1) /*0x7DD234D6F3914C5B*/ {
	uint64_t val;
	nativeInit(0x7DD234D6F3914C5B);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float CAM__GET_GAMEPLAY_CAM_ZOOM() /*0x7EC52CC40597D170*/ {
	nativeInit(0x7EC52CC40597D170); return *(float*)(nativeCall());
}
inline void CAM__SET_CAM_EFFECT(int p0) /*0x80C8B1846639BB19*/ {
	uint64_t val;
	nativeInit(0x80C8B1846639BB19);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float CAM_0x80EC114669DAEFF4() /*0x80EC114669DAEFF4*/ {
	nativeInit(0x80EC114669DAEFF4); return *(float*)(nativeCall());
}
inline Vector3 CAM_GET_GAMEPLAY_CAM_ROT(int rotationOrder) /*0x837765A25378F0BB*/ {
	uint64_t val;
	nativeInit(0x837765A25378F0BB);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void CAM_0x83B8201ED82A9A2D(Any p0, Any p1, Any p2, float p3) /*0x83B8201ED82A9A2D*/ {
	uint64_t val;
	nativeInit(0x83B8201ED82A9A2D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_GAMEPLAY_OBJECT_HINT(Any p0, float p1, float p2, float p3, bool p4, Any p5, Any p6, Any p7) /*0x83E87508A2CA2AC6*/ {
	uint64_t val;
	nativeInit(0x83E87508A2CA2AC6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_ROT(Cam cam, float pitch, float roll, float yaw, int rotationOrder) /*0x85973643155D0B07*/ {
	uint64_t val;
	nativeInit(0x85973643155D0B07);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = pitch;
	nativePush(val);
	*(float*)(&val) = roll;
	nativePush(val);
	*(float*)(&val) = yaw;
	nativePush(val);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	nativeCall();
}
inline void CAM_ADD_CAM_SPLINE_NODE(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int p8, int transitionType) /*0x8609C75EC438FB3B*/ {
	uint64_t val;
	nativeInit(0x8609C75EC438FB3B);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(int*)(&val) = length;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = transitionType;
	nativePush(val);
	nativeCall();
}
inline void CAM_DESTROY_CAM(Cam cam, bool thisScriptCheck) /*0x865908C81A2C22E9*/ {
	uint64_t val;
	nativeInit(0x865908C81A2C22E9);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	nativeCall();
}
inline void CAM_DO_SCREEN_FADE_OUT(int duration) /*0x891B5B39AC6302AF*/ {
	uint64_t val;
	nativeInit(0x891B5B39AC6302AF);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline Entity CAM_0x89215EC747DF244A(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8) /*0x89215EC747DF244A*/ {
	uint64_t val;
	nativeInit(0x89215EC747DF244A);
	*(float*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void CAM_0x8BBACBF51DA047A8(Any p0) /*0x8BBACBF51DA047A8*/ {
	uint64_t val;
	nativeInit(0x8BBACBF51DA047A8);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float CAM__GET_REPLAY_FREE_CAM_MAX_RANGE() /*0x8BFCEB5EA1B161B6*/ {
	nativeInit(0x8BFCEB5EA1B161B6); return *(float*)(nativeCall());
}
inline void CAM_SET_CAM_AFFECTS_AIMING(Cam cam, bool toggle) /*0x8C1DC7770C51DC8D*/ {
	uint64_t val;
	nativeInit(0x8C1DC7770C51DC8D);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int CAM_GET_FOLLOW_PED_CAM_VIEW_MODE() /*0x8D4D46230B2C353A*/ {
	nativeInit(0x8D4D46230B2C353A); return *(int*)(nativeCall());
}
inline void CAM_DESTROY_ALL_CAMS(bool thisScriptCheck) /*0x8E5FB15663F79120*/ {
	uint64_t val;
	nativeInit(0x8E5FB15663F79120);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	nativeCall();
}
inline Any CAM__CLAMP_GAMEPLAY_CAM_YAW(float minimum, float maximum) /*0x8F993D26E0CA5E8E*/ {
	uint64_t val;
	nativeInit(0x8F993D26E0CA5E8E);
	*(float*)(&val) = minimum;
	nativePush(val);
	*(float*)(&val) = maximum;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void CAM_0x91EF6EE6419E5B97(bool p0) /*0x91EF6EE6419E5B97*/ {
	uint64_t val;
	nativeInit(0x91EF6EE6419E5B97);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float CAM__GET_GAMEPLAY_CAM_FAR_DOF() /*0x9780F32BCAF72431*/ {
	nativeInit(0x9780F32BCAF72431); return *(float*)(nativeCall());
}
inline bool CAM_PLAY_CAM_ANIM(Cam cam, const char* animName, const char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, bool p9, int p10) /*0x9A2D0FB2E7852392*/ {
	uint64_t val;
	nativeInit(0x9A2D0FB2E7852392);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_SET_TIME_IDLE_DROP(bool p0, bool p1) /*0x9DFE13ECDC1EC196*/ {
	uint64_t val;
	nativeInit(0x9DFE13ECDC1EC196);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0x9E4CFFF989258472() /*0x9E4CFFF989258472*/ {
	nativeInit(0x9E4CFFF989258472);
	nativeCall();
}
inline void CAM_SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation) /*0x9FBDA379383A52A4*/ {
	uint64_t val;
	nativeInit(0x9FBDA379383A52A4);
	*(Cam*)(&val) = camTo;
	nativePush(val);
	*(Cam*)(&val) = camFrom;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = easeLocation;
	nativePush(val);
	*(int*)(&val) = easeRotation;
	nativePush(val);
	nativeCall();
}
inline float CAM__GET_GAMEPLAY_CAM_NEAR_DOF() /*0xA03502FC581F7D9B*/ {
	nativeInit(0xA03502FC581F7D9B); return *(float*)(nativeCall());
}
inline float CAM_GET_CAM_ANIM_CURRENT_PHASE(Cam cam) /*0xA10B2DB49E92A6B0*/ {
	uint64_t val;
	nativeInit(0xA10B2DB49E92A6B0);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CAM_SET_USE_HI_DOF() /*0xA13B0222F3D94A94*/ {
	nativeInit(0xA13B0222F3D94A94);
	nativeCall();
}
inline Vector3 CAM__GET_GAMEPLAY_CAM_COORDS() /*0xA200EB1EE790F448*/ {
	nativeInit(0xA200EB1EE790F448); return *(Vector3*)(nativeCall());
}
inline void CAM_SET_GAMEPLAY_VEHICLE_HINT(Vehicle p0, float xOffset, float yOffset, float zOffset, bool p4, int duration, int easeInDuration, int easeOutDuration) /*0xA2297E18F3E71C2E*/ {
	uint64_t val;
	nativeInit(0xA2297E18F3E71C2E);
	*(Vehicle*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = easeInDuration;
	nativePush(val);
	*(int*)(&val) = easeOutDuration;
	nativePush(val);
	nativeCall();
}
inline void CAM_ANIMATED_SHAKE_CAM(Cam cam, const char* p1, const char* p2, const char* p3, float amplitude) /*0xA2746EEAE3E577CD*/ {
	uint64_t val;
	nativeInit(0xA2746EEAE3E577CD);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = amplitude;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xA2767257A320FC82(Any p0, bool p1) /*0xA2767257A320FC82*/ {
	uint64_t val;
	nativeInit(0xA2767257A320FC82);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_DETACH_CAM(Cam cam) /*0xA2FABBE87F4BAD82*/ {
	uint64_t val;
	nativeInit(0xA2FABBE87F4BAD82);
	*(Cam*)(&val) = cam;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xA41BCD7213805AAC(bool p0) /*0xA41BCD7213805AAC*/ {
	uint64_t val;
	nativeInit(0xA41BCD7213805AAC);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int CAM_GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() /*0xA4FF579AC0E3AAAE*/ {
	nativeInit(0xA4FF579AC0E3AAAE); return *(int*)(nativeCall());
}
inline Any CAM__CLAMP_GAMEPLAY_CAM_PITCH(float minimum, float maximum) /*0xA516C198B7DCA1E1*/ {
	uint64_t val;
	nativeInit(0xA516C198B7DCA1E1);
	*(float*)(&val) = minimum;
	nativePush(val);
	*(float*)(&val) = maximum;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void CAM_0xA6385DEB180F319F(Any p0, Any p1, float p2) /*0xA6385DEB180F319F*/ {
	uint64_t val;
	nativeInit(0xA6385DEB180F319F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool CAM_DOES_CAM_EXIST(Cam cam) /*0xA7A932170592B50E*/ {
	uint64_t val;
	nativeInit(0xA7A932170592B50E);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(float amplitude) /*0xA87E00932DB4D85D*/ {
	uint64_t val;
	nativeInit(0xA87E00932DB4D85D);
	*(float*)(&val) = amplitude;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int viewMode) /*0xAC253D7842768F48*/ {
	uint64_t val;
	nativeInit(0xAC253D7842768F48);
	*(int*)(&val) = viewMode;
	nativePush(val);
	nativeCall();
}
inline void CAM__DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME() /*0xADFF1B2A555F5FBA*/ {
	nativeInit(0xADFF1B2A555F5FBA);
	nativeCall();
}
inline void CAM_SET_CAM_FAR_CLIP(Cam cam, float farClip) /*0xAE306F2A904BF86E*/ {
	uint64_t val;
	nativeInit(0xAE306F2A904BF86E);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = farClip;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_FOV(Cam cam, float fieldOfView) /*0xB13C14F66A00D047*/ {
	uint64_t val;
	nativeInit(0xB13C14F66A00D047);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = fieldOfView;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_CINEMATIC_CAM_RENDERING() /*0xB15162CB5826E9E8*/ {
	nativeInit(0xB15162CB5826E9E8); return *(bool*)(nativeCall());
}
inline bool CAM_IS_SCREEN_FADED_OUT() /*0xB16FCE9DDC7BA182*/ {
	nativeInit(0xB16FCE9DDC7BA182); return *(bool*)(nativeCall());
}
inline int CAM_GET_CAM_SPLINE_NODE_INDEX(Cam cam) /*0xB22B17DF858716A6*/ {
	uint64_t val;
	nativeInit(0xB22B17DF858716A6);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void CAM_SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading) /*0xB4EC2312F4E5B1F1*/ {
	uint64_t val;
	nativeInit(0xB4EC2312F4E5B1F1);
	*(float*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline Cam CAM_CREATE_CAM_WITH_PARAMS(const char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, int p9) /*0xB51194800B257161*/ {
	uint64_t val;
	nativeInit(0xB51194800B257161);
	*(const char**)(&val) = camName;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = fov;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(Cam*)(nativeCall());
}
inline float CAM_GET_CAM_SPLINE_PHASE(Cam cam) /*0xB5349E36C546509A*/ {
	uint64_t val;
	nativeInit(0xB5349E36C546509A);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float CAM_GET_CAM_FAR_CLIP(Cam cam) /*0xB60A9CFEB21CA6AA*/ {
	uint64_t val;
	nativeInit(0xB60A9CFEB21CA6AA);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline Vector3 CAM_GET_CAM_COORD(Cam cam) /*0xBAC038F7459AE5AE*/ {
	uint64_t val;
	nativeInit(0xBAC038F7459AE5AE);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool CAM_IS_CINEMATIC_CAM_SHAKING() /*0xBBC08F6B4CB8FF0A*/ {
	nativeInit(0xBBC08F6B4CB8FF0A); return *(bool*)(nativeCall());
}
inline void CAM__SET_FIRST_PERSON_CAM_PITCH_RANGE(float minAngle, float maxAngle) /*0xBCFC632DB7673BF0*/ {
	uint64_t val;
	nativeInit(0xBCFC632DB7673BF0);
	*(float*)(&val) = minAngle;
	nativePush(val);
	*(float*)(&val) = maxAngle;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_CAM_SHAKING(Cam cam, bool p1) /*0xBDECF64367884AC3*/ {
	uint64_t val;
	nativeInit(0xBDECF64367884AC3);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any CAM_0xBF72910D0F26F025() /*0xBF72910D0F26F025*/ {
	nativeInit(0xBF72910D0F26F025); return *(Any*)(nativeCall());
}
inline void CAM_SET_CAM_PARAMS(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11) /*0xBFD8727AEA3CCEBA*/ {
	uint64_t val;
	nativeInit(0xBFD8727AEA3CCEBA);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = fieldOfView;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	*(int*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xC2EAE3FB8CDBED31(const char* p0, const char* p1, const char* p2, float p3) /*0xC2EAE3FB8CDBED31*/ {
	uint64_t val;
	nativeInit(0xC2EAE3FB8CDBED31);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline float CAM_GET_CAM_FOV(Cam cam) /*0xC3330A45CCCDB26A*/ {
	uint64_t val;
	nativeInit(0xC3330A45CCCDB26A);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CAM__SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(Cam camera, float p1) /*0xC3654A441402562D*/ {
	uint64_t val;
	nativeInit(0xC3654A441402562D);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Cam CAM_CREATE_CAM(const char* camName, bool unk) /*0xC3981DCE61D9E13F*/ {
	uint64_t val;
	nativeInit(0xC3981DCE61D9E13F);
	*(const char**)(&val) = camName;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	return *(Cam*)(nativeCall());
}
inline float CAM_GET_CAM_NEAR_CLIP(Cam cam) /*0xC520A34DAFBF24B1*/ {
	uint64_t val;
	nativeInit(0xC520A34DAFBF24B1);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CAM__SET_CAM_DOF_FOCUS_DISTANCE_BIAS(Cam camera, float p1) /*0xC669EEA5D031B7DE*/ {
	uint64_t val;
	nativeInit(0xC669EEA5D031B7DE);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_FOLLOW_PED_CAM_ACTIVE() /*0xC6D3D26810C8E0F9*/ {
	nativeInit(0xC6D3D26810C8E0F9); return *(bool*)(nativeCall());
}
inline void CAM_SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(float p0) /*0xC724C701C30B2FE7*/ {
	uint64_t val;
	nativeInit(0xC724C701C30B2FE7);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_NEAR_CLIP(Cam cam, float nearClip) /*0xC7848EFCCC545182*/ {
	uint64_t val;
	nativeInit(0xC7848EFCCC545182);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = nearClip;
	nativePush(val);
	nativeCall();
}
inline void CAM__RENDER_FIRST_PERSON_CAM(bool render, float p1, int p2) /*0xC819F3CBB62BF692*/ {
	uint64_t val;
	nativeInit(0xC819F3CBB62BF692);
	*(bool*)(&val) = render;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xC8391C309684595A() /*0xC8391C309684595A*/ {
	nativeInit(0xC8391C309684595A);
	nativeCall();
}
inline void CAM_0xC8B5C4A79CC18B94(Cam p0) /*0xC8B5C4A79CC18B94*/ {
	uint64_t val;
	nativeInit(0xC8B5C4A79CC18B94);
	*(Cam*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_CAM_PLAYING_ANIM(Cam cam, const char* animName, const char* animDictionary) /*0xC90621D8A0CEECF2*/ {
	uint64_t val;
	nativeInit(0xC90621D8A0CEECF2);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_SCRIPT_GLOBAL_SHAKING() /*0xC912AF078AF19212*/ {
	nativeInit(0xC912AF078AF19212); return *(bool*)(nativeCall());
}
inline void CAM_0xC91C6C55199308CA(Any p0, float p1, float p2, float p3) /*0xC91C6C55199308CA*/ {
	uint64_t val;
	nativeInit(0xC91C6C55199308CA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xC92717EF615B6704(float p0) /*0xC92717EF615B6704*/ {
	uint64_t val;
	nativeInit(0xC92717EF615B6704);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_0xCA9D2AA3E326D720() /*0xCA9D2AA3E326D720*/ {
	nativeInit(0xCA9D2AA3E326D720); return *(bool*)(nativeCall());
}
inline bool CAM_IS_FOLLOW_VEHICLE_CAM_ACTIVE() /*0xCBBDE6D335D6D496*/ {
	nativeInit(0xCBBDE6D335D6D496); return *(bool*)(nativeCall());
}
inline bool CAM_IS_CINEMATIC_SHOT_ACTIVE(Any p0) /*0xCC9F3371A7C28BC9*/ {
	uint64_t val;
	nativeInit(0xCC9F3371A7C28BC9);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_0xCCD078C2665D2973(bool p0) /*0xCCD078C2665D2973*/ {
	uint64_t val;
	nativeInit(0xCCD078C2665D2973);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xCED08CBE8EBB97C7(float p0, float p1) /*0xCED08CBE8EBB97C7*/ {
	uint64_t val;
	nativeInit(0xCED08CBE8EBB97C7);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float CAM_0xD0082607100D7193() /*0xD0082607100D7193*/ {
	nativeInit(0xD0082607100D7193); return *(float*)(nativeCall());
}
inline void CAM_0xD1B0F412F109EA5D(Any p0, Any p1) /*0xD1B0F412F109EA5D*/ {
	uint64_t val;
	nativeInit(0xD1B0F412F109EA5D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xD1F8363DFAD03848(float p0) /*0xD1F8363DFAD03848*/ {
	uint64_t val;
	nativeInit(0xD1F8363DFAD03848);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_DO_SCREEN_FADE_IN(int duration) /*0xD4E8E24955024033*/ {
	uint64_t val;
	nativeInit(0xD4E8E24955024033);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_GAMEPLAY_COORD_HINT(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int unk) /*0xD51ADCD2D8BC0FB3*/ {
	uint64_t val;
	nativeInit(0xD51ADCD2D8BC0FB3);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = blendOutDuration;
	nativePush(val);
	*(int*)(&val) = blendInDuration;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CAM_SHAKE_AMPLITUDE(Cam cam, float amplitude) /*0xD93DB43B82BC0D00*/ {
	uint64_t val;
	nativeInit(0xD93DB43B82BC0D00);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = amplitude;
	nativePush(val);
	nativeCall();
}
inline float CAM_GET_CAM_SPLINE_NODE_PHASE(Cam cam) /*0xD9D0E694C8282C96*/ {
	uint64_t val;
	nativeInit(0xD9D0E694C8282C96);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CAM_STOP_CUTSCENE_CAM_SHAKING() /*0xDB629FFD9285FA06*/ {
	nativeInit(0xDB629FFD9285FA06);
	nativeCall();
}
inline void CAM_0xDB90C6CCA48940F1(bool p0) /*0xDB90C6CCA48940F1*/ {
	uint64_t val;
	nativeInit(0xDB90C6CCA48940F1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xDC9DA9E8789F5246() /*0xDC9DA9E8789F5246*/ {
	nativeInit(0xDC9DA9E8789F5246);
	nativeCall();
}
inline void CAM_SET_WIDESCREEN_BORDERS(bool toggle, int duration) /*0xDCD4EA924F42D01A*/ {
	uint64_t val;
	nativeInit(0xDCD4EA924F42D01A);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void CAM_SHAKE_CINEMATIC_CAM(const char* p0, float p1) /*0xDCE214D9ED58F3CF*/ {
	uint64_t val;
	nativeInit(0xDCE214D9ED58F3CF);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_SET_CINEMATIC_MODE_ACTIVE(bool p0) /*0xDCF0754AC3D6FD4E*/ {
	uint64_t val;
	nativeInit(0xDCF0754AC3D6FD4E);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xDD79DF9F4D26E1C9() /*0xDD79DF9F4D26E1C9*/ {
	nativeInit(0xDD79DF9F4D26E1C9);
	nativeCall();
}
inline void CAM__DISABLE_FIRST_PERSON_CAM_THIS_FRAME() /*0xDE2EF5DA284CC8DF*/ {
	nativeInit(0xDE2EF5DA284CC8DF);
	nativeCall();
}
inline void CAM__ANIMATE_GAMEPLAY_CAM_ZOOM(float p0, float distance) /*0xDF2E1F7742402E81*/ {
	uint64_t val;
	nativeInit(0xDF2E1F7742402E81);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_CAM_ACTIVE(Cam cam) /*0xDFB2B516207D3534*/ {
	uint64_t val;
	nativeInit(0xDFB2B516207D3534);
	*(Cam*)(&val) = cam;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float CAM__GET_GAMEPLAY_CAM_FAR_CLIP() /*0xDFC8CBC606FDB0FC*/ {
	nativeInit(0xDFC8CBC606FDB0FC); return *(float*)(nativeCall());
}
inline void CAM_0xE111A7C0D200CBC5(Any p0, float p1) /*0xE111A7C0D200CBC5*/ {
	uint64_t val;
	nativeInit(0xE111A7C0D200CBC5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool CAM_PLAY_SYNCHRONIZED_CAM_ANIM(Cam camera, int SceneID, const char* animName, const char* animDictionary) /*0xE32EFE9AB4A9AA0C*/ {
	uint64_t val;
	nativeInit(0xE32EFE9AB4A9AA0C);
	*(Cam*)(&val) = camera;
	nativePush(val);
	*(int*)(&val) = SceneID;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CAM_IS_SPHERE_VISIBLE(float x, float y, float z, float radius) /*0xE33D59DA70B58FDF*/ {
	uint64_t val;
	nativeInit(0xE33D59DA70B58FDF);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CAM_GET_IS_MULTIPLAYER_BRIEF(bool p0) /*0xE3433EADAAF7EE40*/ {
	uint64_t val;
	nativeInit(0xE3433EADAAF7EE40);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CAM_IS_GAMEPLAY_HINT_ACTIVE() /*0xE520FF1AD2785B40*/ {
	nativeInit(0xE520FF1AD2785B40); return *(bool*)(nativeCall());
}
inline Any CAM_0xE9EA16D6E54CDCA4(Vehicle p0, int p1) /*0xE9EA16D6E54CDCA4*/ {
	uint64_t val;
	nativeInit(0xE9EA16D6E54CDCA4);
	*(Vehicle*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void CAM__ENABLE_CROSSHAIR_THIS_FRAME() /*0xEA7F0AD7E9BA676F*/ {
	nativeInit(0xEA7F0AD7E9BA676F);
	nativeCall();
}
inline Any CAM_0xEAF0FA793D05C592() /*0xEAF0FA793D05C592*/ {
	nativeInit(0xEAF0FA793D05C592); return *(Any*)(nativeCall());
}
inline void CAM_SET_CAM_FAR_DOF(Cam cam, float farDOF) /*0xEDD91296CD01AEE0*/ {
	uint64_t val;
	nativeInit(0xEDD91296CD01AEE0);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = farDOF;
	nativePush(val);
	nativeCall();
}
inline Any CAM_0xEE778F8C7E1142E2(Any p0) /*0xEE778F8C7E1142E2*/ {
	uint64_t val;
	nativeInit(0xEE778F8C7E1142E2);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int CAM_GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL() /*0xEE82280AB767B690*/ {
	nativeInit(0xEE82280AB767B690); return *(int*)(nativeCall());
}
inline void CAM_STOP_CAM_POINTING(Cam cam) /*0xF33AB75780BA57DE*/ {
	uint64_t val;
	nativeInit(0xF33AB75780BA57DE);
	*(Cam*)(&val) = cam;
	nativePush(val);
	nativeCall();
}
inline void CAM_STOP_GAMEPLAY_HINT(bool p0) /*0xF46C581C61718916*/ {
	uint64_t val;
	nativeInit(0xF46C581C61718916);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xF4C8CF9E353AFECA(const char* p0, float p1) /*0xF4C8CF9E353AFECA*/ {
	uint64_t val;
	nativeInit(0xF4C8CF9E353AFECA);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM__F4F2C0D4EE209E20() /*0xF4F2C0D4EE209E20*/ {
	nativeInit(0xF4F2C0D4EE209E20);
	nativeCall();
}
inline void CAM_0xF55E4046F6F831DC(Any p0, float p1) /*0xF55E4046F6F831DC*/ {
	uint64_t val;
	nativeInit(0xF55E4046F6F831DC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void CAM_POINT_CAM_AT_COORD(Cam cam, float x, float y, float z) /*0xF75497BB865F0803*/ {
	uint64_t val;
	nativeInit(0xF75497BB865F0803);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xF8BDBF3D573049A1(float p0) /*0xF8BDBF3D573049A1*/ {
	uint64_t val;
	nativeInit(0xF8BDBF3D573049A1);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM__SET_CAMERA_RANGE(Cam cam, float range) /*0xF9D02130ECDD1D77*/ {
	uint64_t val;
	nativeInit(0xF9D02130ECDD1D77);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	nativeCall();
}
inline void CAM_0xFD3151CD37EA2245(Any p0) /*0xFD3151CD37EA2245*/ {
	uint64_t val;
	nativeInit(0xFD3151CD37EA2245);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CAM_SHAKE_GAMEPLAY_CAM(const char* shakeName, float intensity) /*0xFD55E49555E017CF*/ {
	uint64_t val;
	nativeInit(0xFD55E49555E017CF);
	*(const char**)(&val) = shakeName;
	nativePush(val);
	*(float*)(&val) = intensity;
	nativePush(val);
	nativeCall();
}
inline void CAM_ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, bool isRelative) /*0xFEDB7D269E8C60E3*/ {
	uint64_t val;
	nativeInit(0xFEDB7D269E8C60E3);
	*(Cam*)(&val) = cam;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(bool*)(&val) = isRelative;
	nativePush(val);
	nativeCall();
}
inline const char* CONTROLS_GET_CONTROL_INSTRUCTIONAL_BUTTON(int inputGroup, int control, Player p2) /*0x0499D7B09FC9B407*/ {
	uint64_t val;
	nativeInit(0x0499D7B09FC9B407);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	*(Player*)(&val) = p2;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool CONTROLS_0x0F70731BACCFBB96() /*0x0F70731BACCFBB96*/ {
	nativeInit(0x0F70731BACCFBB96); return *(bool*)(nativeCall());
}
inline float CONTROLS_GET_DISABLED_CONTROL_NORMAL(int inputGroup, int control) /*0x11E65974A982637C*/ {
	uint64_t val;
	nativeInit(0x11E65974A982637C);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool CONTROLS__IS_INPUT_JUST_DISABLED(int inputGroup) /*0x13337B38DB572509*/ {
	uint64_t val;
	nativeInit(0x13337B38DB572509);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CONTROLS_0x14D29BB12D47F68C(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x14D29BB12D47F68C*/ {
	uint64_t val;
	nativeInit(0x14D29BB12D47F68C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool CONTROLS_IS_CONTROL_ENABLED(int inputGroup, int control) /*0x1CEA6BFDF248E5D9*/ {
	uint64_t val;
	nativeInit(0x1CEA6BFDF248E5D9);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_0x23F09EADC01449D6(bool p0) /*0x23F09EADC01449D6*/ {
	uint64_t val;
	nativeInit(0x23F09EADC01449D6);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_IS_DISABLED_CONTROL_JUST_RELEASED(int inputGroup, int control) /*0x305C8DCD79DA8B0F*/ {
	uint64_t val;
	nativeInit(0x305C8DCD79DA8B0F);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CONTROLS_ENABLE_CONTROL_ACTION(int inputGroup, int control, bool enable) /*0x351220255D64C155*/ {
	uint64_t val;
	nativeInit(0x351220255D64C155);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	*(bool*)(&val) = enable;
	nativePush(val);
	nativeCall();
}
inline void CONTROLS_STOP_PAD_SHAKE(Any p0) /*0x38C16A305E8CDC8D*/ {
	uint64_t val;
	nativeInit(0x38C16A305E8CDC8D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CONTROLS_0x3D42B92563939375(const char* p0) /*0x3D42B92563939375*/ {
	uint64_t val;
	nativeInit(0x3D42B92563939375);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_0x4683149ED1DDE7A1(const char* p0) /*0x4683149ED1DDE7A1*/ {
	uint64_t val;
	nativeInit(0x4683149ED1DDE7A1);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CONTROLS_SET_PAD_SHAKE(int p0, int duration, int frequency) /*0x48B3886C1358D0D5*/ {
	uint64_t val;
	nativeInit(0x48B3886C1358D0D5);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = frequency;
	nativePush(val);
	nativeCall();
}
inline float CONTROLS_0x4F8A26A890FD62FB(int inputGroup, int control) /*0x4F8A26A890FD62FB*/ {
	uint64_t val;
	nativeInit(0x4F8A26A890FD62FB);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool CONTROLS_IS_CONTROL_JUST_RELEASED(int inputGroup, int control) /*0x50F940259D3841E6*/ {
	uint64_t val;
	nativeInit(0x50F940259D3841E6);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_IS_CONTROL_JUST_PRESSED(int inputGroup, int control) /*0x580417101DDB492F*/ {
	uint64_t val;
	nativeInit(0x580417101DDB492F);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any CONTROLS_0x59B9A7AF4C95133C() /*0x59B9A7AF4C95133C*/ {
	nativeInit(0x59B9A7AF4C95133C); return *(Any*)(nativeCall());
}
inline void CONTROLS_0x5B73C77D9EB66E24(bool p0) /*0x5B73C77D9EB66E24*/ {
	uint64_t val;
	nativeInit(0x5B73C77D9EB66E24);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float CONTROLS_0x5B84D09CEC5209C5(int inputGroup, int control) /*0x5B84D09CEC5209C5*/ {
	uint64_t val;
	nativeInit(0x5B84D09CEC5209C5);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CONTROLS_DISABLE_ALL_CONTROL_ACTIONS(int inputGroup) /*0x5F4B6931816E599B*/ {
	uint64_t val;
	nativeInit(0x5F4B6931816E599B);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	nativeCall();
}
inline void CONTROLS_0x643ED62D5EA3BEBD() /*0x643ED62D5EA3BEBD*/ {
	nativeInit(0x643ED62D5EA3BEBD);
	nativeCall();
}
inline bool CONTROLS_IS_CONTROL_RELEASED(int inputGroup, int control) /*0x648EE3E7F38877DD*/ {
	uint64_t val;
	nativeInit(0x648EE3E7F38877DD);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_0x6CD79468A1E595C6(int inputGroup) /*0x6CD79468A1E595C6*/ {
	uint64_t val;
	nativeInit(0x6CD79468A1E595C6);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_IS_LOOK_INVERTED() /*0x77B612531280010D*/ {
	nativeInit(0x77B612531280010D); return *(bool*)(nativeCall());
}
inline void CONTROLS_SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(bool toggle) /*0x798FDEB5B1575088*/ {
	uint64_t val;
	nativeInit(0x798FDEB5B1575088);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void CONTROLS__DISABLE_INPUT_GROUP(int inputGroup) /*0x7F4724035FDCA1DD*/ {
	uint64_t val;
	nativeInit(0x7F4724035FDCA1DD);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	nativeCall();
}
inline const char* CONTROLS_0x80C2FD58D720C801(int inputGroup, int control, bool p2) /*0x80C2FD58D720C801*/ {
	uint64_t val;
	nativeInit(0x80C2FD58D720C801);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void CONTROLS_0x8290252FFF36ACB5(int p0, int red, int green, int blue) /*0x8290252FFF36ACB5*/ {
	uint64_t val;
	nativeInit(0x8290252FFF36ACB5);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	nativeCall();
}
inline bool CONTROLS_IS_DISABLED_CONTROL_JUST_PRESSED(int inputGroup, int control) /*0x91AEF906BCA88877*/ {
	uint64_t val;
	nativeInit(0x91AEF906BCA88877);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CONTROLS_0xA0CEFCEA390AAB9B(Any p0) /*0xA0CEFCEA390AAB9B*/ {
	uint64_t val;
	nativeInit(0xA0CEFCEA390AAB9B);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CONTROLS__IS_INPUT_DISABLED(int inputGroup) /*0xA571D46727E2B718*/ {
	uint64_t val;
	nativeInit(0xA571D46727E2B718);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CONTROLS_ENABLE_ALL_CONTROL_ACTIONS(int inputGroup) /*0xA5FFE9B05F199DE7*/ {
	uint64_t val;
	nativeInit(0xA5FFE9B05F199DE7);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	nativeCall();
}
inline int CONTROLS_GET_LOCAL_PLAYER_AIM_STATE() /*0xBB41AFBBBC0A0287*/ {
	nativeInit(0xBB41AFBBBC0A0287); return *(int*)(nativeCall());
}
inline void CONTROLS_0xCB0360EFEFB2580D(Any p0) /*0xCB0360EFEFB2580D*/ {
	uint64_t val;
	nativeInit(0xCB0360EFEFB2580D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int CONTROLS_0xD7D22F5592AED8BA(int p0) /*0xD7D22F5592AED8BA*/ {
	uint64_t val;
	nativeInit(0xD7D22F5592AED8BA);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int CONTROLS_GET_CONTROL_VALUE(int inputGroup, int control) /*0xD95E79E8686D2C27*/ {
	uint64_t val;
	nativeInit(0xD95E79E8686D2C27);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool CONTROLS_0xE1615EC03B3BB4FD() /*0xE1615EC03B3BB4FD*/ {
	nativeInit(0xE1615EC03B3BB4FD); return *(bool*)(nativeCall());
}
inline bool CONTROLS_IS_DISABLED_CONTROL_PRESSED(int inputGroup, int control) /*0xE2587F8CBBD87B1D*/ {
	uint64_t val;
	nativeInit(0xE2587F8CBBD87B1D);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS__SET_CONTROL_NORMAL(int inputGroup, int control, float amount) /*0xE8A25867FBA3B05E*/ {
	uint64_t val;
	nativeInit(0xE8A25867FBA3B05E);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	*(float*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float CONTROLS_GET_CONTROL_NORMAL(int inputGroup, int control) /*0xEC3C9B8D5327B563*/ {
	uint64_t val;
	nativeInit(0xEC3C9B8D5327B563);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void CONTROLS_SET_INPUT_EXCLUSIVE(int inputGroup, int control) /*0xEDE476E5EE29EDB1*/ {
	uint64_t val;
	nativeInit(0xEDE476E5EE29EDB1);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	nativeCall();
}
inline void CONTROLS_0xF239400E16C23E08(Any p0, Any p1) /*0xF239400E16C23E08*/ {
	uint64_t val;
	nativeInit(0xF239400E16C23E08);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool CONTROLS_IS_CONTROL_PRESSED(int inputGroup, int contorl) /*0xF3A21BCD95725A4A*/ {
	uint64_t val;
	nativeInit(0xF3A21BCD95725A4A);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = contorl;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS__SET_CURSOR_LOCATION(float x, float y) /*0xFC695459D4D0E219*/ {
	uint64_t val;
	nativeInit(0xFC695459D4D0E219);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CONTROLS_0xFC859E2374407556() /*0xFC859E2374407556*/ {
	nativeInit(0xFC859E2374407556); return *(bool*)(nativeCall());
}
inline void CONTROLS_DISABLE_CONTROL_ACTION(int inputGroup, int control, bool disable) /*0xFE99B66D079CF6BC*/ {
	uint64_t val;
	nativeInit(0xFE99B66D079CF6BC);
	*(int*)(&val) = inputGroup;
	nativePush(val);
	*(int*)(&val) = control;
	nativePush(val);
	*(bool*)(&val) = disable;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x011883F41211432A(float x1, float y1, float z1, float x2, float y2, float z2, int p6) /*0x011883F41211432A*/ {
	uint64_t val;
	nativeInit(0x011883F41211432A);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_SET_CUTSCENE_PED_PROP_VARIATION(const char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash) /*0x0546524ADE2E9723*/ {
	uint64_t val;
	nativeInit(0x0546524ADE2E9723);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x06A3524161C502BA(Any* p0) /*0x06A3524161C502BA*/ {
	uint64_t val;
	nativeInit(0x06A3524161C502BA);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x06EE9048FD080382(bool p0) /*0x06EE9048FD080382*/ {
	uint64_t val;
	nativeInit(0x06EE9048FD080382);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Entity CUTSCENE_GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(const char* cutsceneEntName, Hash modelHash) /*0x0A2E9FDB9A8C62F6*/ {
	uint64_t val;
	nativeInit(0x0A2E9FDB9A8C62F6);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline Any CUTSCENE_0x0ABC54DE641DC0FC(Any* p0) /*0x0ABC54DE641DC0FC*/ {
	uint64_t val;
	nativeInit(0x0ABC54DE641DC0FC);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void CUTSCENE_START_CUTSCENE(int p0) /*0x186D5CB5E7B0FF7B*/ {
	uint64_t val;
	nativeInit(0x186D5CB5E7B0FF7B);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_START_CUTSCENE_AT_COORDS(float x, float y, float z, int p3) /*0x1C9ADDA3244A1FBF*/ {
	uint64_t val;
	nativeInit(0x1C9ADDA3244A1FBF);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x20746F7B1032A3C7(bool p0, bool p1, bool p2, bool p3) /*0x20746F7B1032A3C7*/ {
	uint64_t val;
	nativeInit(0x20746F7B1032A3C7);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_REGISTER_SYNCHRONISED_SCRIPT_SPEECH() /*0x2131046957F31B04*/ {
	nativeInit(0x2131046957F31B04);
	nativeCall();
}
inline bool CUTSCENE_HAS_THIS_CUTSCENE_LOADED(const char* cutsceneName) /*0x228D3D94F8A11C3C*/ {
	uint64_t val;
	nativeInit(0x228D3D94F8A11C3C);
	*(const char**)(&val) = cutsceneName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CUTSCENE_0x2A56C06EBEF2B0D9(const char* cutsceneEntName, Ped ped, Hash modelHash) /*0x2A56C06EBEF2B0D9*/ {
	uint64_t val;
	nativeInit(0x2A56C06EBEF2B0D9);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x2F137B508DE238F2(bool p0) /*0x2F137B508DE238F2*/ {
	uint64_t val;
	nativeInit(0x2F137B508DE238F2);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool CUTSCENE_WAS_CUTSCENE_SKIPPED() /*0x40C8656EDAEDD569*/ {
	nativeInit(0x40C8656EDAEDD569); return *(bool*)(nativeCall());
}
inline void CUTSCENE_0x41FAA8FB2ECE8720(bool p0) /*0x41FAA8FB2ECE8720*/ {
	uint64_t val;
	nativeInit(0x41FAA8FB2ECE8720);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_REMOVE_CUTSCENE() /*0x440AF51A3462B86F*/ {
	nativeInit(0x440AF51A3462B86F);
	nativeCall();
}
inline int CUTSCENE_GET_CUTSCENE_SECTION_PLAYING() /*0x49010A6A396553D8*/ {
	nativeInit(0x49010A6A396553D8); return *(int*)(nativeCall());
}
inline bool CUTSCENE_DOES_CUTSCENE_ENTITY_EXIST(const char* cutsceneEntName, Hash modelHash) /*0x499EF20C5DB25C59*/ {
	uint64_t val;
	nativeInit(0x499EF20C5DB25C59);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CUTSCENE_0x4C61C75BEE8184C2(const char* p0, Any p1, Any p2) /*0x4C61C75BEE8184C2*/ {
	uint64_t val;
	nativeInit(0x4C61C75BEE8184C2);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool CUTSCENE_CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) /*0x4C6A6451C79E4662*/ {
	uint64_t val;
	nativeInit(0x4C6A6451C79E4662);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CUTSCENE_0x4CEBC1ED31E8925E(const char* cutsceneName) /*0x4CEBC1ED31E8925E*/ {
	uint64_t val;
	nativeInit(0x4CEBC1ED31E8925E);
	*(const char**)(&val) = cutsceneName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int CUTSCENE_0x583DF8E3D4AFBD98() /*0x583DF8E3D4AFBD98*/ {
	nativeInit(0x583DF8E3D4AFBD98); return *(int*)(nativeCall());
}
inline bool CUTSCENE_0x5EDEF0CF8C1DAB3C() /*0x5EDEF0CF8C1DAB3C*/ {
	nativeInit(0x5EDEF0CF8C1DAB3C); return *(bool*)(nativeCall());
}
inline bool CUTSCENE_CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) /*0x645D0B458D8E17B5*/ {
	uint64_t val;
	nativeInit(0x645D0B458D8E17B5);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CUTSCENE_0x708BDD8CD795B043() /*0x708BDD8CD795B043*/ {
	nativeInit(0x708BDD8CD795B043); return *(bool*)(nativeCall());
}
inline bool CUTSCENE_0x71B74D2AE19338D0(int p0) /*0x71B74D2AE19338D0*/ {
	uint64_t val;
	nativeInit(0x71B74D2AE19338D0);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void CUTSCENE_REQUEST_CUTSCENE(const char* cutsceneName, int p1) /*0x7A86743F475D9E09*/ {
	uint64_t val;
	nativeInit(0x7A86743F475D9E09);
	*(const char**)(&val) = cutsceneName;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool CUTSCENE_HAS_CUTSCENE_FINISHED() /*0x7C0A893088881D57*/ {
	nativeInit(0x7C0A893088881D57); return *(bool*)(nativeCall());
}
inline void CUTSCENE_0x7F96F23FA9B73327(Hash modelHash) /*0x7F96F23FA9B73327*/ {
	uint64_t val;
	nativeInit(0x7F96F23FA9B73327);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_SET_CUTSCENE_FADE_VALUES(bool p0, bool p1, bool p2, bool p3) /*0x8093F23ABACCC7D4*/ {
	uint64_t val;
	nativeInit(0x8093F23ABACCC7D4);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0x8D9DF6ECA8768583(int p0) /*0x8D9DF6ECA8768583*/ {
	uint64_t val;
	nativeInit(0x8D9DF6ECA8768583);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_SET_CUTSCENE_TRIGGER_AREA(float p0, float p1, float p2, float p3, float p4, float p5) /*0x9896CE4721BE84BA*/ {
	uint64_t val;
	nativeInit(0x9896CE4721BE84BA);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool CUTSCENE_IS_CUTSCENE_ACTIVE() /*0x991251AFC3981F84*/ {
	nativeInit(0x991251AFC3981F84); return *(bool*)(nativeCall());
}
inline int CUTSCENE_0xA0FE76168A189DDB() /*0xA0FE76168A189DDB*/ {
	nativeInit(0xA0FE76168A189DDB); return *(int*)(nativeCall());
}
inline bool CUTSCENE_0xA1C996C2A744262E(Any* p0) /*0xA1C996C2A744262E*/ {
	uint64_t val;
	nativeInit(0xA1C996C2A744262E);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CUTSCENE_CAN_SET_EXIT_STATE_FOR_CAMERA(bool p0) /*0xB2CBCD0930DFB420*/ {
	uint64_t val;
	nativeInit(0xB2CBCD0930DFB420);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool CUTSCENE_0xB56BBBCC2955D9CB() /*0xB56BBBCC2955D9CB*/ {
	nativeInit(0xB56BBBCC2955D9CB); return *(bool*)(nativeCall());
}
inline void CUTSCENE_SET_CUTSCENE_ORIGIN(float x, float y, float z, float p3, int p4) /*0xB812B3FD1C01CF27*/ {
	uint64_t val;
	nativeInit(0xB812B3FD1C01CF27);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_SET_CUTSCENE_PED_COMPONENT_VARIATION(const char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash) /*0xBA01E7B6DEEFBBC9*/ {
	uint64_t val;
	nativeInit(0xBA01E7B6DEEFBBC9);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline Entity CUTSCENE_GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(const char* cutsceneEntName, Hash modelHash) /*0xC0741A26499654CD*/ {
	uint64_t val;
	nativeInit(0xC0741A26499654CD);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void CUTSCENE__REQUEST_CUTSCENE_EX(const char* cutsceneName, int p1, int p2) /*0xC23DE0E91C30B58C*/ {
	uint64_t val;
	nativeInit(0xC23DE0E91C30B58C);
	*(const char**)(&val) = cutsceneName;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool CUTSCENE_HAS_CUTSCENE_LOADED() /*0xC59F528E9AB9F339*/ {
	nativeInit(0xC59F528E9AB9F339); return *(bool*)(nativeCall());
}
inline void CUTSCENE_0xC61B86C9F61EB404(bool toggle) /*0xC61B86C9F61EB404*/ {
	uint64_t val;
	nativeInit(0xC61B86C9F61EB404);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_STOP_CUTSCENE(bool p0) /*0xC7272775B4DC786E*/ {
	uint64_t val;
	nativeInit(0xC7272775B4DC786E);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_0xD00D76A7DFC9D852(Any* p0) /*0xD00D76A7DFC9D852*/ {
	uint64_t val;
	nativeInit(0xD00D76A7DFC9D852);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_STOP_CUTSCENE_IMMEDIATELY() /*0xD220BDD222AC4A1E*/ {
	nativeInit(0xD220BDD222AC4A1E);
	nativeCall();
}
inline bool CUTSCENE_IS_CUTSCENE_PLAYING() /*0xD3C2E180A40F031E*/ {
	nativeInit(0xD3C2E180A40F031E); return *(bool*)(nativeCall());
}
inline void CUTSCENE_0xE36A98D8AB3D3C66(bool p0) /*0xE36A98D8AB3D3C66*/ {
	uint64_t val;
	nativeInit(0xE36A98D8AB3D3C66);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void CUTSCENE_REGISTER_ENTITY_FOR_CUTSCENE(Ped cutscenePed, const char* cutsceneEntName, int p2, Hash modelHash, int p4) /*0xE40C1C56DF95C2E8*/ {
	uint64_t val;
	nativeInit(0xE40C1C56DF95C2E8);
	*(Ped*)(&val) = cutscenePed;
	nativePush(val);
	*(const char**)(&val) = cutsceneEntName;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline int CUTSCENE_GET_CUTSCENE_TIME() /*0xE625BEABBAFFDAB9*/ {
	nativeInit(0xE625BEABBAFFDAB9); return *(int*)(nativeCall());
}
inline int CUTSCENE_GET_CUTSCENE_TOTAL_DURATION() /*0xEE53B14A19E480D4*/ {
	nativeInit(0xEE53B14A19E480D4); return *(int*)(nativeCall());
}
inline bool DATAFILE_0x01095C95CD46B624(int p0) /*0x01095C95CD46B624*/ {
	uint64_t val;
	nativeInit(0x01095C95CD46B624);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int DATAFILE__OBJECT_VALUE_GET_TYPE(Any* objectData, const char* key) /*0x031C55ED33227371*/ {
	uint64_t val;
	nativeInit(0x031C55ED33227371);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DATAFILE__ARRAY_VALUE_GET_SIZE(Any* arrayData) /*0x065DB281590CEA2D*/ {
	uint64_t val;
	nativeInit(0x065DB281590CEA2D);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline float DATAFILE__OBJECT_VALUE_GET_FLOAT(Any* objectData, const char* key) /*0x06610343E73B9727*/ {
	uint64_t val;
	nativeInit(0x06610343E73B9727);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool DATAFILE__OBJECT_VALUE_GET_boolEAN(Any* objectData, const char* key) /*0x1186940ED72FFEEC*/ {
	uint64_t val;
	nativeInit(0x1186940ED72FFEEC);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE_0x15FF52B809DB2353(Any p0) /*0x15FF52B809DB2353*/ {
	uint64_t val;
	nativeInit(0x15FF52B809DB2353);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE_0x22DA66936E0FFF37(Any p0) /*0x22DA66936E0FFF37*/ {
	uint64_t val;
	nativeInit(0x22DA66936E0FFF37);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE_0x2ED61456317B8178() /*0x2ED61456317B8178*/ {
	nativeInit(0x2ED61456317B8178);
	nativeCall();
}
inline void DATAFILE__ARRAY_VALUE_ADD_STRING(Any* arrayData, const char* value) /*0x2F0661C155AEEEAA*/ {
	uint64_t val;
	nativeInit(0x2F0661C155AEEEAA);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void DATAFILE__OBJECT_VALUE_ADD_boolEAN(Any* objectData, const char* key, bool value) /*0x35124302A556A325*/ {
	uint64_t val;
	nativeInit(0x35124302A556A325);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int DATAFILE__ARRAY_VALUE_GET_TYPE(Any* arrayData, int arrayIndex) /*0x3A0014ADB172A3C5*/ {
	uint64_t val;
	nativeInit(0x3A0014ADB172A3C5);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline const char* DATAFILE__OBJECT_VALUE_GET_STRING(Any* objectData, const char* key) /*0x3D2FD9E763B24472*/ {
	uint64_t val;
	nativeInit(0x3D2FD9E763B24472);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline int DATAFILE__ARRAY_VALUE_GET_INTEGER(Any* arrayData, int arrayIndex) /*0x3E5AE19425CD74BE*/ {
	uint64_t val;
	nativeInit(0x3E5AE19425CD74BE);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void DATAFILE__ARRAY_VALUE_ADD_VECTOR3(Any* arrayData, float valueX, float valueY, float valueZ) /*0x407F8D034F70F0C2*/ {
	uint64_t val;
	nativeInit(0x407F8D034F70F0C2);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(float*)(&val) = valueX;
	nativePush(val);
	*(float*)(&val) = valueY;
	nativePush(val);
	*(float*)(&val) = valueZ;
	nativePush(val);
	nativeCall();
}
inline bool DATAFILE_0x4645DE9980999E93(const char* p0, const char* p1, const char* p2, const char* p3, const char* type) /*0x4645DE9980999E93*/ {
	uint64_t val;
	nativeInit(0x4645DE9980999E93);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = p3;
	nativePush(val);
	*(const char**)(&val) = type;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 DATAFILE__OBJECT_VALUE_GET_VECTOR3(Any* objectData, const char* key) /*0x46CD3CB66E0825CC*/ {
	uint64_t val;
	nativeInit(0x46CD3CB66E0825CC);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void DATAFILE__OBJECT_VALUE_ADD_VECTOR3(Any* objectData, const char* key, float valueX, float valueY, float valueZ) /*0x4CD49B76338C7DEE*/ {
	uint64_t val;
	nativeInit(0x4CD49B76338C7DEE);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	*(float*)(&val) = valueX;
	nativePush(val);
	*(float*)(&val) = valueY;
	nativePush(val);
	*(float*)(&val) = valueZ;
	nativePush(val);
	nativeCall();
}
inline bool DATAFILE_0x4DFDD9EB705F8140(bool* p0) /*0x4DFDD9EB705F8140*/ {
	uint64_t val;
	nativeInit(0x4DFDD9EB705F8140);
	*(bool**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE__ARRAY_VALUE_GET_boolEAN(Any* arrayData, int arrayIndex) /*0x50C1B2874E50C114*/ {
	uint64_t val;
	nativeInit(0x50C1B2874E50C114);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE_0x52818819057F2B40(int p0) /*0x52818819057F2B40*/ {
	uint64_t val;
	nativeInit(0x52818819057F2B40);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE__ARRAY_VALUE_ADD_FLOAT(Any* arrayData, float value) /*0x57A995FD75D37F56*/ {
	uint64_t val;
	nativeInit(0x57A995FD75D37F56);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline Any* DATAFILE__OBJECT_VALUE_ADD_ARRAY(Any* objectData, const char* key) /*0x5B11728527CA6E5F*/ {
	uint64_t val;
	nativeInit(0x5B11728527CA6E5F);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline bool DATAFILE_0x648E7A5434AF7969(const char* p0, Any* p1, bool p2, Any* p3, Any* p4, Any* p5, const char* type) /*0x648E7A5434AF7969*/ {
	uint64_t val;
	nativeInit(0x648E7A5434AF7969);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any**)(&val) = p5;
	nativePush(val);
	*(const char**)(&val) = type;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any* DATAFILE__ARRAY_VALUE_ADD_OBJECT(Any* arrayData) /*0x6889498B3E19C797*/ {
	uint64_t val;
	nativeInit(0x6889498B3E19C797);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline bool DATAFILE_0x692D808C34A82143(const char* p0, float p1, const char* type) /*0x692D808C34A82143*/ {
	uint64_t val;
	nativeInit(0x692D808C34A82143);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = type;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE_0x6CC86E78358D5119() /*0x6CC86E78358D5119*/ {
	nativeInit(0x6CC86E78358D5119);
	nativeCall();
}
inline int DATAFILE__OBJECT_VALUE_GET_INTEGER(Any* objectData, const char* key) /*0x78F06F6B1FB5A80C*/ {
	uint64_t val;
	nativeInit(0x78F06F6B1FB5A80C);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any* DATAFILE__OBJECT_VALUE_GET_ARRAY(Any* objectData, const char* key) /*0x7A983AA9DA2659ED*/ {
	uint64_t val;
	nativeInit(0x7A983AA9DA2659ED);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline bool DATAFILE_0x83BCCE3224735F05(const char* filename) /*0x83BCCE3224735F05*/ {
	uint64_t val;
	nativeInit(0x83BCCE3224735F05);
	*(const char**)(&val) = filename;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any* DATAFILE__ARRAY_VALUE_GET_OBJECT(Any* arrayData, int arrayIndex) /*0x8B5FADCC4E3A145F*/ {
	uint64_t val;
	nativeInit(0x8B5FADCC4E3A145F);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline Vector3 DATAFILE__ARRAY_VALUE_GET_VECTOR3(Any* arrayData, int arrayIndex) /*0x8D2064E5B64A628A*/ {
	uint64_t val;
	nativeInit(0x8D2064E5B64A628A);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool DATAFILE_0x8F5EA1C01D65A100(Any p0) /*0x8F5EA1C01D65A100*/ {
	uint64_t val;
	nativeInit(0x8F5EA1C01D65A100);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE__OBJECT_VALUE_ADD_STRING(Any* objectData, const char* key, const char* value) /*0x8FF3847DADD8E30C*/ {
	uint64_t val;
	nativeInit(0x8FF3847DADD8E30C);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline const char* DATAFILE_DATAFILE_GET_FILE_DICT() /*0x906B778CA1DC72B6*/ {
	nativeInit(0x906B778CA1DC72B6); return *(const char**)(nativeCall());
}
inline void DATAFILE_DATAFILE_DELETE() /*0x9AB9C1CFC8862DFB*/ {
	nativeInit(0x9AB9C1CFC8862DFB);
	nativeCall();
}
inline bool DATAFILE_0x9CB0BFA7A9342C3D(int p0, bool p1) /*0x9CB0BFA7A9342C3D*/ {
	uint64_t val;
	nativeInit(0x9CB0BFA7A9342C3D);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any* DATAFILE__OBJECT_VALUE_ADD_OBJECT(Any* objectData, const char* key) /*0xA358F56F10732EE1*/ {
	uint64_t val;
	nativeInit(0xA358F56F10732EE1);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline bool DATAFILE_0xA5EFC3E847D60507(const char* p0, const char* p1, const char* p2, const char* p3, bool p4) /*0xA5EFC3E847D60507*/ {
	uint64_t val;
	nativeInit(0xA5EFC3E847D60507);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE_0xA69AC4ADE82B57A4(int p0) /*0xA69AC4ADE82B57A4*/ {
	uint64_t val;
	nativeInit(0xA69AC4ADE82B57A4);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE_0xAD6875BBC0FC899C(Blip x) /*0xAD6875BBC0FC899C*/ {
	uint64_t val;
	nativeInit(0xAD6875BBC0FC899C);
	*(Blip*)(&val) = x;
	nativePush(val);
	nativeCall();
}
inline Any* DATAFILE__OBJECT_VALUE_GET_OBJECT(Any* sCloudFile, const char* key) /*0xB6B9DDC412FCEEE2*/ {
	uint64_t val;
	nativeInit(0xB6B9DDC412FCEEE2);
	*(Any**)(&val) = sCloudFile;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	return *(Any**)(nativeCall());
}
inline bool DATAFILE_DATAFILE_IS_SAVE_PENDING() /*0xBEDB96A7584AA8CF*/ {
	nativeInit(0xBEDB96A7584AA8CF); return *(bool*)(nativeCall());
}
inline float DATAFILE__ARRAY_VALUE_GET_FLOAT(Any* arrayData, int arrayIndex) /*0xC0C527B525D7CFB5*/ {
	uint64_t val;
	nativeInit(0xC0C527B525D7CFB5);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void DATAFILE__OBJECT_VALUE_ADD_FLOAT(Any* objectData, const char* key, float value) /*0xC27E1CC2D795105E*/ {
	uint64_t val;
	nativeInit(0xC27E1CC2D795105E);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool DATAFILE__LOAD_UGC_FILE(const char* filename) /*0xC5238C011AF405E4*/ {
	uint64_t val;
	nativeInit(0xC5238C011AF405E4);
	*(const char**)(&val) = filename;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE_0xC55854C7D7274882() /*0xC55854C7D7274882*/ {
	nativeInit(0xC55854C7D7274882);
	nativeCall();
}
inline bool DATAFILE_0xC84527E235FCA219(const char* p0, bool p1, const char* p2, Any* p3, Any* p4, const char* type, bool p6) /*0xC84527E235FCA219*/ {
	uint64_t val;
	nativeInit(0xC84527E235FCA219);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(const char**)(&val) = type;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DATAFILE__ARRAY_VALUE_ADD_INTEGER(Any* arrayData, int value) /*0xCABDB751D86FE93B*/ {
	uint64_t val;
	nativeInit(0xCABDB751D86FE93B);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void DATAFILE_DATAFILE_CREATE() /*0xD27058A1CA2B13EE*/ {
	nativeInit(0xD27058A1CA2B13EE);
	nativeCall();
}
inline const char* DATAFILE__ARRAY_VALUE_GET_STRING(Any* arrayData, int arrayIndex) /*0xD3F2FFEB8D836F52*/ {
	uint64_t val;
	nativeInit(0xD3F2FFEB8D836F52);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(int*)(&val) = arrayIndex;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void DATAFILE__OBJECT_VALUE_ADD_INTEGER(Any* objectData, const char* key, int value) /*0xE7E035450A7948D5*/ {
	uint64_t val;
	nativeInit(0xE7E035450A7948D5);
	*(Any**)(&val) = objectData;
	nativePush(val);
	*(const char**)(&val) = key;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void DATAFILE__ARRAY_VALUE_ADD_boolEAN(Any* arrayData, bool value) /*0xF8B0F5A43E928C76*/ {
	uint64_t val;
	nativeInit(0xF8B0F5A43E928C76);
	*(Any**)(&val) = arrayData;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool DATAFILE_0xF8CC1EBE0B62E29F(Any p0) /*0xF8CC1EBE0B62E29F*/ {
	uint64_t val;
	nativeInit(0xF8CC1EBE0B62E29F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DATAFILE_0xFCCAE5B92A830878(Any p0) /*0xFCCAE5B92A830878*/ {
	uint64_t val;
	nativeInit(0xFCCAE5B92A830878);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECISIONEVENT_IS_SHOCKING_EVENT_IN_SPHERE(int type, float x, float y, float z, float radius) /*0x1374ABB7C15BAB92*/ {
	uint64_t val;
	nativeInit(0x1374ABB7C15BAB92);
	*(int*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECISIONEVENT_REMOVE_SHOCKING_EVENT(ScrHandle event) /*0x2CDA538C44C6CCE5*/ {
	uint64_t val;
	nativeInit(0x2CDA538C44C6CCE5);
	*(ScrHandle*)(&val) = event;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DECISIONEVENT_SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME() /*0x2F9A292AD0A3BD89*/ {
	nativeInit(0x2F9A292AD0A3BD89);
	nativeCall();
}
inline void DECISIONEVENT_REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS() /*0x340F1415B68AEADE*/ {
	nativeInit(0x340F1415B68AEADE);
	nativeCall();
}
inline void DECISIONEVENT_SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(int type) /*0x3FD2EC8BF1F1CF30*/ {
	uint64_t val;
	nativeInit(0x3FD2EC8BF1F1CF30);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline void DECISIONEVENT_CLEAR_DECISION_MAKER_EVENT_RESPONSE(Hash name, int type) /*0x4FC9381A7AEE8968*/ {
	uint64_t val;
	nativeInit(0x4FC9381A7AEE8968);
	*(Hash*)(&val) = name;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline void DECISIONEVENT_SUPPRESS_AGITATION_EVENTS_NEXT_FRAME() /*0x5F3B7749C112D552*/ {
	nativeInit(0x5F3B7749C112D552);
	nativeCall();
}
inline ScrHandle DECISIONEVENT_ADD_SHOCKING_EVENT_FOR_ENTITY(int type, Entity entity, float duration) /*0x7FD8F3BE76F89422*/ {
	uint64_t val;
	nativeInit(0x7FD8F3BE76F89422);
	*(int*)(&val) = type;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	return *(ScrHandle*)(nativeCall());
}
inline void DECISIONEVENT_SET_DECISION_MAKER(Ped ped, Hash name) /*0xB604A2942ADED0EE*/ {
	uint64_t val;
	nativeInit(0xB604A2942ADED0EE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void DECISIONEVENT_UNBLOCK_DECISION_MAKER_EVENT(Hash name, int type) /*0xD7CD9CF34F2C99E8*/ {
	uint64_t val;
	nativeInit(0xD7CD9CF34F2C99E8);
	*(Hash*)(&val) = name;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline ScrHandle DECISIONEVENT_ADD_SHOCKING_EVENT_AT_POSITION(int type, float x, float y, float z, float duration) /*0xD9F8455409B525E9*/ {
	uint64_t val;
	nativeInit(0xD9F8455409B525E9);
	*(int*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	return *(ScrHandle*)(nativeCall());
}
inline void DECISIONEVENT_BLOCK_DECISION_MAKER_EVENT(Hash name, int type) /*0xE42FCDFD0E4196F7*/ {
	uint64_t val;
	nativeInit(0xE42FCDFD0E4196F7);
	*(Hash*)(&val) = name;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline void DECISIONEVENT_REMOVE_ALL_SHOCKING_EVENTS(bool p0) /*0xEAABE8FDFA21274C*/ {
	uint64_t val;
	nativeInit(0xEAABE8FDFA21274C);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool DECORATOR_DECOR_REMOVE(Entity entity, const char* propertyName) /*0x00EE9F297C738720*/ {
	uint64_t val;
	nativeInit(0x00EE9F297C738720);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECORATOR_DECOR_EXIST_ON(Entity entity, const char* propertyName) /*0x05661B80A8C9165F*/ {
	uint64_t val;
	nativeInit(0x05661B80A8C9165F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECORATOR_DECOR_SET_INT(Entity entity, const char* propertyName, int value) /*0x0CE3AA5E1CA19E10*/ {
	uint64_t val;
	nativeInit(0x0CE3AA5E1CA19E10);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECORATOR__DECOR_SET_FLOAT(Entity entity, const char* propertyName, float value) /*0x211AB1DD8D0F363A*/ {
	uint64_t val;
	nativeInit(0x211AB1DD8D0F363A);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECORATOR_0x241FCA5B1AA14F75() /*0x241FCA5B1AA14F75*/ {
	nativeInit(0x241FCA5B1AA14F75); return *(bool*)(nativeCall());
}
inline bool DECORATOR_DECOR_IS_REGISTERED_AS_TYPE(const char* propertyName, int type) /*0x4F14F9F870D6FBC8*/ {
	uint64_t val;
	nativeInit(0x4F14F9F870D6FBC8);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float DECORATOR__DECOR_GET_FLOAT(Entity entity, const char* propertyName) /*0x6524A2F114706F43*/ {
	uint64_t val;
	nativeInit(0x6524A2F114706F43);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool DECORATOR_DECOR_SET_bool(Entity entity, const char* propertyName, bool value) /*0x6B1E8E2ED1335B71*/ {
	uint64_t val;
	nativeInit(0x6B1E8E2ED1335B71);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DECORATOR_DECOR_SET_TIME(Entity entity, const char* propertyName, int timestamp) /*0x95AED7B8E39ECAA4*/ {
	uint64_t val;
	nativeInit(0x95AED7B8E39ECAA4);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(int*)(&val) = timestamp;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DECORATOR_DECOR_REGISTER(const char* propertyName, int type) /*0x9FD90732F56403CE*/ {
	uint64_t val;
	nativeInit(0x9FD90732F56403CE);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline int DECORATOR_DECOR_GET_INT(Entity entity, const char* propertyName) /*0xA06C969B02A97298*/ {
	uint64_t val;
	nativeInit(0xA06C969B02A97298);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void DECORATOR_DECOR_REGISTER_LOCK() /*0xA9D14EEA259F9248*/ {
	nativeInit(0xA9D14EEA259F9248);
	nativeCall();
}
inline bool DECORATOR_DECOR_GET_bool(Entity entity, const char* propertyName) /*0xDACE671663F2F5DB*/ {
	uint64_t val;
	nativeInit(0xDACE671663F2F5DB);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any DLC1__GET_FORCED_COMPONENT(Any p0) /*0x017568A8182D98A6*/ {
	uint64_t val;
	nativeInit(0x017568A8182D98A6);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Hash DLC1_GET_HASH_NAME_FOR_COMPONENT(Entity entity, int componentId, int drawableVariant, int textureVariant) /*0x0368B3A838070348*/ {
	uint64_t val;
	nativeInit(0x0368B3A838070348);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = drawableVariant;
	nativePush(val);
	*(int*)(&val) = textureVariant;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool DLC1_IS_DLC_VEHICLE_MOD(Any modData) /*0x0564B9FF9631B82C*/ {
	uint64_t val;
	nativeInit(0x0564B9FF9631B82C);
	*(Any*)(&val) = modData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any DLC1_GET_SHOP_PED_OUTFIT_LOCATE(Any p0) /*0x073CA26B079F956E*/ {
	uint64_t val;
	nativeInit(0x073CA26B079F956E);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool DLC1_GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(Any outfitStruct, int slot, Any* componentStruct) /*0x19F2A026EDF0013F*/ {
	uint64_t val;
	nativeInit(0x19F2A026EDF0013F);
	*(Any*)(&val) = outfitStruct;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	*(Any**)(&val) = componentStruct;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DLC1_INIT_SHOP_PED_COMPONENT(int* outComponent) /*0x1E8C308FD312C036*/ {
	uint64_t val;
	nativeInit(0x1E8C308FD312C036);
	*(int**)(&val) = outComponent;
	nativePush(val);
	nativeCall();
}
inline void DLC1_GET_SHOP_PED_QUERY_COMPONENT(int componentId, int* outComponent) /*0x249E310B2D920699*/ {
	uint64_t val;
	nativeInit(0x249E310B2D920699);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int**)(&val) = outComponent;
	nativePush(val);
	nativeCall();
}
inline int DLC1__GET_NUM_DECORATIONS(int character) /*0x278F76C3B0A8F109*/ {
	uint64_t val;
	nativeInit(0x278F76C3B0A8F109);
	*(int*)(&val) = character;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool DLC1_GET_DLC_VEHICLE_DATA(int dlcVehicleIndex, int* outData) /*0x33468EDC08E371F6*/ {
	uint64_t val;
	nativeInit(0x33468EDC08E371F6);
	*(int*)(&val) = dlcVehicleIndex;
	nativePush(val);
	*(int**)(&val) = outData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DLC1__IS_TAG_RESTRICTED(Hash componentHash, Hash restrictionTag, int componentId) /*0x341DE7ED1D2A1BFD*/ {
	uint64_t val;
	nativeInit(0x341DE7ED1D2A1BFD);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	*(Hash*)(&val) = restrictionTag;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int DLC1_GET_NUM_DLC_WEAPON_COMPONENTS(int dlcWeaponIndex) /*0x405425358A7D61FE*/ {
	uint64_t val;
	nativeInit(0x405425358A7D61FE);
	*(int*)(&val) = dlcWeaponIndex;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DLC1_0x50F457823CE6EB5F(int p0, int p1, int p2, int p3) /*0x50F457823CE6EB5F*/ {
	uint64_t val;
	nativeInit(0x50F457823CE6EB5F);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DLC1_GET_DLC_VEHICLE_FLAGS(int dlcVehicleIndex) /*0x5549EE11FA22FCF2*/ {
	uint64_t val;
	nativeInit(0x5549EE11FA22FCF2);
	*(int*)(&val) = dlcVehicleIndex;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void DLC1_0x5D5CAFF661DDF6FC(Any p0, Any* p1) /*0x5D5CAFF661DDF6FC*/ {
	uint64_t val;
	nativeInit(0x5D5CAFF661DDF6FC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Hash DLC1_GET_HASH_NAME_FOR_PROP(Entity entity, int componentId, int propIndex, int propTextureIndex) /*0x5D6160275CAEC8DD*/ {
	uint64_t val;
	nativeInit(0x5D6160275CAEC8DD);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = propIndex;
	nativePush(val);
	*(int*)(&val) = propTextureIndex;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void DLC1_GET_FORCED_COMPONENT(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4) /*0x6C93ED8C2F74859B*/ {
	uint64_t val;
	nativeInit(0x6C93ED8C2F74859B);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool DLC1_GET_DLC_WEAPON_COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr) /*0x6CF598A2957C2BF8*/ {
	uint64_t val;
	nativeInit(0x6CF598A2957C2BF8);
	*(int*)(&val) = dlcWeaponIndex;
	nativePush(val);
	*(int*)(&val) = dlcWeapCompIndex;
	nativePush(val);
	*(Any**)(&val) = ComponentDataPtr;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DLC1_GET_SHOP_PED_QUERY_OUTFIT(Any p0, Any* outfit) /*0x6D793F03A631FE56*/ {
	uint64_t val;
	nativeInit(0x6D793F03A631FE56);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = outfit;
	nativePush(val);
	nativeCall();
}
inline void DLC1_GET_VARIANT_COMPONENT(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4) /*0x6E11F282F11863B6*/ {
	uint64_t val;
	nativeInit(0x6E11F282F11863B6);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void DLC1_GET_SHOP_PED_COMPONENT(Hash p0, Any* p1) /*0x74C0E2A57EC66760*/ {
	uint64_t val;
	nativeInit(0x74C0E2A57EC66760);
	*(Hash*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool DLC1_GET_DLC_WEAPON_DATA(int dlcWeaponIndex, int* outData) /*0x79923CD21BECE14E*/ {
	uint64_t val;
	nativeInit(0x79923CD21BECE14E);
	*(int*)(&val) = dlcWeaponIndex;
	nativePush(val);
	*(int**)(&val) = outData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int DLC1__GET_NUM_PROPS_FROM_OUTFIT(int character, int p1, int p2, bool p3, int p4, int componentId) /*0x9BDF59818B1E38C1*/ {
	uint64_t val;
	nativeInit(0x9BDF59818B1E38C1);
	*(int*)(&val) = character;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DLC1_GET_NUM_DLC_VEHICLES() /*0xA7A866D21CD2329B*/ {
	nativeInit(0xA7A866D21CD2329B); return *(int*)(nativeCall());
}
inline bool DLC1_GET_SHOP_PED_OUTFIT_PROP_VARIANT(Any outfitStruct, int slot, Any* propStruct) /*0xA9F9C2E0FDE11CBB*/ {
	uint64_t val;
	nativeInit(0xA9F9C2E0FDE11CBB);
	*(Any*)(&val) = outfitStruct;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	*(Any**)(&val) = propStruct;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DLC1_GET_SHOP_PED_OUTFIT(Any p0, Any* p1) /*0xB7952076E444979D*/ {
	uint64_t val;
	nativeInit(0xB7952076E444979D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int DLC1_0xC098810437312FFF(int modData) /*0xC098810437312FFF*/ {
	uint64_t val;
	nativeInit(0xC098810437312FFF);
	*(int*)(&val) = modData;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DLC1__GET_VARIANTS_FOR_COMPONENT_COUNT(Hash componentHash) /*0xC17AD0E5752BECDA*/ {
	uint64_t val;
	nativeInit(0xC17AD0E5752BECDA);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int DLC1__GET_NUM_FORCED_COMPONENTS(Hash componentHash) /*0xC6B9DB42C04DD8C3*/ {
	uint64_t val;
	nativeInit(0xC6B9DB42C04DD8C3);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool DLC1__IS_DLC_DATA_EMPTY(Any* dlcData) /*0xD4D7B033C3AA243C*/ {
	uint64_t val;
	nativeInit(0xD4D7B033C3AA243C);
	*(Any**)(&val) = dlcData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DLC1_GET_SHOP_PED_QUERY_PROP(Any p0, Any* p1) /*0xDE44A00999B2837D*/ {
	uint64_t val;
	nativeInit(0xDE44A00999B2837D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void DLC1_0xE1CA84EBF72E691D(Any p0, Any p1, Any* p2, Any* p3, Any* p4) /*0xE1CA84EBF72E691D*/ {
	uint64_t val;
	nativeInit(0xE1CA84EBF72E691D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void DLC1_INIT_SHOP_PED_PROP(int* outProp) /*0xEB0A2B758F7B850F*/ {
	uint64_t val;
	nativeInit(0xEB0A2B758F7B850F);
	*(int**)(&val) = outProp;
	nativePush(val);
	nativeCall();
}
inline Hash DLC1_GET_DLC_VEHICLE_MODEL(int dlcVehicleIndex) /*0xECC01B7C5763333C*/ {
	uint64_t val;
	nativeInit(0xECC01B7C5763333C);
	*(int*)(&val) = dlcVehicleIndex;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline int DLC1_GET_NUM_DLC_WEAPONS() /*0xEE47635F352DA367*/ {
	nativeInit(0xEE47635F352DA367); return *(int*)(nativeCall());
}
inline int DLC1__GET_CHARACTER_OUTFITS_COUNT(int character, bool p1) /*0xF3FBE2D50A6A8C28*/ {
	uint64_t val;
	nativeInit(0xF3FBE2D50A6A8C28);
	*(int*)(&val) = character;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool DLC1_0xFF56381874F82086(int character, int p1, int* outComponent) /*0xFF56381874F82086*/ {
	uint64_t val;
	nativeInit(0xFF56381874F82086);
	*(int*)(&val) = character;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int**)(&val) = outComponent;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void DLC2__LOAD_MP_DLC_MAPS() /*0x0888C3502DBBEEF5*/ {
	nativeInit(0x0888C3502DBBEEF5);
	nativeCall();
}
inline bool DLC2_GET_IS_LOADING_SCREEN_ACTIVE() /*0x10D0A8F259E93EC9*/ {
	nativeInit(0x10D0A8F259E93EC9); return *(bool*)(nativeCall());
}
inline bool DLC2__NULLIFY(Any* variable, Any unused) /*0x46E2B844905BC5F0*/ {
	uint64_t val;
	nativeInit(0x46E2B844905BC5F0);
	*(Any**)(&val) = variable;
	nativePush(val);
	*(Any*)(&val) = unused;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DLC2_IS_DLC_PRESENT(Hash dlcHash) /*0x812595A0644CE1DE*/ {
	uint64_t val;
	nativeInit(0x812595A0644CE1DE);
	*(Hash*)(&val) = dlcHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool DLC2_0x8D30F648014A92B5() /*0x8D30F648014A92B5*/ {
	nativeInit(0x8D30F648014A92B5); return *(bool*)(nativeCall());
}
inline Any DLC2_0x9489659372A81585() /*0x9489659372A81585*/ {
	nativeInit(0x9489659372A81585); return *(Any*)(nativeCall());
}
inline Any DLC2_0xA213B11DFF526300() /*0xA213B11DFF526300*/ {
	nativeInit(0xA213B11DFF526300); return *(Any*)(nativeCall());
}
inline void DLC2__UNLOAD_MP_DLC_MAPS() /*0xD7C10C4A637992C9*/ {
	nativeInit(0xD7C10C4A637992C9);
	nativeCall();
}
inline bool DLC2_0xF2E07819EF1A5289() /*0xF2E07819EF1A5289*/ {
	nativeInit(0xF2E07819EF1A5289); return *(bool*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(Entity entity1, Entity entity2) /*0x0267D00AF114F17A*/ {
	uint64_t val;
	nativeInit(0x0267D00AF114F17A);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_REMOVE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, bool p6) /*0x033C0F9A64E229AE*/ {
	uint64_t val;
	nativeInit(0x033C0F9A64E229AE);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = originalModel;
	nativePush(val);
	*(Hash*)(&val) = newModel;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline Ped ENTITY_GET_PED_INDEX_FROM_ENTITY_INDEX(Entity entity) /*0x04A2A40C73395041*/ {
	uint64_t val;
	nativeInit(0x04A2A40C73395041);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool ENTITY_DOES_ENTITY_HAVE_DRAWABLE(Entity entity) /*0x060D6E96F8B8E48D*/ {
	uint64_t val;
	nativeInit(0x060D6E96F8B8E48D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_COORDS(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis, bool clearArea) /*0x06843DA7060A026B*/ {
	uint64_t val;
	nativeInit(0x06843DA7060A026B);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	*(bool*)(&val) = clearArea;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_FIND_ANIM_EVENT_PHASE(const char* animDictionary, const char* animName, const char* p2, Any* p3, Any* p4) /*0x07F1BE2BCCAA27A7*/ {
	uint64_t val;
	nativeInit(0x07F1BE2BCCAA27A7);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_RECORDS_COLLISIONS(Entity entity, bool toggle) /*0x0A50A1EEDAD01E65*/ {
	uint64_t val;
	nativeInit(0x0A50A1EEDAD01E65);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Vector3 ENTITY_GET_ENTITY_FORWARD_VECTOR(Entity entity) /*0x0A794A5A57F8DF91*/ {
	uint64_t val;
	nativeInit(0x0A794A5A57F8DF91);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_A_MISSION_ENTITY(Entity entity) /*0x0A7B270912999B3C*/ {
	uint64_t val;
	nativeInit(0x0A7B270912999B3C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_LOAD_COLLISION_FLAG(Entity entity, bool toggle) /*0x0DC7CABAB1E9B67E*/ {
	uint64_t val;
	nativeInit(0x0DC7CABAB1E9B67E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_MAX_SPEED(Entity entity, float speed) /*0x0E46A3FCBDE2A1B1*/ {
	uint64_t val;
	nativeInit(0x0E46A3FCBDE2A1B1);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_TOUCHING_MODEL(Entity entity, Hash modelHash) /*0x0F42323798A58C8C*/ {
	uint64_t val;
	nativeInit(0x0F42323798A58C8C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(float posX, float posY, float posZ, float radius, Object object, float playbackRate) /*0x11E79CAB7183B6F5*/ {
	uint64_t val;
	nativeInit(0x11E79CAB7183B6F5);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Object*)(&val) = object;
	nativePush(val);
	*(float*)(&val) = playbackRate;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_STATIC(Entity entity) /*0x1218E6886D3D8327*/ {
	uint64_t val;
	nativeInit(0x1218E6886D3D8327);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_CREATE_FORCED_OBJECT(float x, float y, float z, Any p3, Hash modelHash, bool p5) /*0x150E808B375A385A*/ {
	uint64_t val;
	nativeInit(0x150E808B375A385A);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline int ENTITY_GET_ENTITY_MAX_HEALTH(Entity entity) /*0x15D757606D170C3C*/ {
	uint64_t val;
	nativeInit(0x15D757606D170C3C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_MAX_HEALTH(Entity entity, int value) /*0x166E7CF68597D8B5*/ {
	uint64_t val;
	nativeInit(0x166E7CF68597D8B5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_DYNAMIC(Entity entity, bool toggle) /*0x1718DE8E3F2823CA*/ {
	uint64_t val;
	nativeInit(0x1718DE8E3F2823CA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_CAN_BE_DAMAGED(Entity entity, bool toggle) /*0x1760FFA8AB074D66*/ {
	uint64_t val;
	nativeInit(0x1760FFA8AB074D66);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_TOUCHING_ENTITY(Entity entity, Entity targetEntity) /*0x17FFC1B2BA35A494*/ {
	uint64_t val;
	nativeInit(0x17FFC1B2BA35A494);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Entity*)(&val) = targetEntity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 ENTITY_GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(Entity entity, float offsetX, float offsetY, float offsetZ) /*0x1899F328B0E12848*/ {
	uint64_t val;
	nativeInit(0x1899F328B0E12848);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void ENTITY_APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Entity entity, int forceType, float x, float y, float z, bool p5, bool isDirectionRel, bool isForceRel, bool p8) /*0x18FF00FC7EFF559E*/ {
	uint64_t val;
	nativeInit(0x18FF00FC7EFF559E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = forceType;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = isDirectionRel;
	nativePush(val);
	*(bool*)(&val) = isForceRel;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_0x1A092BB0C3808B96(Entity entity, bool p1) /*0x1A092BB0C3808B96*/ {
	uint64_t val;
	nativeInit(0x1A092BB0C3808B96);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_COLLISION(Entity entity, bool toggle, bool keepPhysics) /*0x1A9205C1B9EE827F*/ {
	uint64_t val;
	nativeInit(0x1A9205C1B9EE827F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = keepPhysics;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_VELOCITY(Entity entity, float x, float y, float z) /*0x1C99BB7B6E96D16F*/ {
	uint64_t val;
	nativeInit(0x1C99BB7B6E96D16F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_UPSIDEDOWN(Entity entity) /*0x1DBD58820FA61D71*/ {
	uint64_t val;
	nativeInit(0x1DBD58820FA61D71);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_HEIGHT_ABOVE_GROUND(Entity entity) /*0x1DD55701034110E5*/ {
	uint64_t val;
	nativeInit(0x1DD55701034110E5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_PLAYING_ANIM(Entity entity, const char* animDict, const char* animName, int taskFlag) /*0x1F0B79228E461EC9*/ {
	uint64_t val;
	nativeInit(0x1F0B79228E461EC9);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(int*)(&val) = taskFlag;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_AT_COORD(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, bool p7, bool p8, int p9) /*0x20B60995556D004F*/ {
	uint64_t val;
	nativeInit(0x20B60995556D004F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = xSize;
	nativePush(val);
	*(float*)(&val) = ySize;
	nativePush(val);
	*(float*)(&val) = zSize;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_ANIM_FINISHED(Entity entity, const char* animDict, const char* animName, int p3) /*0x20B711662962B472*/ {
	uint64_t val;
	nativeInit(0x20B711662962B472);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 ENTITY_GET_ENTITY_ROTATION_VELOCITY(Entity entity) /*0x213B91045D09B983*/ {
	uint64_t val;
	nativeInit(0x213B91045D09B983);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Vector3 ENTITY_GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(Entity entity, float posX, float posY, float posZ) /*0x2274BC1C4885E333*/ {
	uint64_t val;
	nativeInit(0x2274BC1C4885E333);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_COORDS_NO_OFFSET(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis) /*0x239A3351AC1DA385*/ {
	uint64_t val;
	nativeInit(0x239A3351AC1DA385);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_PED_AS_NO_LONGER_NEEDED(Ped* ped) /*0x2595DD4236549CE3*/ {
	uint64_t val;
	nativeInit(0x2595DD4236549CE3);
	*(Ped**)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(Entity entity) /*0x26AA915AD89BFB4B*/ {
	uint64_t val;
	nativeInit(0x26AA915AD89BFB4B);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any ENTITY_STOP_ENTITY_ANIM(Entity entity, const char* animation, const char* animGroup, float p3) /*0x28004F88151E03E0*/ {
	uint64_t val;
	nativeInit(0x28004F88151E03E0);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animation;
	nativePush(val);
	*(const char**)(&val) = animGroup;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_ANIM_SPEED(Entity entity, const char* animDictionary, const char* animName, float speedMultiplier) /*0x28D1A16553C51776*/ {
	uint64_t val;
	nativeInit(0x28D1A16553C51776);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = speedMultiplier;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_MOTION_BLUR(Entity entity, bool toggle) /*0x295D82A8559F9150*/ {
	uint64_t val;
	nativeInit(0x295D82A8559F9150);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_0x2C2E3DC128F44309(Entity entity, bool p1) /*0x2C2E3DC128F44309*/ {
	uint64_t val;
	nativeInit(0x2C2E3DC128F44309);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float ENTITY_GET_ENTITY_ANIM_CURRENT_TIME(Entity entity, const char* animDict, const char* animName) /*0x346D81500D088F42*/ {
	uint64_t val;
	nativeInit(0x346D81500D088F42);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_INVINCIBLE(Entity entity, bool toggle) /*0x3882114BDE571AD4*/ {
	uint64_t val;
	nativeInit(0x3882114BDE571AD4);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY__SET_ENTITY_SOMETHING(Entity entity, bool toggle) /*0x3910051CCECDB00C*/ {
	uint64_t val;
	nativeInit(0x3910051CCECDB00C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(float x, float y, float z, float radius, Hash model, bool p5) /*0x3A52AE588830BF7F*/ {
	uint64_t val;
	nativeInit(0x3A52AE588830BF7F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_OBJECT_AS_NO_LONGER_NEEDED(Object* object) /*0x3AE22DEB5BA5A3E6*/ {
	uint64_t val;
	nativeInit(0x3AE22DEB5BA5A3E6);
	*(Object**)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline Vector3 ENTITY_GET_ENTITY_COORDS(Entity entity, bool alive) /*0x3FEF770D40960D5A*/ {
	uint64_t val;
	nativeInit(0x3FEF770D40960D5A);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = alive;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void ENTITY_FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(Entity entity) /*0x40FDEDB72F8293B2*/ {
	uint64_t val;
	nativeInit(0x40FDEDB72F8293B2);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline int ENTITY_GET_ENTITY_LOD_DIST(Entity entity) /*0x4159C2762B5791D6*/ {
	uint64_t val;
	nativeInit(0x4159C2762B5791D6);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ENTITY_FREEZE_ENTITY_POSITION(Entity entity, bool toggle) /*0x428CA6DBD1094446*/ {
	uint64_t val;
	nativeInit(0x428CA6DBD1094446);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_STOP_SYNCHRONIZED_ENTITY_ANIM(Entity entity, float p1, bool p2) /*0x43D3807C077261E3*/ {
	uint64_t val;
	nativeInit(0x43D3807C077261E3);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_ANIM_CURRENT_TIME(Entity entity, const char* animDictionary, const char* animName, float time) /*0x4487C259F0F70977*/ {
	uint64_t val;
	nativeInit(0x4487C259F0F70977);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_ALPHA(Entity entity, int alphaLevel, bool unk) /*0x44A0870B7E92D7C0*/ {
	uint64_t val;
	nativeInit(0x44A0870B7E92D7C0);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = alphaLevel;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline Vector3 ENTITY_GET_WORLD_POSITION_OF_ENTITY_BONE(Entity entity, int boneIndex) /*0x44A8FCB8ED227738*/ {
	uint64_t val;
	nativeInit(0x44A8FCB8ED227738);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_VISIBLE(Entity entity) /*0x47D6F43D77935C75*/ {
	uint64_t val;
	nativeInit(0x47D6F43D77935C75);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 ENTITY_GET_ENTITY_VELOCITY(Entity entity) /*0x4805D2B1D8CF94A9*/ {
	uint64_t val;
	nativeInit(0x4805D2B1D8CF94A9);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Entity ENTITY_GET_ENTITY_ATTACHED_TO(Entity entity) /*0x48C2BED9180FE123*/ {
	uint64_t val;
	nativeInit(0x48C2BED9180FE123);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_HAS_GRAVITY(Entity entity, bool toggle) /*0x4A4722448F18EEF5*/ {
	uint64_t val;
	nativeInit(0x4A4722448F18EEF5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Vehicle ENTITY_GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(Entity entity) /*0x4B53F92932ADFAC0*/ {
	uint64_t val;
	nativeInit(0x4B53F92932ADFAC0);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline Player ENTITY_GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(Entity entity, int team) /*0x4DC9A62F844D9337*/ {
	uint64_t val;
	nativeInit(0x4DC9A62F844D9337);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = team;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_ANIM_TOTAL_TIME(Entity entity, const char* animDict, const char* animName) /*0x50BD2730B191E360*/ {
	uint64_t val;
	nativeInit(0x50BD2730B191E360);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_IN_ANGLED_AREA(Entity entity, float originX, float originY, float originZ, float edgeX, float edgeY, float edgeZ, float angle, bool p8, bool p9, Any p10) /*0x51210CED3DA1C78A*/ {
	uint64_t val;
	nativeInit(0x51210CED3DA1C78A);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = originX;
	nativePush(val);
	*(float*)(&val) = originY;
	nativePush(val);
	*(float*)(&val) = originZ;
	nativePush(val);
	*(float*)(&val) = edgeX;
	nativePush(val);
	*(float*)(&val) = edgeY;
	nativePush(val);
	*(float*)(&val) = edgeZ;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_A_PED(Entity entity) /*0x524AC5ECEA15343E*/ {
	uint64_t val;
	nativeInit(0x524AC5ECEA15343E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_UPRIGHT(Entity entity, float angle) /*0x5333F526F6AB19AA*/ {
	uint64_t val;
	nativeInit(0x5333F526F6AB19AA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_IN_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, bool p7, bool p8, Any p9) /*0x54736AA40E271165*/ {
	uint64_t val;
	nativeInit(0x54736AA40E271165);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_TRAFFICLIGHT_OVERRIDE(Entity entity, int state) /*0x57C5DB656185EAC4*/ {
	uint64_t val;
	nativeInit(0x57C5DB656185EAC4);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_LOD_DIST(Entity entity, int value) /*0x5927F96A78577363*/ {
	uint64_t val;
	nativeInit(0x5927F96A78577363);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int ENTITY_GET_ENTITY_ALPHA(Entity entity) /*0x5A47B3B5E63E94C6*/ {
	uint64_t val;
	nativeInit(0x5A47B3B5E63E94C6);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_HEIGHT(Entity entity, float X, float Y, float Z, bool atTop, bool inWorldCoords) /*0x5A504562485944DD*/ {
	uint64_t val;
	nativeInit(0x5A504562485944DD);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	*(bool*)(&val) = atTop;
	nativePush(val);
	*(bool*)(&val) = inWorldCoords;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void ENTITY_0x5C3B791D580E0BC2(Entity entity, float p1) /*0x5C3B791D580E0BC2*/ {
	uint64_t val;
	nativeInit(0x5C3B791D580E0BC2);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Hash ENTITY_GET_LAST_MATERIAL_HIT_BY_ENTITY(Entity entity) /*0x5C3D0A935F535C4C*/ {
	uint64_t val;
	nativeInit(0x5C3D0A935F535C4C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_DEAD(Entity entity) /*0x5F9532F3B5CC2551*/ {
	uint64_t val;
	nativeInit(0x5F9532F3B5CC2551);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(Entity entity) /*0x605F5A140F202491*/ {
	uint64_t val;
	nativeInit(0x605F5A140F202491);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_REMOVE_FORCED_OBJECT(float posX, float posY, float posZ, float unk, Hash modelHash) /*0x61B6775E83C0DB6F*/ {
	uint64_t val;
	nativeInit(0x61B6775E83C0DB6F);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = unk;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline void ENTITY__SET_ENTITY_COORDS_2(Entity entity, float xPos, float yPos, float zPos, bool xAxis, bool yAxis, bool zAxis, bool clearArea) /*0x621873ECE1178967*/ {
	uint64_t val;
	nativeInit(0x621873ECE1178967);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	*(bool*)(&val) = clearArea;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_VEHICLE_AS_NO_LONGER_NEEDED(Vehicle* vehicle) /*0x629BFA74418D6239*/ {
	uint64_t val;
	nativeInit(0x629BFA74418D6239);
	*(Vehicle**)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY__SET_USED_BY_PLAYER(Entity entity, bool toggle) /*0x694E00132F2823ED*/ {
	uint64_t val;
	nativeInit(0x694E00132F2823ED);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_A_VEHICLE(Entity entity) /*0x6AC7003FA6E5575E*/ {
	uint64_t val;
	nativeInit(0x6AC7003FA6E5575E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_HEALTH(Entity entity, int health) /*0x6B76DC1F3AE6E6A3*/ {
	uint64_t val;
	nativeInit(0x6B76DC1F3AE6E6A3);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = health;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_ATTACH_ENTITY_TO_ENTITY(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, bool p9, bool useSoftPinning, bool collision, bool isPed, int vertexIndex, bool fixedRot) /*0x6B9BBD38AB0796DF*/ {
	uint64_t val;
	nativeInit(0x6B9BBD38AB0796DF);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = useSoftPinning;
	nativePush(val);
	*(bool*)(&val) = collision;
	nativePush(val);
	*(bool*)(&val) = isPed;
	nativePush(val);
	*(int*)(&val) = vertexIndex;
	nativePush(val);
	*(bool*)(&val) = fixedRot;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, bool p1, Hash relationshipHash) /*0x7022BD828FA0B082*/ {
	uint64_t val;
	nativeInit(0x7022BD828FA0B082);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Hash*)(&val) = relationshipHash;
	nativePush(val);
	nativeCall();
}
inline Player ENTITY_GET_NEAREST_PLAYER_TO_ENTITY(Entity entity) /*0x7196842CB375CDB3*/ {
	uint64_t val;
	nativeInit(0x7196842CB375CDB3);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline bool ENTITY_DOES_ENTITY_EXIST(Entity entity) /*0x7239B21A38F536BA*/ {
	uint64_t val;
	nativeInit(0x7239B21A38F536BA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_RENDER_SCORCHED(Entity entity, bool toggle) /*0x730F5F8D3F0F2050*/ {
	uint64_t val;
	nativeInit(0x730F5F8D3F0F2050);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_AN_ENTITY(int handle) /*0x731EC8A916BD11A1*/ {
	uint64_t val;
	nativeInit(0x731EC8A916BD11A1);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_AT_ENTITY(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, bool p5, bool p6, int p7) /*0x751B70C3D034E187*/ {
	uint64_t val;
	nativeInit(0x751B70C3D034E187);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(float*)(&val) = xSize;
	nativePush(val);
	*(float*)(&val) = ySize;
	nativePush(val);
	*(float*)(&val) = zSize;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_QUATERNION(Entity entity, float x, float y, float z, float w) /*0x77B21BE7AC540F07*/ {
	uint64_t val;
	nativeInit(0x77B21BE7AC540F07);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = w;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_0x78E8E3A640178255(Entity entity) /*0x78E8E3A640178255*/ {
	uint64_t val;
	nativeInit(0x78E8E3A640178255);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(Entity entity, bool toggle) /*0x79F020FF9EDC0748*/ {
	uint64_t val;
	nativeInit(0x79F020FF9EDC0748);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_GET_ENTITY_QUATERNION(Entity entity, float* x, float* y, float* z, float* w) /*0x7B3703D2D32DFA18*/ {
	uint64_t val;
	nativeInit(0x7B3703D2D32DFA18);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float**)(&val) = x;
	nativePush(val);
	*(float**)(&val) = y;
	nativePush(val);
	*(float**)(&val) = z;
	nativePush(val);
	*(float**)(&val) = w;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_LIGHTS(Entity entity, bool toggle) /*0x7CFBA6A80BDF3874*/ {
	uint64_t val;
	nativeInit(0x7CFBA6A80BDF3874);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_PLAY_ENTITY_ANIM(Entity entity, const char* animName, const char* animDict, float p3, bool loop, bool stayInAnim, bool p6, float delta, Any bitset) /*0x7FB218262B810701*/ {
	uint64_t val;
	nativeInit(0x7FB218262B810701);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = loop;
	nativePush(val);
	*(bool*)(&val) = stayInAnim;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = delta;
	nativePush(val);
	*(Any*)(&val) = bitset;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_ROLL(Entity entity) /*0x831E0242595560DF*/ {
	uint64_t val;
	nativeInit(0x831E0242595560DF);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float ENTITY__GET_ENTITY_PHYSICS_HEADING(Entity entity) /*0x846BF6291198A71E*/ {
	uint64_t val;
	nativeInit(0x846BF6291198A71E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_ROTATION(Entity entity, float pitch, float roll, float yaw, int rotationOrder, bool p5) /*0x8524A8B0171D5E07*/ {
	uint64_t val;
	nativeInit(0x8524A8B0171D5E07);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = pitch;
	nativePush(val);
	*(float*)(&val) = roll;
	nativePush(val);
	*(float*)(&val) = yaw;
	nativePush(val);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline float ENTITY_GET_ENTITY_FORWARD_Y(Entity entity) /*0x866A4A5FAE349510*/ {
	uint64_t val;
	nativeInit(0x866A4A5FAE349510);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_IN_AIR(Entity entity) /*0x886E37EC497200B6*/ {
	uint64_t val;
	nativeInit(0x886E37EC497200B6);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_CREATE_MODEL_HIDE(float x, float y, float z, float radius, Hash model, bool p5) /*0x8A97BCA30A0CE478*/ {
	uint64_t val;
	nativeInit(0x8A97BCA30A0CE478);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline int ENTITY_GET_ENTITY_TYPE(Entity entity) /*0x8ACD366038D14505*/ {
	uint64_t val;
	nativeInit(0x8ACD366038D14505);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_COLLIDED_WITH_ANYTHING(Entity entity) /*0x8BAD02F0368D9E14*/ {
	uint64_t val;
	nativeInit(0x8BAD02F0368D9E14);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_FORWARD_X(Entity entity) /*0x8BB4EF4214E0E6D5*/ {
	uint64_t val;
	nativeInit(0x8BB4EF4214E0E6D5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_AN_OBJECT(Player* entity) /*0x8D68C8FD0FACA94E*/ {
	uint64_t val;
	nativeInit(0x8D68C8FD0FACA94E);
	*(Player**)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_HEADING(Entity entity, float heading) /*0x8E2530AA8ADA980E*/ {
	uint64_t val;
	nativeInit(0x8E2530AA8ADA980E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_CREATE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, bool p6) /*0x92C47782FDA8B2A3*/ {
	uint64_t val;
	nativeInit(0x92C47782FDA8B2A3);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = originalModel;
	nativePush(val);
	*(Hash*)(&val) = newModel;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(Entity entity) /*0x95EB9964FF5C5C65*/ {
	uint64_t val;
	nativeInit(0x95EB9964FF5C5C65);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_UPRIGHT_VALUE(Entity entity) /*0x95EED5A694951F9F*/ {
	uint64_t val;
	nativeInit(0x95EED5A694951F9F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void ENTITY_DETACH_ENTITY(Entity entity, bool p1, bool collision) /*0x961AC54BF0613F5D*/ {
	uint64_t val;
	nativeInit(0x961AC54BF0613F5D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = collision;
	nativePush(val);
	nativeCall();
}
inline Vector3 ENTITY_GET_ENTITY_SPEED_VECTOR(Entity entity, bool relative) /*0x9A8D700A51CB7B0D*/ {
	uint64_t val;
	nativeInit(0x9A8D700A51CB7B0D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = relative;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Any ENTITY_RESET_ENTITY_ALPHA(Entity entity) /*0x9B1E824FFBB7027A*/ {
	uint64_t val;
	nativeInit(0x9B1E824FFBB7027A);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ENTITY__SET_ENTITY_COLLISION_2(Entity entity, bool p1, bool p2) /*0x9EBC85ED0FFFE51C*/ {
	uint64_t val;
	nativeInit(0x9EBC85ED0FFFE51C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Hash ENTITY_GET_ENTITY_MODEL(Entity entity) /*0x9F47B058362C84B5*/ {
	uint64_t val;
	nativeInit(0x9F47B058362C84B5);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_NO_COLLISION_ENTITY(Entity entity1, Entity entity2, bool unknown) /*0xA53ED5520C07654A*/ {
	uint64_t val;
	nativeInit(0xA53ED5520C07654A);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(bool*)(&val) = unknown;
	nativePush(val);
	nativeCall();
}
inline const char* ENTITY_GET_ENTITY_SCRIPT(Entity entity, ScrHandle* script) /*0xA6E9C38DB51D7748*/ {
	uint64_t val;
	nativeInit(0xA6E9C38DB51D7748);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(ScrHandle**)(&val) = script;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Any ENTITY_CLEAR_ENTITY_LAST_DAMAGE_ENTITY(Entity entity) /*0xA72CD9CA74A5ECBA*/ {
	uint64_t val;
	nativeInit(0xA72CD9CA74A5ECBA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ENTITY_0xA80AE305E0A3044F(Entity entity, bool p1) /*0xA80AE305E0A3044F*/ {
	uint64_t val;
	nativeInit(0xA80AE305E0A3044F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_ALWAYS_PRERENDER(Entity entity, bool toggle) /*0xACAD101E1FB66689*/ {
	uint64_t val;
	nativeInit(0xACAD101E1FB66689);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_AS_MISSION_ENTITY(Entity entity, bool p1, bool p2) /*0xAD738C3085FE7E11*/ {
	uint64_t val;
	nativeInit(0xAD738C3085FE7E11);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_DELETE_ENTITY(Entity* entity) /*0xAE3CBE5BF394C9C9*/ {
	uint64_t val;
	nativeInit(0xAE3CBE5BF394C9C9);
	*(Entity**)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline Vector3 ENTITY_GET_ENTITY_ROTATION(Entity entity, int rotationOrder) /*0xAFBD61CC738D9EB9*/ {
	uint64_t val;
	nativeInit(0xAFBD61CC738D9EB9);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = rotationOrder;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_ATTACHED_TO_ANY_PED(Entity entity) /*0xB1632E9A5F988D11*/ {
	uint64_t val;
	nativeInit(0xB1632E9A5F988D11);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_ATTACHED(Entity entity) /*0xB346476EF1A64897*/ {
	uint64_t val;
	nativeInit(0xB346476EF1A64897);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_IN_ZONE(Entity entity, const char* zone) /*0xB6463CF6AF527071*/ {
	uint64_t val;
	nativeInit(0xB6463CF6AF527071);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = zone;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_AS_NO_LONGER_NEEDED(Entity* entity) /*0xB736A491E64A32CF*/ {
	uint64_t val;
	nativeInit(0xB736A491E64A32CF);
	*(Entity**)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(float posX, float posY, float posZ, float radius, Object prop, int sceneID, const char* animName, const char* animDict, float playbackRate, float unkFlag, bool unkBool, float unkFlag2) /*0xB9C54555ED30FBC4*/ {
	uint64_t val;
	nativeInit(0xB9C54555ED30FBC4);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Object*)(&val) = prop;
	nativePush(val);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(float*)(&val) = playbackRate;
	nativePush(val);
	*(float*)(&val) = unkFlag;
	nativePush(val);
	*(bool*)(&val) = unkBool;
	nativePush(val);
	*(float*)(&val) = unkFlag2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, bool fixedRot, bool p15, bool collision, bool teleport, int p18) /*0xC3675780C92F90F9*/ {
	uint64_t val;
	nativeInit(0xC3675780C92F90F9);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(int*)(&val) = boneIndex1;
	nativePush(val);
	*(int*)(&val) = boneIndex2;
	nativePush(val);
	*(float*)(&val) = xPos1;
	nativePush(val);
	*(float*)(&val) = yPos1;
	nativePush(val);
	*(float*)(&val) = zPos1;
	nativePush(val);
	*(float*)(&val) = xPos2;
	nativePush(val);
	*(float*)(&val) = yPos2;
	nativePush(val);
	*(float*)(&val) = zPos2;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = breakForce;
	nativePush(val);
	*(bool*)(&val) = fixedRot;
	nativePush(val);
	*(bool*)(&val) = p15;
	nativePush(val);
	*(bool*)(&val) = collision;
	nativePush(val);
	*(bool*)(&val) = teleport;
	nativePush(val);
	*(int*)(&val) = p18;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_APPLY_FORCE_TO_ENTITY(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, bool isDirectionRel, bool ignoreUpVec, bool isForceRel, bool p12, bool p13) /*0xC5F68BE9613E2D18*/ {
	uint64_t val;
	nativeInit(0xC5F68BE9613E2D18);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = forceFlags;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = offX;
	nativePush(val);
	*(float*)(&val) = offY;
	nativePush(val);
	*(float*)(&val) = offZ;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(bool*)(&val) = isDirectionRel;
	nativePush(val);
	*(bool*)(&val) = ignoreUpVec;
	nativePush(val);
	*(bool*)(&val) = isForceRel;
	nativePush(val);
	*(bool*)(&val) = p12;
	nativePush(val);
	*(bool*)(&val) = p13;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_PLAY_SYNCHRONIZED_ENTITY_ANIM(Entity entity, int SceneID, const char* animName, const char* animDict, float speed, float speedMult, int flag, float flag2) /*0xC77720A12FE14A86*/ {
	uint64_t val;
	nativeInit(0xC77720A12FE14A86);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = SceneID;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMult;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(float*)(&val) = flag2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2, bool p2) /*0xC86D67D52A707CF8*/ {
	uint64_t val;
	nativeInit(0xC86D67D52A707CF8);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY__GET_ENTITY_COLLISON_DISABLED(Entity entity) /*0xCCF1E97BEFDAE480*/ {
	uint64_t val;
	nativeInit(0xCCF1E97BEFDAE480);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_ATTACHED_TO_ANY_OBJECT(Entity entity) /*0xCF511840CEEDE0CC*/ {
	uint64_t val;
	nativeInit(0xCF511840CEEDE0CC);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_IN_WATER(Entity entity) /*0xCFB0A0D8EDD145A3*/ {
	uint64_t val;
	nativeInit(0xCFB0A0D8EDD145A3);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_WAITING_FOR_WORLD_COLLISION(Entity entity) /*0xD05BFF0C0A12C68F*/ {
	uint64_t val;
	nativeInit(0xD05BFF0C0A12C68F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(Entity entity, bool toggle) /*0xD3997889736FD899*/ {
	uint64_t val;
	nativeInit(0xD3997889736FD899);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float ENTITY_GET_ENTITY_PITCH(Entity entity) /*0xD45DC2893621E1FE*/ {
	uint64_t val;
	nativeInit(0xD45DC2893621E1FE);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_SPEED(Entity entity) /*0xD5037BA82E12416F*/ {
	uint64_t val;
	nativeInit(0xD5037BA82E12416F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_VISIBLE_TO_SCRIPT(Entity entity) /*0xD796CB5BA8F20E32*/ {
	uint64_t val;
	nativeInit(0xD796CB5BA8F20E32);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Object ENTITY_GET_OBJECT_INDEX_FROM_ENTITY_INDEX(Entity entity) /*0xD7E3B9735C0F89D6*/ {
	uint64_t val;
	nativeInit(0xD7E3B9735C0F89D6);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline void ENTITY_REMOVE_MODEL_HIDE(float x, float y, float z, float radius, Hash model, bool p5) /*0xD9E3006FB3CBD765*/ {
	uint64_t val;
	nativeInit(0xD9E3006FB3CBD765);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_DOES_ENTITY_HAVE_PHYSICS(Entity entity) /*0xDA95EA3317CC5064*/ {
	uint64_t val;
	nativeInit(0xDA95EA3317CC5064);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_0xDC6F8601FAF2E893(Entity entity, bool p1) /*0xDC6F8601FAF2E893*/ {
	uint64_t val;
	nativeInit(0xDC6F8601FAF2E893);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Entity entity, bool p2) /*0xDDE6DF5AE89981D2*/ {
	uint64_t val;
	nativeInit(0xDDE6DF5AE89981D2);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(Entity entity) /*0xDFD5033FDBA0A9C8*/ {
	uint64_t val;
	nativeInit(0xDFD5033FDBA0A9C8);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_0xE12ABE5E3A389A6C(Entity entity, bool p1) /*0xE12ABE5E3A389A6C*/ {
	uint64_t val;
	nativeInit(0xE12ABE5E3A389A6C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, bool bCanBeDamaged, int relGroup) /*0xE22D8FDE858B8119*/ {
	uint64_t val;
	nativeInit(0xE22D8FDE858B8119);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = bCanBeDamaged;
	nativePush(val);
	*(int*)(&val) = relGroup;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_IS_ENTITY_OCCLUDED(Entity entity) /*0xE31C2C72B8692B64*/ {
	uint64_t val;
	nativeInit(0xE31C2C72B8692B64);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 ENTITY_GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Entity entity) /*0xE465D4AB7CA6AE72*/ {
	uint64_t val;
	nativeInit(0xE465D4AB7CA6AE72);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_ON_SCREEN(Entity entity) /*0xE659E47AF827484B*/ {
	uint64_t val;
	nativeInit(0xE659E47AF827484B);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_SUBMERGED_LEVEL(Entity entity) /*0xE81AFC1BC4CC41CE*/ {
	uint64_t val;
	nativeInit(0xE81AFC1BC4CC41CE);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float ENTITY_GET_ENTITY_HEADING(Entity entity) /*0xE83D4F9BA2A38914*/ {
	uint64_t val;
	nativeInit(0xE83D4F9BA2A38914);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool ENTITY_HAS_COLLISION_LOADED_AROUND_ENTITY(Entity entity) /*0xE9676F61BC0B3321*/ {
	uint64_t val;
	nativeInit(0xE9676F61BC0B3321);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_IS_TARGET_PRIORITY(Entity entity, bool p1, float p2) /*0xEA02E132F5C68722*/ {
	uint64_t val;
	nativeInit(0xEA02E132F5C68722);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void ENTITY_SET_ENTITY_VISIBLE(Entity entity, bool toggle, bool unk) /*0xEA1C610A04DB6BBB*/ {
	uint64_t val;
	nativeInit(0xEA1C610A04DB6BBB);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_HAS_ANIM_EVENT_FIRED(Entity entity, Hash actionHash) /*0xEAF4CD9EA3E7E922*/ {
	uint64_t val;
	nativeInit(0xEAF4CD9EA3E7E922);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Hash*)(&val) = actionHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_GET_ENTITY_MATRIX(Entity entity, Vector3* rightVector, Vector3* forwardVector, Vector3* upVector, Vector3* position) /*0xECB2FC7235A7D137*/ {
	uint64_t val;
	nativeInit(0xECB2FC7235A7D137);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Vector3**)(&val) = rightVector;
	nativePush(val);
	*(Vector3**)(&val) = forwardVector;
	nativePush(val);
	*(Vector3**)(&val) = upVector;
	nativePush(val);
	*(Vector3**)(&val) = position;
	nativePush(val);
	nativeCall();
}
inline bool ENTITY_WOULD_ENTITY_BE_OCCLUDED(Hash entityModelHash, float x, float y, float z, bool p4) /*0xEE5D2A122E09EC42*/ {
	uint64_t val;
	nativeInit(0xEE5D2A122E09EC42);
	*(Hash*)(&val) = entityModelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int ENTITY_GET_ENTITY_HEALTH(Entity entity) /*0xEEF059FAD016D209*/ {
	uint64_t val;
	nativeInit(0xEEF059FAD016D209);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool ENTITY_IS_ENTITY_ATTACHED_TO_ENTITY(Entity from, Entity to) /*0xEFBE71898A993728*/ {
	uint64_t val;
	nativeInit(0xEFBE71898A993728);
	*(Entity*)(&val) = from;
	nativePush(val);
	*(Entity*)(&val) = to;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ENTITY_PROCESS_ENTITY_ATTACHMENTS(Entity entity) /*0xF4080490ADC51C6F*/ {
	uint64_t val;
	nativeInit(0xF4080490ADC51C6F);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline int ENTITY__GET_ENTITY_POPULATION_TYPE(Entity entity) /*0xF6F5161F4534EDFF*/ {
	uint64_t val;
	nativeInit(0xF6F5161F4534EDFF);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ENTITY_SET_ENTITY_PROOFS(Entity entity, bool bulletProof, bool fireProof, bool explosionProof, bool collisionProof, bool meleeProof, bool steamProof, bool smokeProof, bool drownProof) /*0xFAEE099C6F890BB8*/ {
	uint64_t val;
	nativeInit(0xFAEE099C6F890BB8);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = bulletProof;
	nativePush(val);
	*(bool*)(&val) = fireProof;
	nativePush(val);
	*(bool*)(&val) = explosionProof;
	nativePush(val);
	*(bool*)(&val) = collisionProof;
	nativePush(val);
	*(bool*)(&val) = meleeProof;
	nativePush(val);
	*(bool*)(&val) = steamProof;
	nativePush(val);
	*(bool*)(&val) = smokeProof;
	nativePush(val);
	*(bool*)(&val) = drownProof;
	nativePush(val);
	nativeCall();
}
inline int ENTITY_GET_ENTITY_BONE_INDEX_BY_NAME(Entity entity, const char* boneName) /*0xFB71170B7E76ACBA*/ {
	uint64_t val;
	nativeInit(0xFB71170B7E76ACBA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = boneName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool ENTITY_HAS_ENTITY_CLEAR_LOS_TO_ENTITY(Entity entity1, Entity entity2, int traceType) /*0xFCDFF7B72D23A1AC*/ {
	uint64_t val;
	nativeInit(0xFCDFF7B72D23A1AC);
	*(Entity*)(&val) = entity1;
	nativePush(val);
	*(Entity*)(&val) = entity2;
	nativePush(val);
	*(int*)(&val) = traceType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float ENTITY__GET_ANIM_DURATION(const char* animDict, const char* animName) /*0xFEDDF04D62B8D790*/ {
	uint64_t val;
	nativeInit(0xFEDDF04D62B8D790);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void FIRE_STOP_FIRE_IN_RANGE(float x, float y, float z, float radius) /*0x056A8A219B8E829F*/ {
	uint64_t val;
	nativeInit(0x056A8A219B8E829F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline Entity FIRE__GET_PED_INSIDE_EXPLOSION_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius) /*0x14BA4BA137AF6CEC*/ {
	uint64_t val;
	nativeInit(0x14BA4BA137AF6CEC);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void FIRE_ADD_OWNED_EXPLOSION(Ped ped, float x, float y, float z, int explosionType, float damageScale, bool isAudible, bool isInvisible, float cameraShake) /*0x172AA1B624FA1013*/ {
	uint64_t val;
	nativeInit(0x172AA1B624FA1013);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = damageScale;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = cameraShake;
	nativePush(val);
	nativeCall();
}
inline bool FIRE_IS_ENTITY_ON_FIRE(Entity entity) /*0x28D3FED7190D3A0B*/ {
	uint64_t val;
	nativeInit(0x28D3FED7190D3A0B);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool FIRE_IS_EXPLOSION_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) /*0x2E2EBA0EE7CED0E0*/ {
	uint64_t val;
	nativeInit(0x2E2EBA0EE7CED0E0);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool FIRE_GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z) /*0x352A9F6BCF90081F*/ {
	uint64_t val;
	nativeInit(0x352A9F6BCF90081F);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void FIRE_ADD_EXPLOSION_WITH_USER_VFX(Entity x, Entity y, Entity z, int explosionType, Hash explosionFx, float damageScale, bool isAudible, bool isInvisible, float cameraShake) /*0x36DD3FE58B5E5212*/ {
	uint64_t val;
	nativeInit(0x36DD3FE58B5E5212);
	*(Entity*)(&val) = x;
	nativePush(val);
	*(Entity*)(&val) = y;
	nativePush(val);
	*(Entity*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(Hash*)(&val) = explosionFx;
	nativePush(val);
	*(float*)(&val) = damageScale;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = cameraShake;
	nativePush(val);
	nativeCall();
}
inline int FIRE_GET_NUMBER_OF_FIRES_IN_RANGE(float x, float y, float z, float radius) /*0x50CAD495A460B305*/ {
	uint64_t val;
	nativeInit(0x50CAD495A460B305);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int FIRE_0x6070104B699B2EF4(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) /*0x6070104B699B2EF4*/ {
	uint64_t val;
	nativeInit(0x6070104B699B2EF4);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Hash FIRE_START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, bool isGasFire) /*0x6B83617E04503888*/ {
	uint64_t val;
	nativeInit(0x6B83617E04503888);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	*(int*)(&val) = maxChildren;
	nativePush(val);
	*(bool*)(&val) = isGasFire;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void FIRE_STOP_ENTITY_FIRE(Entity entity) /*0x7F0DD2EBBB651AFF*/ {
	uint64_t val;
	nativeInit(0x7F0DD2EBBB651AFF);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void FIRE_REMOVE_SCRIPT_FIRE(int fireHandle) /*0x7FF548385680673F*/ {
	uint64_t val;
	nativeInit(0x7FF548385680673F);
	*(int*)(&val) = fireHandle;
	nativePush(val);
	nativeCall();
}
inline bool FIRE_IS_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float angle) /*0xA079A6C51525DC4B*/ {
	uint64_t val;
	nativeInit(0xA079A6C51525DC4B);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool FIRE_IS_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) /*0xAB0F816885B0E483*/ {
	uint64_t val;
	nativeInit(0xAB0F816885B0E483);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void FIRE_ADD_EXPLOSION(float x, float y, float z, int explosionType, float damageScale, bool isAudible, bool isInvisible, float cameraShake) /*0xE3AD2BDBAEE269AC*/ {
	uint64_t val;
	nativeInit(0xE3AD2BDBAEE269AC);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = explosionType;
	nativePush(val);
	*(float*)(&val) = damageScale;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = cameraShake;
	nativePush(val);
	nativeCall();
}
inline Ped FIRE_START_ENTITY_FIRE(Ped entity) /*0xF6A9D9708F6F23DF*/ {
	uint64_t val;
	nativeInit(0xF6A9D9708F6F23DF);
	*(Ped*)(&val) = entity;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void GAMEPLAY_DISPLAY_ONSCREEN_KEYBOARD(int p0, const char* windowTitle, const char* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, int maxInputLength) /*0x00DC833F2568DBF6*/ {
	uint64_t val;
	nativeInit(0x00DC833F2568DBF6);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = windowTitle;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = defaultText;
	nativePush(val);
	*(const char**)(&val) = defaultConcat1;
	nativePush(val);
	*(const char**)(&val) = defaultConcat2;
	nativePush(val);
	*(const char**)(&val) = defaultConcat3;
	nativePush(val);
	*(int*)(&val) = maxInputLength;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_CLEAR_AREA_OF_VEHICLES(float x, float y, float z, float radius, bool p4, bool p5, bool p6, bool p7, bool p8) /*0x01C7B9B38428AEB6*/ {
	uint64_t val;
	nativeInit(0x01C7B9B38428AEB6);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x02DEAAC8F8EA7FE7(const char* p0) /*0x02DEAAC8F8EA7FE7*/ {
	uint64_t val;
	nativeInit(0x02DEAAC8F8EA7FE7);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum) /*0x03E8D3D5F549087A*/ {
	uint64_t val;
	nativeInit(0x03E8D3D5F549087A);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(Vector3**)(&val) = minimum;
	nativePush(val);
	*(Vector3**)(&val) = maximum;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_STOP_SAVE_ARRAY() /*0x04456F95153C6BE4*/ {
	nativeInit(0x04456F95153C6BE4);
	nativeCall();
}
inline void GAMEPLAY_CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int flags) /*0x04F8FC8FCF58F88D*/ {
	uint64_t val;
	nativeInit(0x04F8FC8FCF58F88D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_CREATE_INCIDENT_WITH_ENTITY(int incidentType, Ped ped, int amountOfPeople, float radius, int* outIncidentID) /*0x05983472F0494E60*/ {
	uint64_t val;
	nativeInit(0x05983472F0494E60);
	*(int*)(&val) = incidentType;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = amountOfPeople;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int**)(&val) = outIncidentID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x06462A961E94B67C() /*0x06462A961E94B67C*/ {
	nativeInit(0x06462A961E94B67C);
	nativeCall();
}
inline bool GAMEPLAY__HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED(Hash hash, int amount) /*0x071E2A839DE82D90*/ {
	uint64_t val;
	nativeInit(0x071E2A839DE82D90);
	*(Hash*)(&val) = hash;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_HAVE_CREDITS_REACHED_END() /*0x075F1D57402C93BA*/ {
	nativeInit(0x075F1D57402C93BA); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_AREA_OF_PROJECTILES(float x, float y, float z, float radius, bool isNetworkGame) /*0x0A1CB9094635D1A6*/ {
	uint64_t val;
	nativeInit(0x0A1CB9094635D1A6);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = isNetworkGame;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x0A60017F841A54F2(Any p0, Any p1, Any p2, Any p3) /*0x0A60017F841A54F2*/ {
	uint64_t val;
	nativeInit(0x0A60017F841A54F2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_ARE_STRINGS_EQUAL(const char* string1, const char* string2) /*0x0C515FAB3FF9EA92*/ {
	uint64_t val;
	nativeInit(0x0C515FAB3FF9EA92);
	*(const char**)(&val) = string1;
	nativePush(val);
	*(const char**)(&val) = string2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GAMEPLAY_UPDATE_ONSCREEN_KEYBOARD() /*0x0CF2B696BBF945AE*/ {
	nativeInit(0x0CF2B696BBF945AE); return *(int*)(nativeCall());
}
inline void GAMEPLAY_REGISTER_ENUM_TO_SAVE(Any* p0, const char* name) /*0x10C2FA78D0E128A1*/ {
	uint64_t val;
	nativeInit(0x10C2FA78D0E128A1);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_OVERRIDE_SAVE_HOUSE(bool p0, float p1, float p2, float p3, float p4, bool p5, float p6, float p7) /*0x1162EA8AE9D24EEA*/ {
	uint64_t val;
	nativeInit(0x1162EA8AE9D24EEA);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_FIRE_AMMO_THIS_FRAME(Player player) /*0x11879CDD803D30F4*/ {
	uint64_t val;
	nativeInit(0x11879CDD803D30F4);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_PRELOAD_CLOUD_HAT(const char* name) /*0x11B56FBBF7224868*/ {
	uint64_t val;
	nativeInit(0x11B56FBBF7224868);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_CLEAR_ANGLED_AREA_OF_VEHICLES(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7, bool p8, bool p9, bool p10, bool p11) /*0x11DB3500F042A8AA*/ {
	uint64_t val;
	nativeInit(0x11DB3500F042A8AA);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0x1327E2FE9746BAEE(Any p0) /*0x1327E2FE9746BAEE*/ {
	uint64_t val;
	nativeInit(0x1327E2FE9746BAEE);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_FAKE_WANTED_LEVEL(int fakeWantedLevel) /*0x1454F2448DE30163*/ {
	uint64_t val;
	nativeInit(0x1454F2448DE30163);
	*(int*)(&val) = fakeWantedLevel;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY__HAS_ALL_CHUNKS_ON_HDD() /*0x14832BF2ABA53FC5*/ {
	nativeInit(0x14832BF2ABA53FC5); return *(bool*)(nativeCall());
}
inline float GAMEPLAY_GET_FRAME_TIME() /*0x15C40837039FFAF7*/ {
	nativeInit(0x15C40837039FFAF7); return *(float*)(nativeCall());
}
inline bool GAMEPLAY_0x17DF68D720AA77F8(Any p0) /*0x17DF68D720AA77F8*/ {
	uint64_t val;
	nativeInit(0x17DF68D720AA77F8);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float GAMEPLAY_GET_ANGLE_BETWEEN_2D_VECTORS(float x1, float y1, float x2, float y2) /*0x186FC4BE848E1C92*/ {
	uint64_t val;
	nativeInit(0x186FC4BE848E1C92);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool GAMEPLAY_0x19BFED045C647C49(Any p0) /*0x19BFED045C647C49*/ {
	uint64_t val;
	nativeInit(0x19BFED045C647C49);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_MINIGAME_IN_PROGRESS(bool toggle) /*0x19E00D7322C6F85B*/ {
	uint64_t val;
	nativeInit(0x19E00D7322C6F85B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_BULLET_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7) /*0x1A8B5F3C01E2B477*/ {
	uint64_t val;
	nativeInit(0x1A8B5F3C01E2B477);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GAMEPLAY_ADD_STUNT_JUMP(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, Any p15, Any p16) /*0x1A992DA297A4630C*/ {
	uint64_t val;
	nativeInit(0x1A992DA297A4630C);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	*(float*)(&val) = p12;
	nativePush(val);
	*(float*)(&val) = p13;
	nativePush(val);
	*(float*)(&val) = p14;
	nativePush(val);
	*(Any*)(&val) = p15;
	nativePush(val);
	*(Any*)(&val) = p16;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_REPLAY_STATS() /*0x1B1AB132A16FDA55*/ {
	nativeInit(0x1B1AB132A16FDA55);
	nativeCall();
}
inline Any GAMEPLAY_0x1B2366C3F2A5C8DF() /*0x1B2366C3F2A5C8DF*/ {
	nativeInit(0x1B2366C3F2A5C8DF); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0x1BB299305C3E8C13(Any p0, Any p1, Any p2, Any p3) /*0x1BB299305C3E8C13*/ {
	uint64_t val;
	nativeInit(0x1BB299305C3E8C13);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_ACOS(float p0) /*0x1D08B970013C34B6*/ {
	uint64_t val;
	nativeInit(0x1D08B970013C34B6);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_SET_TIME_SCALE(float time) /*0x1D408577D440E81E*/ {
	uint64_t val;
	nativeInit(0x1D408577D440E81E);
	*(float*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_FADE_OUT_AFTER_ARREST(bool toggle) /*0x1E0B4DC0D990A4E7*/ {
	uint64_t val;
	nativeInit(0x1E0B4DC0D990A4E7);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_COMPARE_STRINGS(const char* str1, const char* str2, bool matchCase, int maxLength) /*0x1E34710ECD4AB0EB*/ {
	uint64_t val;
	nativeInit(0x1E34710ECD4AB0EB);
	*(const char**)(&val) = str1;
	nativePush(val);
	*(const char**)(&val) = str2;
	nativePush(val);
	*(bool*)(&val) = matchCase;
	nativePush(val);
	*(int*)(&val) = maxLength;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_0x1EAE0A6E978894A2(int p0, bool p1) /*0x1EAE0A6E978894A2*/ {
	uint64_t val;
	nativeInit(0x1EAE0A6E978894A2);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vector3 GAMEPLAY_GET_WIND_DIRECTION() /*0x1F400FEF721170DA*/ {
	nativeInit(0x1F400FEF721170DA); return *(Vector3*)(nativeCall());
}
inline int GAMEPLAY_ADD_HOSPITAL_RESTART(float x, float y, float z, float p3, Any p4) /*0x1F464EF988465A81*/ {
	uint64_t val;
	nativeInit(0x1F464EF988465A81);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_0x1FF6BF9A63E5757F() /*0x1FF6BF9A63E5757F*/ {
	nativeInit(0x1FF6BF9A63E5757F);
	nativeCall();
}
inline float GAMEPLAY__GET_CLOUD_HAT_OPACITY() /*0x20AC25E781AE4A84*/ {
	nativeInit(0x20AC25E781AE4A84); return *(float*)(nativeCall());
}
inline Any GAMEPLAY_0x2107A3773771186D() /*0x2107A3773771186D*/ {
	nativeInit(0x2107A3773771186D); return *(Any*)(nativeCall());
}
inline Vector3 GAMEPLAY_0x21C235BC64831E5A(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9) /*0x21C235BC64831E5A*/ {
	uint64_t val;
	nativeInit(0x21C235BC64831E5A);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void GAMEPLAY_IGNORE_NEXT_RESTART(bool toggle) /*0x21FFB63D8C615361*/ {
	uint64_t val;
	nativeInit(0x21FFB63D8C615361);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_STUNT_JUMP_MESSAGE_SHOWING() /*0x2272B0A1343129F4*/ {
	nativeInit(0x2272B0A1343129F4); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x23227DF0B2115469() /*0x23227DF0B2115469*/ {
	nativeInit(0x23227DF0B2115469);
	nativeCall();
}
inline void GAMEPLAY_DISABLE_POLICE_RESTART(int policeIndex, bool toggle) /*0x23285DED6EBD7EA3*/ {
	uint64_t val;
	nativeInit(0x23285DED6EBD7EA3);
	*(int*)(&val) = policeIndex;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline const char* GAMEPLAY__GET_GLOBAL_CHAR_BUFFER() /*0x24DA7D7667FD7B09*/ {
	nativeInit(0x24DA7D7667FD7B09); return *(const char**)(nativeCall());
}
inline void GAMEPLAY_0x2587A48BC88DFADF(bool p0) /*0x2587A48BC88DFADF*/ {
	uint64_t val;
	nativeInit(0x2587A48BC88DFADF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(Any p0) /*0x264AC28B01B353A5*/ {
	uint64_t val;
	nativeInit(0x264AC28B01B353A5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_ENABLE_TENNIS_MODE(Ped ped, bool toggle, bool p2) /*0x28A04B411933F8A6*/ {
	uint64_t val;
	nativeInit(0x28A04B411933F8A6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_WEATHER_TYPE_NOW(const char* weatherType) /*0x29B487C359E19889*/ {
	uint64_t val;
	nativeInit(0x29B487C359E19889);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_MINIGAME_IN_PROGRESS() /*0x2B4A15E44DE0F478*/ {
	nativeInit(0x2B4A15E44DE0F478); return *(bool*)(nativeCall());
}
inline Any GAMEPLAY_0x2B5E102E4A42F2BF() /*0x2B5E102E4A42F2BF*/ {
	nativeInit(0x2B5E102E4A42F2BF); return *(Any*)(nativeCall());
}
inline Any GAMEPLAY_0x2B626A0150E4D449() /*0x2B626A0150E4D449*/ {
	nativeInit(0x2B626A0150E4D449); return *(Any*)(nativeCall());
}
inline void GAMEPLAY__DISABLE_AUTOMATIC_RESPAWN(bool disableRespawn) /*0x2C2B3493FBF51C71*/ {
	uint64_t val;
	nativeInit(0x2C2B3493FBF51C71);
	*(bool*)(&val) = disableRespawn;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x2D4259F1FEB81DA9(float p0, float p1, float p2, float p3) /*0x2D4259F1FEB81DA9*/ {
	uint64_t val;
	nativeInit(0x2D4259F1FEB81DA9);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool GAMEPLAY_IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, int type, bool p7) /*0x2E0DC353342C4A6D*/ {
	uint64_t val;
	nativeInit(0x2E0DC353342C4A6D);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_IS_NEXT_WEATHER_TYPE(const char* weatherType) /*0x2FAA3A30BEC0F25D*/ {
	uint64_t val;
	nativeInit(0x2FAA3A30BEC0F25D);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float GAMEPLAY_GET_HEADING_FROM_VECTOR_2D(float dx, float dy) /*0x2FFB6B224F4B2926*/ {
	uint64_t val;
	nativeInit(0x2FFB6B224F4B2926);
	*(float*)(&val) = dx;
	nativePush(val);
	*(float*)(&val) = dy;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_0x31125FD509D9043F(Any* p0) /*0x31125FD509D9043F*/ {
	uint64_t val;
	nativeInit(0x31125FD509D9043F);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_GET_RANDOM_FLOAT_IN_RANGE(float startRange, float endRange) /*0x313CE5879CEB6FCD*/ {
	uint64_t val;
	nativeInit(0x313CE5879CEB6FCD);
	*(float*)(&val) = startRange;
	nativePush(val);
	*(float*)(&val) = endRange;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_0x31727907B2C43C55(float p0) /*0x31727907B2C43C55*/ {
	uint64_t val;
	nativeInit(0x31727907B2C43C55);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x32C7A7E8C43A1F80(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7) /*0x32C7A7E8C43A1F80*/ {
	uint64_t val;
	nativeInit(0x32C7A7E8C43A1F80);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_OVERRIDE_WEATHER() /*0x338D2E3477711050*/ {
	nativeInit(0x338D2E3477711050);
	nativeCall();
}
inline bool GAMEPLAY_IS_PROJECTILE_TYPE_WITHIN_DISTANCE(float x, float y, float z, Hash projHash, float radius, bool ownedByPlayer) /*0x34318593248C8FB2*/ {
	uint64_t val;
	nativeInit(0x34318593248C8FB2);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Hash*)(&val) = projHash;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = ownedByPlayer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_REGISTER_INT_TO_SAVE(Any* p0, const char* name) /*0x34C9EE5986258415*/ {
	uint64_t val;
	nativeInit(0x34C9EE5986258415);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x37DEB0AA183FB6D8() /*0x37DEB0AA183FB6D8*/ {
	nativeInit(0x37DEB0AA183FB6D8);
	nativeCall();
}
inline int GAMEPLAY_0x397BAA01068BAA96() /*0x397BAA01068BAA96*/ {
	nativeInit(0x397BAA01068BAA96); return *(int*)(nativeCall());
}
inline Any GAMEPLAY_0x3BBBD13E5041A79E() /*0x3BBBD13E5041A79E*/ {
	nativeInit(0x3BBBD13E5041A79E); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0x3ED1438C1F5C6612(int p0) /*0x3ED1438C1F5C6612*/ {
	uint64_t val;
	nativeInit(0x3ED1438C1F5C6612);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_BULLET_IN_AREA(float p0, float p1, float p2, float p3, bool p4) /*0x3F2023999AD51C1F*/ {
	uint64_t val;
	nativeInit(0x3F2023999AD51C1F);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_CREATE_INCIDENT(int incidentType, float x, float y, float z, int p5, float radius, int* outIncidentID) /*0x3F892CAF67444AE7*/ {
	uint64_t val;
	nativeInit(0x3F892CAF67444AE7);
	*(int*)(&val) = incidentType;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int**)(&val) = outIncidentID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x405591EC8FD9096D(float p0) /*0x405591EC8FD9096D*/ {
	uint64_t val;
	nativeInit(0x405591EC8FD9096D);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x437138B6A830166A() /*0x437138B6A830166A*/ {
	nativeInit(0x437138B6A830166A);
	nativeCall();
}
inline void GAMEPLAY_SET_RANDOM_SEED(int time) /*0x444D98F98C11F3EC*/ {
	uint64_t val;
	nativeInit(0x444D98F98C11F3EC);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x44A0BDC559B35F6E() /*0x44A0BDC559B35F6E*/ {
	nativeInit(0x44A0BDC559B35F6E); return *(Any*)(nativeCall());
}
inline bool GAMEPLAY_IS_PREV_WEATHER_TYPE(const char* weatherType) /*0x44F28F86433B10A9*/ {
	uint64_t val;
	nativeInit(0x44F28F86433B10A9);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0, float p1) /*0x44F7CBC1BEB3327D*/ {
	uint64_t val;
	nativeInit(0x44F7CBC1BEB3327D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_ADD_POLICE_RESTART(float p0, float p1, float p2, float p3, Any p4) /*0x452736765B31FC4B*/ {
	uint64_t val;
	nativeInit(0x452736765B31FC4B);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any GAMEPLAY_0x4750FC27570311EC() /*0x4750FC27570311EC*/ {
	nativeInit(0x4750FC27570311EC); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(Any p0, float p1) /*0x48838ED9937A15D1*/ {
	uint64_t val;
	nativeInit(0x48838ED9937A15D1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_PC_VERSION() /*0x48AF36444B965238*/ {
	nativeInit(0x48AF36444B965238); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x48F069265A0E4BEC(Any* p0, const char* name) /*0x48F069265A0E4BEC*/ {
	uint64_t val;
	nativeInit(0x48F069265A0E4BEC);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_FADE_OUT_AFTER_DEATH(bool toggle) /*0x4A18E01DF2C87B86*/ {
	uint64_t val;
	nativeInit(0x4A18E01DF2C87B86);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_GET_FAKE_WANTED_LEVEL() /*0x4C9296CBCD1B971E*/ {
	nativeInit(0x4C9296CBCD1B971E); return *(int*)(nativeCall());
}
inline bool GAMEPLAY_IS_DURANGO_VERSION() /*0x4D982ADB1978442D*/ {
	nativeInit(0x4D982ADB1978442D); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x4DCDF92BF64236CD(const char* p0, const char* p1) /*0x4DCDF92BF64236CD*/ {
	uint64_t val;
	nativeInit(0x4DCDF92BF64236CD);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SET_SHOW_PED_IN_PAUSE_MENU(bool toggle) /*0x4EBB7E87AA0DBED4*/ {
	uint64_t val;
	nativeInit(0x4EBB7E87AA0DBED4);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_SAVE_HOUSE(int index, bool p1, bool p2) /*0x4F548CABEAE553BC*/ {
	uint64_t val;
	nativeInit(0x4F548CABEAE553BC);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_DO_AUTO_SAVE() /*0x50EEAAD86232EE55*/ {
	nativeInit(0x50EEAAD86232EE55);
	nativeCall();
}
inline bool GAMEPLAY_IS_PROJECTILE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool ownedByPlayer) /*0x5270A8FBC098C3F8*/ {
	uint64_t val;
	nativeInit(0x5270A8FBC098C3F8);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = ownedByPlayer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GAMEPLAY_GET_BITS_IN_RANGE(int var, int rangeStart, int rangeEnd) /*0x53158863FCC0893A*/ {
	uint64_t val;
	nativeInit(0x53158863FCC0893A);
	*(int*)(&val) = var;
	nativePush(val);
	*(int*)(&val) = rangeStart;
	nativePush(val);
	*(int*)(&val) = rangeEnd;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_0x54F157E0336A3822(Any p0, const char* p1, float p2) /*0x54F157E0336A3822*/ {
	uint64_t val;
	nativeInit(0x54F157E0336A3822);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_DELETE_INCIDENT(int incidentId) /*0x556C1AA270D5A207*/ {
	uint64_t val;
	nativeInit(0x556C1AA270D5A207);
	*(int*)(&val) = incidentId;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY__HAS_CHEAT_STRING_JUST_BEEN_ENTERED(Hash hash) /*0x557E43C447E700A8*/ {
	uint64_t val;
	nativeInit(0x557E43C447E700A8);
	*(Hash*)(&val) = hash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash GAMEPLAY_GET_PREV_WEATHER_TYPE_HASH_NAME() /*0x564B884A05EC45A3*/ {
	nativeInit(0x564B884A05EC45A3); return *(Hash*)(nativeCall());
}
inline void GAMEPLAY_SET_GAME_PAUSED(bool toggle) /*0x577D1284D6873711*/ {
	uint64_t val;
	nativeInit(0x577D1284D6873711);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SET_WEATHER_TYPE_TRANSITION(Hash weatherType1, Hash weatherType2, float percentWeather2) /*0x578C752848ECFA0C*/ {
	uint64_t val;
	nativeInit(0x578C752848ECFA0C);
	*(Hash*)(&val) = weatherType1;
	nativePush(val);
	*(Hash*)(&val) = weatherType2;
	nativePush(val);
	*(float*)(&val) = percentWeather2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_SUPER_JUMP_THIS_FRAME(Player player) /*0x57FFF03E423A4C0B*/ {
	uint64_t val;
	nativeInit(0x57FFF03E423A4C0B);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_STRING_TO_INT(const char* string, int* outInteger) /*0x5A5F40FE637EB584*/ {
	uint64_t val;
	nativeInit(0x5A5F40FE637EB584);
	*(const char**)(&val) = string;
	nativePush(val);
	*(int**)(&val) = outInteger;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any GAMEPLAY_0x5AA3BEFA29F03AD4() /*0x5AA3BEFA29F03AD4*/ {
	nativeInit(0x5AA3BEFA29F03AD4); return *(Any*)(nativeCall());
}
inline Any GAMEPLAY_0x5B1F2E327B6B6FE1() /*0x5B1F2E327B6B6FE1*/ {
	nativeInit(0x5B1F2E327B6B6FE1); return *(Any*)(nativeCall());
}
inline bool GAMEPLAY_IS_TENNIS_MODE(Ped ped) /*0x5D5479D115290C3F*/ {
	uint64_t val;
	nativeInit(0x5D5479D115290C3F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY__START_SAVE_ARRAY(Any* p0, int p1, const char* arrayName) /*0x60FE567DF1B1AF9D*/ {
	uint64_t val;
	nativeInit(0x60FE567DF1B1AF9D);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = arrayName;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_SNIPER_INVERTED() /*0x61A23B7EDA9BDA24*/ {
	nativeInit(0x61A23B7EDA9BDA24); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x6216B116083A7CB4(float p0) /*0x6216B116083A7CB4*/ {
	uint64_t val;
	nativeInit(0x6216B116083A7CB4);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_TAN(float p0) /*0x632106CC96E82E91*/ {
	uint64_t val;
	nativeInit(0x632106CC96E82E91);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY__SET_RAIN_FX_INTENSITY(float intensity) /*0x643E26EA6E024D92*/ {
	uint64_t val;
	nativeInit(0x643E26EA6E024D92);
	*(float*)(&val) = intensity;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x65D2EBB47E1CEC21(bool p0) /*0x65D2EBB47E1CEC21*/ {
	uint64_t val;
	nativeInit(0x65D2EBB47E1CEC21);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x67F6413D3220E18D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) /*0x67F6413D3220E18D*/ {
	uint64_t val;
	nativeInit(0x67F6413D3220E18D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool GAMEPLAY_0x684A41975F077262() /*0x684A41975F077262*/ {
	nativeInit(0x684A41975F077262); return *(bool*)(nativeCall());
}
inline int GAMEPLAY_0x6856EC3D35C81EA4() /*0x6856EC3D35C81EA4*/ {
	nativeInit(0x6856EC3D35C81EA4); return *(int*)(nativeCall());
}
inline bool GAMEPLAY_FIND_SPAWN_POINT_IN_DIRECTION(float x1, float y1, float z1, float x2, float y2, float z2, float distance, Vector3* spawnPoint) /*0x6874E2190B0C1972*/ {
	uint64_t val;
	nativeInit(0x6874E2190B0C1972);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(Vector3**)(&val) = spawnPoint;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_IS_AUTO_SAVE_IN_PROGRESS() /*0x69240733738C19A0*/ {
	nativeInit(0x69240733738C19A0); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_ADD_REPLAY_STAT_VALUE(Any value) /*0x69FE6DC87BD2A5E9*/ {
	uint64_t val;
	nativeInit(0x69FE6DC87BD2A5E9);
	*(Any*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x6E04F06094C87047() /*0x6E04F06094C87047*/ {
	nativeInit(0x6E04F06094C87047); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0x6F2135B6129620C1(bool p0) /*0x6F2135B6129620C1*/ {
	uint64_t val;
	nativeInit(0x6F2135B6129620C1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x6F7794F28C6B2535(Any* p0, const char* name) /*0x6F7794F28C6B2535*/ {
	uint64_t val;
	nativeInit(0x6F7794F28C6B2535);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0x6FDDF453C0C756EC() /*0x6FDDF453C0C756EC*/ {
	nativeInit(0x6FDDF453C0C756EC); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_DISPATCH_IDEAL_SPAWN_DISTANCE(float p0) /*0x6FE601A64180D423*/ {
	uint64_t val;
	nativeInit(0x6FE601A64180D423);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x703CC7F60CBB2B57(Any p0) /*0x703CC7F60CBB2B57*/ {
	uint64_t val;
	nativeInit(0x703CC7F60CBB2B57);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_WEATHER_TYPE_PERSIST(const char* weatherType) /*0x704983DF373B198F*/ {
	uint64_t val;
	nativeInit(0x704983DF373B198F);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SET_CUSTOM_RESPAWN_POSITION(float x, float y, float z, float heading) /*0x706B5EDCAA7FA663*/ {
	uint64_t val;
	nativeInit(0x706B5EDCAA7FA663);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline Hash GAMEPLAY_GET_NEXT_WEATHER_TYPE_HASH_NAME() /*0x711327CD09C8F162*/ {
	nativeInit(0x711327CD09C8F162); return *(Hash*)(nativeCall());
}
inline Any GAMEPLAY_0x72DE52178C291CB5() /*0x72DE52178C291CB5*/ {
	nativeInit(0x72DE52178C291CB5); return *(Any*)(nativeCall());
}
inline float GAMEPLAY_ABSF(float value) /*0x73D57CFFDD12C355*/ {
	uint64_t val;
	nativeInit(0x73D57CFFDD12C355);
	*(float*)(&val) = value;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_SET_GRAVITY_LEVEL(int level) /*0x740E14FAD5842351*/ {
	uint64_t val;
	nativeInit(0x740E14FAD5842351);
	*(int*)(&val) = level;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_POPULATE_NOW() /*0x7472BB270D7B4F3E*/ {
	nativeInit(0x7472BB270D7B4F3E);
	nativeCall();
}
inline void GAMEPLAY_STOP_SAVE_DATA() /*0x74E20C9145FB66FD*/ {
	nativeInit(0x74E20C9145FB66FD);
	nativeCall();
}
inline void GAMEPLAY_RESET_DISPATCH_IDEAL_SPAWN_DISTANCE() /*0x77A84429DD9F0A15*/ {
	nativeInit(0x77A84429DD9F0A15);
	nativeCall();
}
inline bool GAMEPLAY_IS_STUNT_JUMP_IN_PROGRESS() /*0x7A3F19700A4D0525*/ {
	nativeInit(0x7A3F19700A4D0525); return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_IS_THIS_A_MINIGAME_SCRIPT() /*0x7B30F65D7B710098*/ {
	nativeInit(0x7B30F65D7B710098); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x7C9C0B1EEB1F9072(float p0) /*0x7C9C0B1EEB1F9072*/ {
	uint64_t val;
	nativeInit(0x7C9C0B1EEB1F9072);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_REGISTER_FLOAT_TO_SAVE(Any* p0, const char* name) /*0x7CAEC29ECB5DFEBB*/ {
	uint64_t val;
	nativeInit(0x7CAEC29ECB5DFEBB);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_FRONTEND_FADING() /*0x7EA2B6AF97ECA6ED*/ {
	nativeInit(0x7EA2B6AF97ECA6ED); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x7EC6F9A478A6A512() /*0x7EC6F9A478A6A512*/ {
	nativeInit(0x7EC6F9A478A6A512);
	nativeCall();
}
inline float GAMEPLAY_0x7F8F6405F4777AF6(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9) /*0x7F8F6405F4777AF6*/ {
	uint64_t val;
	nativeInit(0x7F8F6405F4777AF6);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline Any GAMEPLAY_0x8098C8D6597AAE18(Any p0) /*0x8098C8D6597AAE18*/ {
	uint64_t val;
	nativeInit(0x8098C8D6597AAE18);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0x8269816F6CFD40F8(Any* p0, const char* name) /*0x8269816F6CFD40F8*/ {
	uint64_t val;
	nativeInit(0x8269816F6CFD40F8);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY__GET_PROJECTILE_NEAR_PED(Ped ped, Hash projHash, float radius, Vector3* projPos, Entity* projEnt, bool ownedByPlayer) /*0x82FDE6A57EE4EE44*/ {
	uint64_t val;
	nativeInit(0x82FDE6A57EE4EE44);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = projHash;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Vector3**)(&val) = projPos;
	nativePush(val);
	*(Entity**)(&val) = projEnt;
	nativePush(val);
	*(bool*)(&val) = ownedByPlayer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* GAMEPLAY_GET_ONSCREEN_KEYBOARD_RESULT() /*0x8362B09B91893647*/ {
	nativeInit(0x8362B09B91893647); return *(const char**)(nativeCall());
}
inline void GAMEPLAY_SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed) /*0x867654CBC7606F2C*/ {
	uint64_t val;
	nativeInit(0x867654CBC7606F2C);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = damage;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Ped*)(&val) = ownerPed;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_ATAN2(float p0, float p1) /*0x8927CBF9D22261A4*/ {
	uint64_t val;
	nativeInit(0x8927CBF9D22261A4);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_0x8951EB9C6906D3C8() /*0x8951EB9C6906D3C8*/ {
	nativeInit(0x8951EB9C6906D3C8);
	nativeCall();
}
inline bool GAMEPLAY_IS_MEMORY_CARD_IN_USE() /*0x8A75CE2956274ADD*/ {
	nativeInit(0x8A75CE2956274ADD); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_RANDOM_WEATHER_TYPE() /*0x8B05F884CF7E8020*/ {
	nativeInit(0x8B05F884CF7E8020);
	nativeCall();
}
inline int GAMEPLAY_GET_ALLOCATED_STACK_SIZE() /*0x8B3CA62B1EF19B62*/ {
	nativeInit(0x8B3CA62B1EF19B62); return *(int*)(nativeCall());
}
inline bool GAMEPLAY__GET_GROUND_Z_COORD_WITH_OFFSETS(float x, float y, float z, float* groundZ, Vector3* offsets) /*0x8BDC7BFC57A81E76*/ {
	uint64_t val;
	nativeInit(0x8BDC7BFC57A81E76);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float**)(&val) = groundZ;
	nativePush(val);
	*(Vector3**)(&val) = offsets;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x8D74E26F54B4E5C3(const char* p0) /*0x8D74E26F54B4E5C3*/ {
	uint64_t val;
	nativeInit(0x8D74E26F54B4E5C3);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY__GET_IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Hash projHash, Vector3* projPos, bool ownedByPlayer) /*0x8D7A43EC6A5FEA45*/ {
	uint64_t val;
	nativeInit(0x8D7A43EC6A5FEA45);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(Hash*)(&val) = projHash;
	nativePush(val);
	*(Vector3**)(&val) = projPos;
	nativePush(val);
	*(bool*)(&val) = ownedByPlayer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3) /*0x8EF07E15701D61ED*/ {
	uint64_t val;
	nativeInit(0x8EF07E15701D61ED);
	*(int**)(&val) = var;
	nativePush(val);
	*(int*)(&val) = rangeStart;
	nativePush(val);
	*(int*)(&val) = rangeEnd;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0x8EF5573A1F801A5C(Any p0, Any* p1, Any* p2) /*0x8EF5573A1F801A5C*/ {
	uint64_t val;
	nativeInit(0x8EF5573A1F801A5C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x8FA9C42FC5D7C64B(Any p0, Any p1, float p2, float p3, float p4, bool p5) /*0x8FA9C42FC5D7C64B*/ {
	uint64_t val;
	nativeInit(0x8FA9C42FC5D7C64B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0x918C7B2D2FF3928B(float p0, float p1, float p2, float p3, float p4, float p5, float p6) /*0x918C7B2D2FF3928B*/ {
	uint64_t val;
	nativeInit(0x918C7B2D2FF3928B);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GAMEPLAY_NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME() /*0x9243BAC96D64C050*/ {
	nativeInit(0x9243BAC96D64C050);
	nativeCall();
}
inline void GAMEPLAY_0x92790862E36C2ADA() /*0x92790862E36C2ADA*/ {
	nativeInit(0x92790862E36C2ADA);
	nativeCall();
}
inline void GAMEPLAY_SET_BIT(int* address, int offset) /*0x933D6A9EEC1BACD0*/ {
	uint64_t val;
	nativeInit(0x933D6A9EEC1BACD0);
	*(int**)(&val) = address;
	nativePush(val);
	*(int*)(&val) = offset;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__CLEAR_AREA_OF_EVERYTHING(float x, float y, float z, float radius, bool p4, bool p5, bool p6, bool p7) /*0x957838AAF91BD12D*/ {
	uint64_t val;
	nativeInit(0x957838AAF91BD12D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__CLEAR_CLOUD_HAT() /*0x957E790EA1727B64*/ {
	nativeInit(0x957E790EA1727B64);
	nativeCall();
}
inline float GAMEPLAY_GET_RAIN_LEVEL() /*0x96695E368AD855F3*/ {
	nativeInit(0x96695E368AD855F3); return *(float*)(nativeCall());
}
inline bool GAMEPLAY__GET_SHOW_PED_IN_PAUSE_MENU() /*0x9689123E3F213AA5*/ {
	nativeInit(0x9689123E3F213AA5); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_RANDOM_EVENT_FLAG(bool p0) /*0x971927086CFD2158*/ {
	uint64_t val;
	nativeInit(0x971927086CFD2158);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0x97E7E2C04245115B(Any p0) /*0x97E7E2C04245115B*/ {
	uint64_t val;
	nativeInit(0x97E7E2C04245115B);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_HAS_BULLET_IMPACTED_IN_AREA(float x, float y, float z, float p3, bool p4, bool p5) /*0x9870ACFB89A90995*/ {
	uint64_t val;
	nativeInit(0x9870ACFB89A90995);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GAMEPLAY_0x996DD1E1E02F1008() /*0x996DD1E1E02F1008*/ {
	nativeInit(0x996DD1E1E02F1008); return *(int*)(nativeCall());
}
inline void GAMEPLAY_0x9B2BD3773123EA2F(int type, bool toggle) /*0x9B2BD3773123EA2F*/ {
	uint64_t val;
	nativeInit(0x9B2BD3773123EA2F);
	*(int*)(&val) = type;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__USE_FREEMODE_MAP_BEHAVIOR(bool toggle) /*0x9BAE5AD2508DF078*/ {
	uint64_t val;
	nativeInit(0x9BAE5AD2508DF078);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_GET_GAME_TIMER() /*0x9CD27B0045628463*/ {
	nativeInit(0x9CD27B0045628463); return *(int*)(nativeCall());
}
inline void GAMEPLAY_0x9D8D44ADBBA61EF2(bool p0) /*0x9D8D44ADBBA61EF2*/ {
	uint64_t val;
	nativeInit(0x9D8D44ADBBA61EF2);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(const char* scriptName) /*0x9DC711BC69C548DF*/ {
	uint64_t val;
	nativeInit(0x9DC711BC69C548DF);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_AUSSIE_VERSION() /*0x9F1935CA1F724008*/ {
	nativeInit(0x9F1935CA1F724008); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0x9F5E6BB6B34540DA(float p0) /*0x9F5E6BB6B34540DA*/ {
	uint64_t val;
	nativeInit(0x9F5E6BB6B34540DA);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0xA049A5BE0F04F2F8() /*0xA049A5BE0F04F2F8*/ {
	nativeInit(0xA049A5BE0F04F2F8); return *(bool*)(nativeCall());
}
inline int GAMEPLAY_0xA09F896CE912481F(bool p0) /*0xA09F896CE912481F*/ {
	uint64_t val;
	nativeInit(0xA09F896CE912481F);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_END_REPLAY_STATS() /*0xA23E821FBDF8A5F2*/ {
	nativeInit(0xA23E821FBDF8A5F2);
	nativeCall();
}
inline void GAMEPLAY__SET_NEXT_RESPAWN_TO_CUSTOM() /*0xA2716D40842EAF79*/ {
	nativeInit(0xA2716D40842EAF79);
	nativeCall();
}
inline bool GAMEPLAY_GET_MISSION_FLAG() /*0xA33CDCCDA663159E*/ {
	nativeInit(0xA33CDCCDA663159E); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_OVERRIDE_WEATHER(const char* weatherType) /*0xA43D5C6FE51ADBEF*/ {
	uint64_t val;
	nativeInit(0xA43D5C6FE51ADBEF);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0xA4A0065E39C9F25C(Any p0, Any p1, Any p2, Any p3) /*0xA4A0065E39C9F25C*/ {
	uint64_t val;
	nativeInit(0xA4A0065E39C9F25C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GAMEPLAY_DISABLE_STUNT_JUMP_SET(int p0) /*0xA5272EBEDD4747F6*/ {
	uint64_t val;
	nativeInit(0xA5272EBEDD4747F6);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_CLEAR_AREA(float X, float Y, float Z, float radius, bool p4, bool ignoreCopCars, bool ignoreObjects, bool p7) /*0xA56F01F3765B93A0*/ {
	uint64_t val;
	nativeInit(0xA56F01F3765B93A0);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = ignoreCopCars;
	nativePush(val);
	*(bool*)(&val) = ignoreObjects;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_AREA_OCCUPIED(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7, bool p8, bool p9, bool p10, Any p11, bool p12) /*0xA61B4DF533DCB56E*/ {
	uint64_t val;
	nativeInit(0xA61B4DF533DCB56E);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	*(bool*)(&val) = p12;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_EXPLOSIVE_AMMO_THIS_FRAME(Player player) /*0xA66C71C98D5F2CFB*/ {
	uint64_t val;
	nativeInit(0xA66C71C98D5F2CFB);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__REMOVE_STEALTH_KILL(Hash hash, bool p1) /*0xA6A12939F16D85BE*/ {
	uint64_t val;
	nativeInit(0xA6A12939F16D85BE);
	*(Hash*)(&val) = hash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_ORBIS_VERSION() /*0xA72BC0B675B1519E*/ {
	nativeInit(0xA72BC0B675B1519E); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xA735353C77334EA0(Any* p0, Any* p1) /*0xA735353C77334EA0*/ {
	uint64_t val;
	nativeInit(0xA735353C77334EA0);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_UNLOAD_CLOUD_HAT(const char* name, float p1) /*0xA74802FB8D0B7814*/ {
	uint64_t val;
	nativeInit(0xA74802FB8D0B7814);
	*(const char**)(&val) = name;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xA7A1127490312C36(float p0) /*0xA7A1127490312C36*/ {
	uint64_t val;
	nativeInit(0xA7A1127490312C36);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xA8434F1DFF41D6E7(float p0) /*0xA8434F1DFF41D6E7*/ {
	uint64_t val;
	nativeInit(0xA8434F1DFF41D6E7);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_GET_WIND_SPEED() /*0xA8CF1CC0AFCD3F12*/ {
	nativeInit(0xA8CF1CC0AFCD3F12); return *(float*)(nativeCall());
}
inline bool GAMEPLAY_IS_BIT_SET(int* address, int offset) /*0xA921AA820C25702F*/ {
	uint64_t val;
	nativeInit(0xA921AA820C25702F);
	*(int**)(&val) = address;
	nativePush(val);
	*(int*)(&val) = offset;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_START_SAVE_DATA(Any* p0, Any p1, bool p2) /*0xA9575F812C6A7997*/ {
	uint64_t val;
	nativeInit(0xA9575F812C6A7997);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_ATAN(float p0) /*0xA9D1795CD5043663*/ {
	uint64_t val;
	nativeInit(0xA9D1795CD5043663);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_SET_THIS_SCRIPT_CAN_BE_PAUSED(bool toggle) /*0xAA391C728106F7AF*/ {
	uint64_t val;
	nativeInit(0xAA391C728106F7AF);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_0xABB2FA71C83A1B72() /*0xABB2FA71C83A1B72*/ {
	nativeInit(0xABB2FA71C83A1B72); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_SET_WIND(float speed) /*0xAC3A74E8384A9919*/ {
	uint64_t val;
	nativeInit(0xAC3A74E8384A9919);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_RESET_DISPATCH_SPAWN_BLOCKING_AREAS() /*0xAC7BFD5C1D83EA75*/ {
	nativeInit(0xAC7BFD5C1D83EA75);
	nativeCall();
}
inline bool GAMEPLAY_IS_POSITION_OCCUPIED(float x, float y, float z, float range, bool p4, bool p5, bool p6, bool p7, bool p8, Any p9, bool p10) /*0xADCDE75E1C60F32D*/ {
	uint64_t val;
	nativeInit(0xADCDE75E1C60F32D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xB08B85D860E7BA3C(Any p0, Any p1, Any p2) /*0xB08B85D860E7BA3C*/ {
	uint64_t val;
	nativeInit(0xB08B85D860E7BA3C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xB129E447A2EDA4BF(Any p0, bool p1) /*0xB129E447A2EDA4BF*/ {
	uint64_t val;
	nativeInit(0xB129E447A2EDA4BF);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0xB335F761606DB47C(Any* p1, Any* p2, Any p3, bool p4) /*0xB335F761606DB47C*/ {
	uint64_t val;
	nativeInit(0xB335F761606DB47C);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xB3CD58CCA6CDA852() /*0xB3CD58CCA6CDA852*/ {
	nativeInit(0xB3CD58CCA6CDA852);
	nativeCall();
}
inline void GAMEPLAY_0xB3E6360DDE733E82(float p0) /*0xB3E6360DDE733E82*/ {
	uint64_t val;
	nativeInit(0xB3E6360DDE733E82);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xB51B9AB9EF81868C(bool toggle) /*0xB51B9AB9EF81868C*/ {
	uint64_t val;
	nativeInit(0xB51B9AB9EF81868C);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xB8721407EE9C3FF6(Any p0, Any p1, Any p2) /*0xB8721407EE9C3FF6*/ {
	uint64_t val;
	nativeInit(0xB8721407EE9C3FF6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xB8F87EAD7533B176(float p0) /*0xB8F87EAD7533B176*/ {
	uint64_t val;
	nativeInit(0xB8F87EAD7533B176);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_CREDITS_ACTIVE(bool toggle) /*0xB938B7E6D3C0620C*/ {
	uint64_t val;
	nativeInit(0xB938B7E6D3C0620C);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(bool toggle) /*0xB98236CAAECEF897*/ {
	uint64_t val;
	nativeInit(0xB98236CAAECEF897);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xB9854DFDE0D833D6(float p0) /*0xB9854DFDE0D833D6*/ {
	uint64_t val;
	nativeInit(0xB9854DFDE0D833D6);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xBA4B8D83BDC75551(Any p0) /*0xBA4B8D83BDC75551*/ {
	uint64_t val;
	nativeInit(0xBA4B8D83BDC75551);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_ADD_STUNT_JUMP_ANGLED(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13, float p14, float p15, float p16, Any p17, Any p18) /*0xBBE5D803A5360CBF*/ {
	uint64_t val;
	nativeInit(0xBBE5D803A5360CBF);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	*(float*)(&val) = p12;
	nativePush(val);
	*(float*)(&val) = p13;
	nativePush(val);
	*(float*)(&val) = p14;
	nativePush(val);
	*(float*)(&val) = p15;
	nativePush(val);
	*(float*)(&val) = p16;
	nativePush(val);
	*(Any*)(&val) = p17;
	nativePush(val);
	*(Any*)(&val) = p18;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_AREA_OF_PEDS(float x, float y, float z, float radius, int flags) /*0xBE31FD6CE464AC59*/ {
	uint64_t val;
	nativeInit(0xBE31FD6CE464AC59);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__START_SAVE_STRUCT(Any* p0, int p1, const char* structName) /*0xBF737600CDDBEADD*/ {
	uint64_t val;
	nativeInit(0xBF737600CDDBEADD);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = structName;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed, Entity entity, bool p14, bool p15, bool p16, bool p17) /*0xBFE5756E7407064A*/ {
	uint64_t val;
	nativeInit(0xBFE5756E7407064A);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = damage;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Ped*)(&val) = ownerPed;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = p14;
	nativePush(val);
	*(bool*)(&val) = p15;
	nativePush(val);
	*(bool*)(&val) = p16;
	nativePush(val);
	*(bool*)(&val) = p17;
	nativePush(val);
	nativeCall();
}
inline Any GAMEPLAY_REGISTER_SAVE_HOUSE(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6) /*0xC0714D0A7EEECA54*/ {
	uint64_t val;
	nativeInit(0xC0714D0A7EEECA54);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GAMEPLAY__RESET_LOCALPLAYER_STATE() /*0xC0AA53F866B3134D*/ {
	nativeInit(0xC0AA53F866B3134D);
	nativeCall();
}
inline void GAMEPLAY_0xC3C221ADDDE31A11(float p0) /*0xC3C221ADDDE31A11*/ {
	uint64_t val;
	nativeInit(0xC3C221ADDDE31A11);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xC3EAD29AB273ECE8(float p0) /*0xC3EAD29AB273ECE8*/ {
	uint64_t val;
	nativeInit(0xC3EAD29AB273ECE8);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_MISSION_FLAG(bool toggle) /*0xC4301E5121A0ED73*/ {
	uint64_t val;
	nativeInit(0xC4301E5121A0ED73);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_GET_PROFILE_SETTING(int profileSetting) /*0xC488FF2356EA7791*/ {
	uint64_t val;
	nativeInit(0xC488FF2356EA7791);
	*(int*)(&val) = profileSetting;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_0xC54A08C85AE4D410(float p0) /*0xC54A08C85AE4D410*/ {
	uint64_t val;
	nativeInit(0xC54A08C85AE4D410);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_GET_SNOW_LEVEL() /*0xC5868A966E5BE3AE*/ {
	nativeInit(0xC5868A966E5BE3AE); return *(float*)(nativeCall());
}
inline void GAMEPLAY__SET_UNK_MAP_FLAG(int flag) /*0xC5F0A8EBD3F361CE*/ {
	uint64_t val;
	nativeInit(0xC5F0A8EBD3F361CE);
	*(int*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__CLEANUP_ASYNC_INSTALL() /*0xC79AE21974B01FB2*/ {
	nativeInit(0xC79AE21974B01FB2);
	nativeCall();
}
inline void GAMEPLAY_0xC7DB36C24634F52B() /*0xC7DB36C24634F52B*/ {
	nativeInit(0xC7DB36C24634F52B);
	nativeCall();
}
inline float GAMEPLAY_ASIN(float p0) /*0xC843060B5765DCE7*/ {
	uint64_t val;
	nativeInit(0xC843060B5765DCE7);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GAMEPLAY_DISABLE_HOSPITAL_RESTART(int hospitalIndex, bool toggle) /*0xC8535819C450EBA8*/ {
	uint64_t val;
	nativeInit(0xC8535819C450EBA8);
	*(int*)(&val) = hospitalIndex;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_INCIDENT_VALID(int incidentId) /*0xC8BC6461E629BEAA*/ {
	uint64_t val;
	nativeInit(0xC8BC6461E629BEAA);
	*(int*)(&val) = incidentId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_REGISTER_bool_TO_SAVE(Any* p0, const char* name) /*0xC8F4131414C835A1*/ {
	uint64_t val;
	nativeInit(0xC8F4131414C835A1);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, bool unk) /*0xC906A7DAB05C8D2B*/ {
	uint64_t val;
	nativeInit(0xC906A7DAB05C8D2B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float**)(&val) = groundZ;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_SAVE_MENU_ACTIVE(bool unk) /*0xC9BF75D28165FF77*/ {
	uint64_t val;
	nativeInit(0xC9BF75D28165FF77);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_STRING_NULL_OR_EMPTY(const char* string) /*0xCA042B6957743895*/ {
	uint64_t val;
	nativeInit(0xCA042B6957743895);
	*(const char**)(&val) = string;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY__DISPLAY_ONSCREEN_KEYBOARD_2(int p0, const char* windowTitle, Any* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, const char* defaultConcat4, const char* defaultConcat5, const char* defaultConcat6, const char* defaultConcat7, int maxInputLength) /*0xCA78CFA0366592FE*/ {
	uint64_t val;
	nativeInit(0xCA78CFA0366592FE);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = windowTitle;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = defaultText;
	nativePush(val);
	*(const char**)(&val) = defaultConcat1;
	nativePush(val);
	*(const char**)(&val) = defaultConcat2;
	nativePush(val);
	*(const char**)(&val) = defaultConcat3;
	nativePush(val);
	*(const char**)(&val) = defaultConcat4;
	nativePush(val);
	*(const char**)(&val) = defaultConcat5;
	nativePush(val);
	*(const char**)(&val) = defaultConcat6;
	nativePush(val);
	*(const char**)(&val) = defaultConcat7;
	nativePush(val);
	*(int*)(&val) = maxInputLength;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_GET_INDEX_OF_CURRENT_LEVEL() /*0xCBAD6729F7B1F4FC*/ {
	nativeInit(0xCBAD6729F7B1F4FC); return *(int*)(nativeCall());
}
inline bool GAMEPLAY_IS_PS3_VERSION() /*0xCCA1072C29D096C2*/ {
	nativeInit(0xCCA1072C29D096C2); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_WEATHER_TYPE_PERSIST() /*0xCCC39339BEF76CF5*/ {
	nativeInit(0xCCC39339BEF76CF5);
	nativeCall();
}
inline Any GAMEPLAY_0xD10282B6E3751BA0() /*0xD10282B6E3751BA0*/ {
	nativeInit(0xD10282B6E3751BA0); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0xD10F442036302D50(Any p0, Any p1, Any p2) /*0xD10F442036302D50*/ {
	uint64_t val;
	nativeInit(0xD10F442036302D50);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Hash GAMEPLAY_GET_HASH_KEY(const char* string) /*0xD24D37CC275948CC*/ {
	uint64_t val;
	nativeInit(0xD24D37CC275948CC);
	*(const char**)(&val) = string;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void GAMEPLAY_0xD261BA3E7E998072(Any p0, float p1) /*0xD261BA3E7E998072*/ {
	uint64_t val;
	nativeInit(0xD261BA3E7E998072);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_GET_RANDOM_EVENT_FLAG() /*0xD2D57F1D764117B1*/ {
	nativeInit(0xD2D57F1D764117B1); return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_0xD3D15555431AB793() /*0xD3D15555431AB793*/ {
	nativeInit(0xD3D15555431AB793); return *(bool*)(nativeCall());
}
inline int GAMEPLAY_GET_RANDOM_INT_IN_RANGE(int startRange, int endRange) /*0xD53343AA4FB7DD28*/ {
	uint64_t val;
	nativeInit(0xD53343AA4FB7DD28);
	*(int*)(&val) = startRange;
	nativePush(val);
	*(int*)(&val) = endRange;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any GAMEPLAY_0xD642319C54AADEB6() /*0xD642319C54AADEB6*/ {
	nativeInit(0xD642319C54AADEB6); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0xD79185689F8FD5DF(bool p0) /*0xD79185689F8FD5DF*/ {
	uint64_t val;
	nativeInit(0xD79185689F8FD5DF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xD9F692D349249528() /*0xD9F692D349249528*/ {
	nativeInit(0xD9F692D349249528);
	nativeCall();
}
inline void GAMEPLAY_SET_FADE_IN_AFTER_DEATH_ARREST(bool toggle) /*0xDA66D2796BA33F12*/ {
	uint64_t val;
	nativeInit(0xDA66D2796BA33F12);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_ENABLE_DISPATCH_SERVICE(int dispatchService, bool toggle) /*0xDC0F817884CDD856*/ {
	uint64_t val;
	nativeInit(0xDC0F817884CDD856);
	*(int*)(&val) = dispatchService;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_DELETE_STUNT_JUMP(int player) /*0xDC518000E39DAE1F*/ {
	uint64_t val;
	nativeInit(0xDC518000E39DAE1F);
	*(int*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_HAS_BULLET_IMPACTED_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, bool p6, bool p7) /*0xDC8C5D7CFEAB8394*/ {
	uint64_t val;
	nativeInit(0xDC8C5D7CFEAB8394);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any GAMEPLAY_0xDC9274A7EF6B2867() /*0xDC9274A7EF6B2867*/ {
	nativeInit(0xDC9274A7EF6B2867); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, int flags) /*0xDD9B9B385AAC7F5B*/ {
	uint64_t val;
	nativeInit(0xDD9B9B385AAC7F5B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_BULLET_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, bool p6) /*0xDE0F6D7450D37351*/ {
	uint64_t val;
	nativeInit(0xDE0F6D7450D37351);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xDEA36202FC3382DF(bool p0) /*0xDEA36202FC3382DF*/ {
	uint64_t val;
	nativeInit(0xDEA36202FC3382DF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY__GET_PROJECTILE_NEAR_PED_COORDS(Ped ped, Hash projHash, float radius, Vector3* projPos, bool ownedByPlayer) /*0xDFB4138EEFED7B81*/ {
	uint64_t val;
	nativeInit(0xDFB4138EEFED7B81);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = projHash;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Vector3**)(&val) = projPos;
	nativePush(val);
	*(bool*)(&val) = ownedByPlayer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_BEGIN_REPLAY_STATS(Any p0, Any p1) /*0xE0E500246FF73D66*/ {
	uint64_t val;
	nativeInit(0xE0E500246FF73D66);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xE266ED23311F24D4(Any p0, Any* p1, Any* p2, float p3, float p4, bool p5) /*0xE266ED23311F24D4*/ {
	uint64_t val;
	nativeInit(0xE266ED23311F24D4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_ENABLE_STUNT_JUMP_SET(int p0) /*0xE369A5783B866016*/ {
	uint64_t val;
	nativeInit(0xE369A5783B866016);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SHOOT_SINGLE_BULLET_BETWEEN_COORDS_PRESET_PARAMS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, bool p7, Hash weaponHash, Ped ownerPed, bool isAudible, bool isInvisible, float speed, Entity entity) /*0xE3A7742E0B7A2F8B*/ {
	uint64_t val;
	nativeInit(0xE3A7742E0B7A2F8B);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = damage;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Ped*)(&val) = ownerPed;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xE3D969D2785FFB5E() /*0xE3D969D2785FFB5E*/ {
	nativeInit(0xE3D969D2785FFB5E);
	nativeCall();
}
inline void GAMEPLAY_0xE532EC1A63231B4F(Any p0, Any p1) /*0xE532EC1A63231B4F*/ {
	uint64_t val;
	nativeInit(0xE532EC1A63231B4F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) /*0xE54E209C35FFA18D*/ {
	uint64_t val;
	nativeInit(0xE54E209C35FFA18D);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float GAMEPLAY__GET_BENCHMARK_TIME() /*0xE599A503B3837E1B*/ {
	nativeInit(0xE599A503B3837E1B); return *(float*)(nativeCall());
}
inline void GAMEPLAY_0xE6869BECDD8F2403(Any p0, bool p1) /*0xE6869BECDD8F2403*/ {
	uint64_t val;
	nativeInit(0xE6869BECDD8F2403);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_CANCEL_STUNT_JUMP() /*0xE6B7B0ACD4E4B75E*/ {
	nativeInit(0xE6B7B0ACD4E4B75E);
	nativeCall();
}
inline void GAMEPLAY_CLEAR_BIT(int* address, int offset) /*0xE80492A9AC099A93*/ {
	uint64_t val;
	nativeInit(0xE80492A9AC099A93);
	*(int**)(&val) = address;
	nativePush(val);
	*(int*)(&val) = offset;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0xE8B9C0EC9E183F35() /*0xE8B9C0EC9E183F35*/ {
	nativeInit(0xE8B9C0EC9E183F35); return *(bool*)(nativeCall());
}
inline bool GAMEPLAY_0xE95B0C7D5BA3B96B(Any p0) /*0xE95B0C7D5BA3B96B*/ {
	uint64_t val;
	nativeInit(0xE95B0C7D5BA3B96B);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any GAMEPLAY_0xEA2F2061875EED90() /*0xEA2F2061875EED90*/ {
	nativeInit(0xEA2F2061875EED90); return *(Any*)(nativeCall());
}
inline void GAMEPLAY_0xEB078CA2B5E82ADD(Any p0, Any p1) /*0xEB078CA2B5E82ADD*/ {
	uint64_t val;
	nativeInit(0xEB078CA2B5E82ADD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_WIND_DIRECTION(float direction) /*0xEB0F4468467B4528*/ {
	uint64_t val;
	nativeInit(0xEB0F4468467B4528);
	*(float*)(&val) = direction;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_STOP_SAVE_STRUCT() /*0xEB1774DF12BB9F12*/ {
	nativeInit(0xEB1774DF12BB9F12);
	nativeCall();
}
inline Any GAMEPLAY_0xEB2104E905C6F2E9() /*0xEB2104E905C6F2E9*/ {
	nativeInit(0xEB2104E905C6F2E9); return *(Any*)(nativeCall());
}
inline int GAMEPLAY__GET_NUMBER_OF_DISPATCHED_UNITS_FOR_PLAYER(int dispatchService) /*0xEB4A0C2D56441717*/ {
	uint64_t val;
	nativeInit(0xEB4A0C2D56441717);
	*(int*)(&val) = dispatchService;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY__FORCE_SOCIAL_CLUB_UPDATE() /*0xEB6891F03362FB12*/ {
	nativeInit(0xEB6891F03362FB12);
	nativeCall();
}
inline void GAMEPLAY_0xEBD3205A207939ED(Any* p0) /*0xEBD3205A207939ED*/ {
	uint64_t val;
	nativeInit(0xEBD3205A207939ED);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_WEATHER_TYPE_NOW_PERSIST(const char* weatherType) /*0xED712CA327900C8A*/ {
	uint64_t val;
	nativeInit(0xED712CA327900C8A);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, const char* name) /*0xEDB1232C5BEAE62F*/ {
	uint64_t val;
	nativeInit(0xEDB1232C5BEAE62F);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_WIND_SPEED(float speed) /*0xEE09ECEDBABE47FC*/ {
	uint64_t val;
	nativeInit(0xEE09ECEDBABE47FC);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_IS_PROJECTILE_TYPE_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, bool p8) /*0xF0BC12401061DEA0*/ {
	uint64_t val;
	nativeInit(0xF0BC12401061DEA0);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GAMEPLAY_ABSI(int value) /*0xF0D31AD191A74F87*/ {
	uint64_t val;
	nativeInit(0xF0D31AD191A74F87);
	*(int*)(&val) = value;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GAMEPLAY_USING_MISSION_CREATOR(bool toggle) /*0xF14878FC50BEC6EE*/ {
	uint64_t val;
	nativeInit(0xF14878FC50BEC6EE);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float GAMEPLAY_GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, bool useZ) /*0xF1B760881820C952*/ {
	uint64_t val;
	nativeInit(0xF1B760881820C952);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = useZ;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool GAMEPLAY_IS_STRING_NULL(const char* string) /*0xF22B6C47C6EAB066*/ {
	uint64_t val;
	nativeInit(0xF22B6C47C6EAB066);
	*(const char**)(&val) = string;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xF2F6A2FA49278625(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any* p9, Any* p10, Any* p11, Any* p12) /*0xF2F6A2FA49278625*/ {
	uint64_t val;
	nativeInit(0xF2F6A2FA49278625);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(Any**)(&val) = p9;
	nativePush(val);
	*(Any**)(&val) = p10;
	nativePush(val);
	*(Any**)(&val) = p11;
	nativePush(val);
	*(Any**)(&val) = p12;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__SET_CLOUD_HAT_OPACITY(float opacity) /*0xF36199225D6D8C86*/ {
	uint64_t val;
	nativeInit(0xF36199225D6D8C86);
	*(float*)(&val) = opacity;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY__GET_WEATHER_TYPE_TRANSITION(Hash* weatherType1, Hash* weatherType2, float* percentWeather2) /*0xF3BBE884A14BB413*/ {
	uint64_t val;
	nativeInit(0xF3BBE884A14BB413);
	*(Hash**)(&val) = weatherType1;
	nativePush(val);
	*(Hash**)(&val) = weatherType2;
	nativePush(val);
	*(float**)(&val) = percentWeather2;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_SET_FADE_IN_AFTER_LOAD(bool toggle) /*0xF3D78F59DFE18D79*/ {
	uint64_t val;
	nativeInit(0xF3D78F59DFE18D79);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool GAMEPLAY_0xF56DFB7B61BE7276(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, Any* p12) /*0xF56DFB7B61BE7276*/ {
	uint64_t val;
	nativeInit(0xF56DFB7B61BE7276);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	*(Any**)(&val) = p12;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_FORCE_LIGHTNING_FLASH() /*0xF6062E089251C898*/ {
	nativeInit(0xF6062E089251C898);
	nativeCall();
}
inline bool GAMEPLAY_IS_XBOX360_VERSION() /*0xF6201B4DAF662A9D*/ {
	nativeInit(0xF6201B4DAF662A9D); return *(bool*)(nativeCall());
}
inline void GAMEPLAY_0xF751B16FB32ABC1D(float p0) /*0xF751B16FB32ABC1D*/ {
	uint64_t val;
	nativeInit(0xF751B16FB32ABC1D);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xFAA457EF263E8763(Any* p0, const char* name) /*0xFAA457EF263E8763*/ {
	uint64_t val;
	nativeInit(0xFAA457EF263E8763);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_0xFB00CA71DA386228() /*0xFB00CA71DA386228*/ {
	nativeInit(0xFB00CA71DA386228);
	nativeCall();
}
inline void GAMEPLAY__SET_WEATHER_TYPE_OVER_TIME(const char* weatherType, float time) /*0xFB5045B7C42B75BF*/ {
	uint64_t val;
	nativeInit(0xFB5045B7C42B75BF);
	*(const char**)(&val) = weatherType;
	nativePush(val);
	*(float*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline void GAMEPLAY_LOAD_CLOUD_HAT(const char* name, float transitionTime) /*0xFC4842A34657BFCB*/ {
	uint64_t val;
	nativeInit(0xFC4842A34657BFCB);
	*(const char**)(&val) = name;
	nativePush(val);
	*(float*)(&val) = transitionTime;
	nativePush(val);
	nativeCall();
}
inline int GAMEPLAY_GET_FRAME_COUNT() /*0xFC8202EFC642E6F2*/ {
	nativeInit(0xFC8202EFC642E6F2); return *(int*)(nativeCall());
}
inline int GAMEPLAY__GET_FREE_STACK_SLOTS_COUNT(int threadId) /*0xFEAD16FC8F9DFC0F*/ {
	uint64_t val;
	nativeInit(0xFEAD16FC8F9DFC0F);
	*(int*)(&val) = threadId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool GAMEPLAY_IS_SNIPER_BULLET_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) /*0xFEFCF11B01287125*/ {
	uint64_t val;
	nativeInit(0xFEFCF11B01287125);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GAMEPLAY_SET_EXPLOSIVE_MELEE_THIS_FRAME(Player player) /*0xFF1BED81BFDC0FE0*/ {
	uint64_t val;
	nativeInit(0xFF1BED81BFDC0FE0);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_CREATE_CHECKPOINT(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float radius, int red, int green, int blue, int alpha, int reserved) /*0x0134F0835AB6BFCB*/ {
	uint64_t val;
	nativeInit(0x0134F0835AB6BFCB);
	*(int*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = posX1;
	nativePush(val);
	*(float*)(&val) = posY1;
	nativePush(val);
	*(float*)(&val) = posZ1;
	nativePush(val);
	*(float*)(&val) = posX2;
	nativePush(val);
	*(float*)(&val) = posY2;
	nativePush(val);
	*(float*)(&val) = posZ2;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	*(int*)(&val) = reserved;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool GRAPHICS_HAS_STREAMED_TEXTURE_DICT_LOADED(const char* textureDict) /*0x0145F696AAAAD2E4*/ {
	uint64_t val;
	nativeInit(0x0145F696AAAAD2E4);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x0218BA067D249DEA() /*0x0218BA067D249DEA*/ {
	nativeInit(0x0218BA067D249DEA);
	nativeCall();
}
inline void GRAPHICS_0x02369D5C8A51FDCF(bool p0) /*0x02369D5C8A51FDCF*/ {
	uint64_t val;
	nativeInit(0x02369D5C8A51FDCF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0x02AC28F3A01FA04A(float p0) /*0x02AC28F3A01FA04A*/ {
	uint64_t val;
	nativeInit(0x02AC28F3A01FA04A);
	*(float*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_0x03300B57FCAC6DDB(bool p0) /*0x03300B57FCAC6DDB*/ {
	uint64_t val;
	nativeInit(0x03300B57FCAC6DDB);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x03FC694AE06C5A20() /*0x03FC694AE06C5A20*/ {
	nativeInit(0x03FC694AE06C5A20);
	nativeCall();
}
inline bool GRAPHICS__DOES_VEHICLE_HAVE_DECAL(Vehicle vehicle, int decalIndex) /*0x060D935D3981A275*/ {
	uint64_t val;
	nativeInit(0x060D935D3981A275);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = decalIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_ANIMPOSTFX_STOP(const char* effectName) /*0x068E835A1D0DC0E3*/ {
	uint64_t val;
	nativeInit(0x068E835A1D0DC0E3);
	*(const char**)(&val) = effectName;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x06F761EA47C1D3ED(bool p0) /*0x06F761EA47C1D3ED*/ {
	uint64_t val;
	nativeInit(0x06F761EA47C1D3ED);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) /*0x083A2CA4F2E573BD*/ {
	uint64_t val;
	nativeInit(0x083A2CA4F2E573BD);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x0A123435A26C36CD() /*0x0A123435A26C36CD*/ {
	nativeInit(0x0A123435A26C36CD);
	nativeCall();
}
inline void GRAPHICS_0x0A46AF8A78DC5E0A() /*0x0A46AF8A78DC5E0A*/ {
	nativeInit(0x0A46AF8A78DC5E0A);
	nativeCall();
}
inline void GRAPHICS_SET_FLASH(float p0, float p1, float fadeIn, float duration, float fadeOut) /*0x0AB84296FED9CFC6*/ {
	uint64_t val;
	nativeInit(0x0AB84296FED9CFC6);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = fadeIn;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	*(float*)(&val) = fadeOut;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__IS_TV_PLAYLIST_ITEM_PLAYING(Hash videoClip) /*0x0AD973CA1E077B60*/ {
	uint64_t val;
	nativeInit(0x0AD973CA1E077B60);
	*(Hash*)(&val) = videoClip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x0AE73D8DF3A762B2(bool p0) /*0x0AE73D8DF3A762B2*/ {
	uint64_t val;
	nativeInit(0x0AE73D8DF3A762B2);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_0x0C0C4E81E1AC60A0() /*0x0C0C4E81E1AC60A0*/ {
	nativeInit(0x0C0C4E81E1AC60A0); return *(int*)(nativeCall());
}
inline bool GRAPHICS__HAS_NAMED_SCALEFORM_MOVIE_LOADED(const char* scaleformName) /*0x0C1C5D756FB5F337*/ {
	uint64_t val;
	nativeInit(0x0C1C5D756FB5F337);
	*(const char**)(&val) = scaleformName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GRAPHICS_START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, bool axisX, bool axisY, bool axisZ) /*0x0D53A3B8DA0809D2*/ {
	uint64_t val;
	nativeInit(0x0D53A3B8DA0809D2);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = axisX;
	nativePush(val);
	*(bool*)(&val) = axisY;
	nativePush(val);
	*(bool*)(&val) = axisZ;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GRAPHICS_0x0D6CA79EEEBD8CA3() /*0x0D6CA79EEEBD8CA3*/ {
	nativeInit(0x0D6CA79EEEBD8CA3); return *(int*)(nativeCall());
}
inline void GRAPHICS_DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, int unk) /*0x0DF606929C105BE1*/ {
	uint64_t val;
	nativeInit(0x0DF606929C105BE1);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x0E4299C549F0D1F1(bool p0) /*0x0E4299C549F0D1F1*/ {
	uint64_t val;
	nativeInit(0x0E4299C549F0D1F1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, bool axisX, bool axisY, bool axisZ) /*0x0E7E72961BA18619*/ {
	uint64_t val;
	nativeInit(0x0E7E72961BA18619);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = axisX;
	nativePush(val);
	*(bool*)(&val) = axisY;
	nativePush(val);
	*(bool*)(&val) = axisZ;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_CLEAR_TIMECYCLE_MODIFIER() /*0x0F07E7745A236711*/ {
	nativeInit(0x0F07E7745A236711);
	nativeCall();
}
inline void GRAPHICS_0x1072F115DAB0717E(bool p0, bool p1) /*0x1072F115DAB0717E*/ {
	uint64_t val;
	nativeInit(0x1072F115DAB0717E);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x108BE26959A9D9BB(bool p0) /*0x108BE26959A9D9BB*/ {
	uint64_t val;
	nativeInit(0x108BE26959A9D9BB);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_TV_AUDIO_FRONTEND(bool toggle) /*0x113D2C5DC57E1774*/ {
	uint64_t val;
	nativeInit(0x113D2C5DC57E1774);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_REQUEST_SCALEFORM_MOVIE(const char* scaleformName) /*0x11FE353CF9733E6F*/ {
	uint64_t val;
	nativeInit(0x11FE353CF9733E6F);
	*(const char**)(&val) = scaleformName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_SET_ARTIFICIAL_LIGHTS_STATE(bool state) /*0x1268615ACE24D504*/ {
	uint64_t val;
	nativeInit(0x1268615ACE24D504);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x12995F2E53FFA601(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) /*0x12995F2E53FFA601*/ {
	uint64_t val;
	nativeInit(0x12995F2E53FFA601);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	*(int*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x14FC5833464340A8() /*0x14FC5833464340A8*/ {
	nativeInit(0x14FC5833464340A8);
	nativeCall();
}
inline void GRAPHICS_0x15E33297C3E8DC60(Any p0) /*0x15E33297C3E8DC60*/ {
	uint64_t val;
	nativeInit(0x15E33297C3E8DC60);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x1600FD8CF72EBC12(float p0) /*0x1600FD8CF72EBC12*/ {
	uint64_t val;
	nativeInit(0x1600FD8CF72EBC12);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x1612C45F9E3E0D44() /*0x1612C45F9E3E0D44*/ {
	nativeInit(0x1612C45F9E3E0D44);
	nativeCall();
}
inline void GRAPHICS_SET_TRACKED_POINT_INFO(int point, float x, float y, float z, float radius) /*0x164ECBB3CF750CB0*/ {
	uint64_t val;
	nativeInit(0x164ECBB3CF750CB0);
	*(int*)(&val) = point;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_0x1670F8D05056F257(Any p0) /*0x1670F8D05056F257*/ {
	uint64_t val;
	nativeInit(0x1670F8D05056F257);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(bool enabled) /*0x175B6BFC15CDD0C5*/ {
	uint64_t val;
	nativeInit(0x175B6BFC15CDD0C5);
	*(bool*)(&val) = enabled;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_NIGHTVISION(bool toggle) /*0x18F621F7A5B1F85D*/ {
	uint64_t val;
	nativeInit(0x18F621F7A5B1F85D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x1A8E2C8B9CF4549C(Any* p0, Any* p1) /*0x1A8E2C8B9CF4549C*/ {
	uint64_t val;
	nativeInit(0x1A8E2C8B9CF4549C);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_START_PARTICLE_FX_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis) /*0x1AE42C1660FD6517*/ {
	uint64_t val;
	nativeInit(0x1AE42C1660FD6517);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0x1BBC135A4D25EDDE(bool p0) /*0x1BBC135A4D25EDDE*/ {
	uint64_t val;
	nativeInit(0x1BBC135A4D25EDDE);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x1C4FC5752BCD8E48(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12) /*0x1C4FC5752BCD8E48*/ {
	uint64_t val;
	nativeInit(0x1C4FC5752BCD8E48);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	*(float*)(&val) = p12;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x1CBA05AE7BD7EE05(float p0) /*0x1CBA05AE7BD7EE05*/ {
	uint64_t val;
	nativeInit(0x1CBA05AE7BD7EE05);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__DRAW_SCALEFORM_MOVIE_3D_NON_ADDITIVE(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, Any p13) /*0x1CE592FDC749D6F5*/ {
	uint64_t val;
	nativeInit(0x1CE592FDC749D6F5);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = scaleX;
	nativePush(val);
	*(float*)(&val) = scaleY;
	nativePush(val);
	*(float*)(&val) = scaleZ;
	nativePush(val);
	*(Any*)(&val) = p13;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle) /*0x1D132D614DD86811*/ {
	uint64_t val;
	nativeInit(0x1D132D614DD86811);
	*(int**)(&val) = scaleformHandle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_ENTITY_ICON_COLOR(Entity entity, int red, int green, int blue, int alpha) /*0x1D5F595CCAE2E238*/ {
	uint64_t val;
	nativeInit(0x1D5F595CCAE2E238);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0x1DD2139A9A20DCE8() /*0x1DD2139A9A20DCE8*/ {
	nativeInit(0x1DD2139A9A20DCE8); return *(bool*)(nativeCall());
}
inline float GRAPHICS_GET_TV_VOLUME() /*0x2170813D3DD8661B*/ {
	nativeInit(0x2170813D3DD8661B); return *(float*)(nativeCall());
}
inline void GRAPHICS_0x2201C576FACAEBE8(Any p0, const char* p1, Any p2) /*0x2201C576FACAEBE8*/ {
	uint64_t val;
	nativeInit(0x2201C576FACAEBE8);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__IS_NIGHTVISION_ACTIVE() /*0x2202A3F42C8E5F79*/ {
	nativeInit(0x2202A3F42C8E5F79); return *(bool*)(nativeCall());
}
inline void GRAPHICS_ANIMPOSTFX_PLAY(const char* effectName, int duration, bool looped) /*0x2206BF9A37B7F724*/ {
	uint64_t val;
	nativeInit(0x2206BF9A37B7F724);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = looped;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x22A249A53034450A(bool p0) /*0x22A249A53034450A*/ {
	uint64_t val;
	nativeInit(0x22A249A53034450A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x23BA6B0C2AD7B0D3(bool toggle) /*0x23BA6B0C2AD7B0D3*/ {
	uint64_t val;
	nativeInit(0x23BA6B0C2AD7B0D3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x2485D34E50A22E84(float p0, float p1, float p2) /*0x2485D34E50A22E84*/ {
	uint64_t val;
	nativeInit(0x2485D34E50A22E84);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_START_PARTICLE_FX_NON_LOOPED_AT_COORD(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis) /*0x25129531F77B9ED3*/ {
	uint64_t val;
	nativeInit(0x25129531F77B9ED3);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0x25FC3E33A31AD0C9(bool p0) /*0x25FC3E33A31AD0C9*/ {
	uint64_t val;
	nativeInit(0x25FC3E33A31AD0C9);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_NON_LOOPED_COLOUR(float r, float g, float b) /*0x26143A59EF48B262*/ {
	uint64_t val;
	nativeInit(0x26143A59EF48B262);
	*(float*)(&val) = r;
	nativePush(val);
	*(float*)(&val) = g;
	nativePush(val);
	*(float*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_CHECKPOINT_CYLINDER_HEIGHT(int checkpoint, float nearHeight, float farHeight, float radius) /*0x2707AAE9D9297D89*/ {
	uint64_t val;
	nativeInit(0x2707AAE9D9297D89);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	*(float*)(&val) = nearHeight;
	nativePush(val);
	*(float*)(&val) = farHeight;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x27CB772218215325() /*0x27CB772218215325*/ {
	nativeInit(0x27CB772218215325);
	nativeCall();
}
inline void GRAPHICS_0x27CFB1B1E078CB2D() /*0x27CFB1B1E078CB2D*/ {
	nativeInit(0x27CFB1B1E078CB2D);
	nativeCall();
}
inline void GRAPHICS_0x27E32866E9A5C416(float p0) /*0x27E32866E9A5C416*/ {
	uint64_t val;
	nativeInit(0x27E32866E9A5C416);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0x27FEB5254759CDE3(const char* textureDict, bool p1) /*0x27FEB5254759CDE3*/ {
	uint64_t val;
	nativeInit(0x27FEB5254759CDE3);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_DRAW_MARKER(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, bool bobUpAndDown, bool faceCamera, int p19, bool rotate, const char* textureDict, const char* textureName, bool drawOnEnts) /*0x28477EC23D892089*/ {
	uint64_t val;
	nativeInit(0x28477EC23D892089);
	*(int*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = dirX;
	nativePush(val);
	*(float*)(&val) = dirY;
	nativePush(val);
	*(float*)(&val) = dirZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = scaleX;
	nativePush(val);
	*(float*)(&val) = scaleY;
	nativePush(val);
	*(float*)(&val) = scaleZ;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	*(bool*)(&val) = bobUpAndDown;
	nativePush(val);
	*(bool*)(&val) = faceCamera;
	nativePush(val);
	*(int*)(&val) = p19;
	nativePush(val);
	*(bool*)(&val) = rotate;
	nativePush(val);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(const char**)(&val) = textureName;
	nativePush(val);
	*(bool*)(&val) = drawOnEnts;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_TV_VOLUME(float volume) /*0x2982BF73F66E9DDC*/ {
	uint64_t val;
	nativeInit(0x2982BF73F66E9DDC);
	*(float*)(&val) = volume;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x2A2A52824DB96700(Any* p0) /*0x2A2A52824DB96700*/ {
	uint64_t val;
	nativeInit(0x2A2A52824DB96700);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0x2A893980E96B659A(bool p0) /*0x2A893980E96B659A*/ {
	uint64_t val;
	nativeInit(0x2A893980E96B659A);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x2BF72AD5B41AA739() /*0x2BF72AD5B41AA739*/ {
	nativeInit(0x2BF72AD5B41AA739);
	nativeCall();
}
inline void GRAPHICS_0x2C328AF17210F009(float p0) /*0x2C328AF17210F009*/ {
	uint64_t val;
	nativeInit(0x2C328AF17210F009);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0x2C42340F916C5930(Any p0) /*0x2C42340F916C5930*/ {
	uint64_t val;
	nativeInit(0x2C42340F916C5930);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_SET_TIMECYCLE_MODIFIER(const char* modifierName) /*0x2C933ABF17A1DF41*/ {
	uint64_t val;
	nativeInit(0x2C933ABF17A1DF41);
	*(const char**)(&val) = modifierName;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS__GET_SCALEFORM_MOVIE_FUNCTION_RETURN_INT(int method_return) /*0x2DE7EFA66B906036*/ {
	uint64_t val;
	nativeInit(0x2DE7EFA66B906036);
	*(int*)(&val) = method_return;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool GRAPHICS_0x2F09F7976C512404(float xCoord, float yCoord, float zCoord, float p3) /*0x2F09F7976C512404*/ {
	uint64_t val;
	nativeInit(0x2F09F7976C512404);
	*(float*)(&val) = xCoord;
	nativePush(val);
	*(float*)(&val) = yCoord;
	nativePush(val);
	*(float*)(&val) = zCoord;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x302C91AB2D477F7E() /*0x302C91AB2D477F7E*/ {
	nativeInit(0x302C91AB2D477F7E);
	nativeCall();
}
inline bool GRAPHICS_GET_IS_WIDESCREEN() /*0x30CF4BDA4FCB1905*/ {
	nativeInit(0x30CF4BDA4FCB1905); return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x312342E1A4874F3F(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, bool p8) /*0x312342E1A4874F3F*/ {
	uint64_t val;
	nativeInit(0x312342E1A4874F3F);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline float GRAPHICS_GET_DECAL_WASH_LEVEL(int decal) /*0x323F647679A09103*/ {
	uint64_t val;
	nativeInit(0x323F647679A09103);
	*(int*)(&val) = decal;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void GRAPHICS_0x346EF3ECAAAB149E() /*0x346EF3ECAAAB149E*/ {
	nativeInit(0x346EF3ECAAAB149E);
	nativeCall();
}
inline int GRAPHICS_GET_MAXIMUM_NUMBER_OF_PHOTOS() /*0x34D23450F028B0BF*/ {
	nativeInit(0x34D23450F028B0BF); return *(int*)(nativeCall());
}
inline bool GRAPHICS_GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY) /*0x34E82F05DF2974F5*/ {
	uint64_t val;
	nativeInit(0x34E82F05DF2974F5);
	*(float*)(&val) = worldX;
	nativePush(val);
	*(float*)(&val) = worldY;
	nativePush(val);
	*(float*)(&val) = worldZ;
	nativePush(val);
	*(float**)(&val) = screenX;
	nativePush(val);
	*(float**)(&val) = screenY;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 GRAPHICS_GET_TEXTURE_RESOLUTION(const char* textureDict, const char* textureName) /*0x35736EE65BD00C11*/ {
	uint64_t val;
	nativeInit(0x35736EE65BD00C11);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(const char**)(&val) = textureName;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Any GRAPHICS_0x35FB78DC42B7BD21() /*0x35FB78DC42B7BD21*/ {
	nativeInit(0x35FB78DC42B7BD21); return *(Any*)(nativeCall());
}
inline void GRAPHICS_END_TEXT_COMMAND_SCALEFORM_STRING() /*0x362E2D3FE93A9959*/ {
	nativeInit(0x362E2D3FE93A9959);
	nativeCall();
}
inline void GRAPHICS_0x3669F1B198DCAA4F() /*0x3669F1B198DCAA4F*/ {
	nativeInit(0x3669F1B198DCAA4F);
	nativeCall();
}
inline bool GRAPHICS_ANIMPOSTFX_IS_RUNNING(const char* effectName) /*0x36AD3E690DA5ACEB*/ {
	uint64_t val;
	nativeInit(0x36AD3E690DA5ACEB);
	*(const char**)(&val) = effectName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x36F6626459D91457(float p0) /*0x36F6626459D91457*/ {
	uint64_t val;
	nativeInit(0x36F6626459D91457);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_TEXT(const char* text, float x, float y, float z, int red, int green, int blue, int alpha) /*0x3903E216620488E8*/ {
	uint64_t val;
	nativeInit(0x3903E216620488E8);
	*(const char**)(&val) = text;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_RECT(float x, float y, float width, float height, int r, int g, int b, int a) /*0x3A618A217E5154F0*/ {
	uint64_t val;
	nativeInit(0x3A618A217E5154F0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = width;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_TRANSITION_TIMECYCLE_MODIFIER(const char* modifierName, float transition) /*0x3BCF567485E1971C*/ {
	uint64_t val;
	nativeInit(0x3BCF567485E1971C);
	*(const char**)(&val) = modifierName;
	nativePush(val);
	*(float*)(&val) = transition;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_POP_TIMECYCLE_MODIFIER() /*0x3C8938D7D872211E*/ {
	nativeInit(0x3C8938D7D872211E);
	nativeCall();
}
inline bool GRAPHICS_0x3DEC726C25A11BAC(int p0) /*0x3DEC726C25A11BAC*/ {
	uint64_t val;
	nativeInit(0x3DEC726C25A11BAC);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GRAPHICS__RETURN_TWO(Any p0) /*0x40AFB081F8ADD4EE*/ {
	uint64_t val;
	nativeInit(0x40AFB081F8ADD4EE);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool GRAPHICS__ADD_CLAN_DECAL_TO_VEHICLE(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, int decalIndex, int alpha) /*0x428BDCB9DA58DA53*/ {
	uint64_t val;
	nativeInit(0x428BDCB9DA58DA53);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = x3;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = y3;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = z3;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(int*)(&val) = decalIndex;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GRAPHICS__IS_SEETHROUGH_ACTIVE() /*0x44B80ABAB9D80BD3*/ {
	nativeInit(0x44B80ABAB9D80BD3); return *(bool*)(nativeCall());
}
inline Any GRAPHICS_0x459FD2C8D0AB78BC() /*0x459FD2C8D0AB78BC*/ {
	nativeInit(0x459FD2C8D0AB78BC); return *(Any*)(nativeCall());
}
inline void GRAPHICS_0x46D1A61A21F566FC(float p0) /*0x46D1A61A21F566FC*/ {
	uint64_t val;
	nativeInit(0x46D1A61A21F566FC);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS__GET_NUMBER_OF_PHOTOS() /*0x473151EBC762C6DA*/ {
	nativeInit(0x473151EBC762C6DA); return *(int*)(nativeCall());
}
inline bool GRAPHICS_0x4862437A486F91B0(const char* p0, Any* p1, Any* p2, bool p3) /*0x4862437A486F91B0*/ {
	uint64_t val;
	nativeInit(0x4862437A486F91B0);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x4AF92ACD3141D96C() /*0x4AF92ACD3141D96C*/ {
	nativeInit(0x4AF92ACD3141D96C);
	nativeCall();
}
inline void GRAPHICS__SET_CHECKPOINT_ICON_HEIGHT(int checkpoint, float iconHeight) /*0x4B5B4DA5D79F1943*/ {
	uint64_t val;
	nativeInit(0x4B5B4DA5D79F1943);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	*(float*)(&val) = iconHeight;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x4B5CFC83122DF602() /*0x4B5CFC83122DF602*/ {
	nativeInit(0x4B5CFC83122DF602);
	nativeCall();
}
inline void GRAPHICS__SET_FORCE_VEHICLE_TRAILS(bool toggle) /*0x4CC7F0FEA5283FE0*/ {
	uint64_t val;
	nativeInit(0x4CC7F0FEA5283FE0);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_ADD_PETROL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) /*0x4F5212C7AD880DF8*/ {
	uint64_t val;
	nativeInit(0x4F5212C7AD880DF8);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = groundLvl;
	nativePush(val);
	*(float*)(&val) = width;
	nativePush(val);
	*(float*)(&val) = transparency;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_0x5096FD9CCB49056D(const char* p0) /*0x5096FD9CCB49056D*/ {
	uint64_t val;
	nativeInit(0x5096FD9CCB49056D);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__CALL_SCALEFORM_MOVIE_FUNCTION_STRING_PARAMS(int scaleform, const char* functionName, const char* param1, const char* param2, const char* param3, const char* param4, const char* param5) /*0x51BC1ED3CC44E8F7*/ {
	uint64_t val;
	nativeInit(0x51BC1ED3CC44E8F7);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(const char**)(&val) = functionName;
	nativePush(val);
	*(const char**)(&val) = param1;
	nativePush(val);
	*(const char**)(&val) = param2;
	nativePush(val);
	*(const char**)(&val) = param3;
	nativePush(val);
	*(const char**)(&val) = param4;
	nativePush(val);
	*(const char**)(&val) = param5;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_SCALEFORM_MOVIE(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int unk) /*0x54972ADAF0294A93*/ {
	uint64_t val;
	nativeInit(0x54972ADAF0294A93);
	*(int*)(&val) = scaleformHandle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = width;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x54E22EA2C1956A8D(float p0) /*0x54E22EA2C1956A8D*/ {
	uint64_t val;
	nativeInit(0x54E22EA2C1956A8D);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_PUSH_TIMECYCLE_MODIFIER() /*0x58F735290861E6B4*/ {
	nativeInit(0x58F735290861E6B4);
	nativeCall();
}
inline int GRAPHICS_0x5B0316762AFD4A64() /*0x5B0316762AFD4A64*/ {
	nativeInit(0x5B0316762AFD4A64); return *(int*)(nativeCall());
}
inline void GRAPHICS_WASH_DECALS_FROM_VEHICLE(Vehicle vehicle, float p1) /*0x5B712761429DBC14*/ {
	uint64_t val;
	nativeInit(0x5B712761429DBC14);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__DRAW_SPOT_LIGHT_WITH_SHADOW(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId) /*0x5BCA583A583194DB*/ {
	uint64_t val;
	nativeInit(0x5BCA583A583194DB);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = dirX;
	nativePush(val);
	*(float*)(&val) = dirY;
	nativePush(val);
	*(float*)(&val) = dirZ;
	nativePush(val);
	*(int*)(&val) = colorR;
	nativePush(val);
	*(int*)(&val) = colorG;
	nativePush(val);
	*(int*)(&val) = colorB;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(float*)(&val) = brightness;
	nativePush(val);
	*(float*)(&val) = roundness;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(float*)(&val) = falloff;
	nativePush(val);
	*(int*)(&val) = shadowId;
	nativePush(val);
	nativeCall();
}
inline float GRAPHICS_IS_PARTICLE_FX_DELAYED_BLINK() /*0x5CCABFFCA31DDE33*/ {
	nativeInit(0x5CCABFFCA31DDE33); return *(float*)(nativeCall());
}
inline void GRAPHICS_0x5CE62918F8D703C7(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) /*0x5CE62918F8D703C7*/ {
	uint64_t val;
	nativeInit(0x5CE62918F8D703C7);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	*(int*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_REMOVE_DECALS_IN_RANGE(float x, float y, float z, float range) /*0x5D6B2D4830A67C62*/ {
	uint64_t val;
	nativeInit(0x5D6B2D4830A67C62);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x5DEBD9C4DC995692() /*0x5DEBD9C4DC995692*/ {
	nativeInit(0x5DEBD9C4DC995692);
	nativeCall();
}
inline bool GRAPHICS_0x5E657EF1099EDD65(int p0) /*0x5E657EF1099EDD65*/ {
	uint64_t val;
	nativeInit(0x5E657EF1099EDD65);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x5E9DAF5A20F15908(float p0) /*0x5E9DAF5A20F15908*/ {
	uint64_t val;
	nativeInit(0x5E9DAF5A20F15908);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_EVOLUTION(int ptfxHandle, const char* propertyName, float amount, bool Id) /*0x5F0C4B5B1C393BE2*/ {
	uint64_t val;
	nativeInit(0x5F0C4B5B1C393BE2);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(const char**)(&val) = propertyName;
	nativePush(val);
	*(float*)(&val) = amount;
	nativePush(val);
	*(bool*)(&val) = Id;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x5F0F3F56635809EF(float p0) /*0x5F0F3F56635809EF*/ {
	uint64_t val;
	nativeInit(0x5F0F3F56635809EF);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_BLOOD_SCALE(bool p0) /*0x5F6DF3D92271E8A1*/ {
	uint64_t val;
	nativeInit(0x5F6DF3D92271E8A1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x615D3925E87A3B26(int checkpoint) /*0x615D3925E87A3B26*/ {
	uint64_t val;
	nativeInit(0x615D3925E87A3B26);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_SCRIPT_GFX_DRAW_ORDER(int layer) /*0x61BB1D9B3A95D802*/ {
	uint64_t val;
	nativeInit(0x61BB1D9B3A95D802);
	*(int*)(&val) = layer;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x61F95E5BB3E0A8C6(Any p0) /*0x61F95E5BB3E0A8C6*/ {
	uint64_t val;
	nativeInit(0x61F95E5BB3E0A8C6);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x649C97D52332341A(Any p0) /*0x649C97D52332341A*/ {
	uint64_t val;
	nativeInit(0x649C97D52332341A);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x6A12D88881435DCA() /*0x6A12D88881435DCA*/ {
	nativeInit(0x6A12D88881435DCA);
	nativeCall();
}
inline void GRAPHICS_DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) /*0x6B7256074AE34680*/ {
	uint64_t val;
	nativeInit(0x6B7256074AE34680);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_USE_PARTICLE_FX_ASSET(const char* name) /*0x6C38AF3693A69A91*/ {
	uint64_t val;
	nativeInit(0x6C38AF3693A69A91);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(int scaleform, bool toggle) /*0x6D8EB211944DCE08*/ {
	uint64_t val;
	nativeInit(0x6D8EB211944DCE08);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x6D955F6A9E0295B1(float x, float y, float z, float p3, float p4, float p5, float p6) /*0x6D955F6A9E0295B1*/ {
	uint64_t val;
	nativeInit(0x6D955F6A9E0295B1);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x6DD8F5AA635EB4B2(float p0, float p1, float* p2, float* p3) /*0x6DD8F5AA635EB4B2*/ {
	uint64_t val;
	nativeInit(0x6DD8F5AA635EB4B2);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float**)(&val) = p2;
	nativePush(val);
	*(float**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x6DDBF9DFFC4AC080(bool p0) /*0x6DDBF9DFFC4AC080*/ {
	uint64_t val;
	nativeInit(0x6DDBF9DFFC4AC080);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis) /*0x6F60E89A7B64EE1D*/ {
	uint64_t val;
	nativeInit(0x6F60E89A7B64EE1D);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_SET_CHECKPOINT_RGBA(int checkpoint, int red, int green, int blue, int alpha) /*0x7167371E8AD747F7*/ {
	uint64_t val;
	nativeInit(0x7167371E8AD747F7);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_ALPHA(int ptfxHandle, float alpha) /*0x726845132380142E*/ {
	uint64_t val;
	nativeInit(0x726845132380142E);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(float*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_CROSS(float x, float y, float z, float size, int red, int green, int blue, int alpha) /*0x73B1189623049839*/ {
	uint64_t val;
	nativeInit(0x73B1189623049839);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = size;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_DOES_PARTICLE_FX_LOOPED_EXIST(int ptfxHandle) /*0x74AFEF0D2E1E409B*/ {
	uint64_t val;
	nativeInit(0x74AFEF0D2E1E409B);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x74C180030FDE4B69(bool p0) /*0x74C180030FDE4B69*/ {
	uint64_t val;
	nativeInit(0x74C180030FDE4B69);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0x759650634F07B6B4(int p0) /*0x759650634F07B6B4*/ {
	uint64_t val;
	nativeInit(0x759650634F07B6B4);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GRAPHICS__GET_SCALEFORM_MOVIE_FUNCTION_RETURN_bool(int method_return) /*0x768FF8961BA904D6*/ {
	uint64_t val;
	nativeInit(0x768FF8961BA904D6);
	*(int*)(&val) = method_return;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha) /*0x77168D722C58B2FC*/ {
	uint64_t val;
	nativeInit(0x77168D722C58B2FC);
	*(float*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x7A42B2E236E71415() /*0x7A42B2E236E71415*/ {
	nativeInit(0x7A42B2E236E71415);
	nativeCall();
}
inline bool GRAPHICS_0x7AC24EAB6D74118D(bool p0) /*0x7AC24EAB6D74118D*/ {
	uint64_t val;
	nativeInit(0x7AC24EAB6D74118D);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any GRAPHICS_0x7B226C785A52A0A9() /*0x7B226C785A52A0A9*/ {
	nativeInit(0x7B226C785A52A0A9); return *(Any*)(nativeCall());
}
inline void GRAPHICS_SET_SEETHROUGH(bool toggle) /*0x7E08924259E08CE0*/ {
	uint64_t val;
	nativeInit(0x7E08924259E08CE0);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_COLOUR(int ptfxHandle, float r, float g, float b, bool p4) /*0x7F8F65877F88783B*/ {
	uint64_t val;
	nativeInit(0x7F8F65877F88783B);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(float*)(&val) = r;
	nativePush(val);
	*(float*)(&val) = g;
	nativePush(val);
	*(float*)(&val) = b;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0x7FA5D82B8F58EC06() /*0x7FA5D82B8F58EC06*/ {
	nativeInit(0x7FA5D82B8F58EC06); return *(bool*)(nativeCall());
}
inline void GRAPHICS_DRAW_DEBUG_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) /*0x7FDFADE676AA3CB0*/ {
	uint64_t val;
	nativeInit(0x7FDFADE676AA3CB0);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_BEGIN_TEXT_COMMAND_SCALEFORM_STRING(const char* componentType) /*0x80338406F3475E55*/ {
	uint64_t val;
	nativeInit(0x80338406F3475E55);
	*(const char**)(&val) = componentType;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__SET_FAR_SHADOWS_SUPPRESSED(bool toggle) /*0x80ECBC0C856D3B0B*/ {
	uint64_t val;
	nativeInit(0x80ECBC0C856D3B0B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(int scaleformHandle) /*0x8217150E1217EBFD*/ {
	uint64_t val;
	nativeInit(0x8217150E1217EBFD);
	*(int*)(&val) = scaleformHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_SET_TIMECYCLE_MODIFIER_STRENGTH(float strength) /*0x82E7FFCD5B2326B3*/ {
	uint64_t val;
	nativeInit(0x82E7FFCD5B2326B3);
	*(float*)(&val) = strength;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_ATTACH_TV_AUDIO_TO_ENTITY(Entity entity) /*0x845BAD77CC770633*/ {
	uint64_t val;
	nativeInit(0x845BAD77CC770633);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_MOVE_VEHICLE_DECALS(Vehicle vehicle1, Vehicle vehicle2) /*0x84C8D7C2D30D3280*/ {
	uint64_t val;
	nativeInit(0x84C8D7C2D30D3280);
	*(Vehicle*)(&val) = vehicle1;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle2;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_GET_IS_HIDEF() /*0x84ED31191CC5D2C9*/ {
	nativeInit(0x84ED31191CC5D2C9); return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x851CD923176EBA7C() /*0x851CD923176EBA7C*/ {
	nativeInit(0x851CD923176EBA7C);
	nativeCall();
}
inline bool GRAPHICS_HAS_SCALEFORM_MOVIE_LOADED(int scaleformHandle) /*0x85F01B8D5B90570E*/ {
	uint64_t val;
	nativeInit(0x85F01B8D5B90570E);
	*(int*)(&val) = scaleformHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS__GET_ACTIVE_SCREEN_RESOLUTION(int* x, int* y) /*0x873C9F3104101DD3*/ {
	uint64_t val;
	nativeInit(0x873C9F3104101DD3);
	*(int**)(&val) = x;
	nativePush(val);
	*(int**)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_ENABLE_MOVIE_SUBTITLES(bool toggle) /*0x873FA65C778AD970*/ {
	uint64_t val;
	nativeInit(0x873FA65C778AD970);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_SCALEFORM_MOVIE_3D(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float sharpness, float p9, float scaleX, float scaleY, float scaleZ, Any p13) /*0x87D51D72255D4E78*/ {
	uint64_t val;
	nativeInit(0x87D51D72255D4E78);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = sharpness;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = scaleX;
	nativePush(val);
	*(float*)(&val) = scaleY;
	nativePush(val);
	*(float*)(&val) = scaleZ;
	nativePush(val);
	*(Any*)(&val) = p13;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_GET_SCREEN_RESOLUTION(int* x, int* y) /*0x888D57E407E63624*/ {
	uint64_t val;
	nativeInit(0x888D57E407E63624);
	*(int**)(&val) = x;
	nativePush(val);
	*(int**)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__RESET_PARTICLE_FX_ASSET_OLD_TO_NEW(const char* name) /*0x89C8553DD3274AAE*/ {
	uint64_t val;
	nativeInit(0x89C8553DD3274AAE);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__OVERRIDE_DECAL_TEXTURE(int decalType, const char* textureDict, const char* textureName) /*0x8A35C742130C6080*/ {
	uint64_t val;
	nativeInit(0x8A35C742130C6080);
	*(int*)(&val) = decalType;
	nativePush(val);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(const char**)(&val) = textureName;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x8CDE909A0370BB3A(bool p0) /*0x8CDE909A0370BB3A*/ {
	uint64_t val;
	nativeInit(0x8CDE909A0370BB3A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_STOP_PARTICLE_FX_LOOPED(int ptfxHandle, bool p1) /*0x8F75998877616996*/ {
	uint64_t val;
	nativeInit(0x8F75998877616996);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_0x90A78ECAA4E78453() /*0x90A78ECAA4E78453*/ {
	nativeInit(0x90A78ECAA4E78453); return *(int*)(nativeCall());
}
inline void GRAPHICS_0x92CCC17A7A2285DA() /*0x92CCC17A7A2285DA*/ {
	nativeInit(0x92CCC17A7A2285DA);
	nativeCall();
}
inline void GRAPHICS__REQUEST_HUD_SCALEFORM(int hudComponent) /*0x9304881D6F6537EA*/ {
	uint64_t val;
	nativeInit(0x9304881D6F6537EA);
	*(int*)(&val) = hudComponent;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x949F397A288B28B3(float p0) /*0x949F397A288B28B3*/ {
	uint64_t val;
	nativeInit(0x949F397A288B28B3);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x967278682CB6967A(Any p0, Any p1, Any p2, Any p3) /*0x967278682CB6967A*/ {
	uint64_t val;
	nativeInit(0x967278682CB6967A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_SHOOTOUT_BOAT(Any p0) /*0x96EF97DAEB89BEF5*/ {
	uint64_t val;
	nativeInit(0x96EF97DAEB89BEF5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__BEGIN_SCALEFORM_MOVIE_METHOD_HUD_COMPONENT(int hudComponent, const char* functionName) /*0x98C494FD5BDFBFD5*/ {
	uint64_t val;
	nativeInit(0x98C494FD5BDFBFD5);
	*(int*)(&val) = hudComponent;
	nativePush(val);
	*(const char**)(&val) = functionName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool GRAPHICS__DRAW_SHOWROOM(const char* p0, Ped ped, int p2, float posX, float posY, float posZ) /*0x98C4FE6EC34154CA*/ {
	uint64_t val;
	nativeInit(0x98C4FE6EC34154CA);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0x98EDF76A7271E4F2() /*0x98EDF76A7271E4F2*/ {
	nativeInit(0x98EDF76A7271E4F2);
	nativeCall();
}
inline void GRAPHICS_0x99AC7F0D8B9C893D(float p0) /*0x99AC7F0D8B9C893D*/ {
	uint64_t val;
	nativeInit(0x99AC7F0D8B9C893D);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0x9B079E5221D984D3(bool p0) /*0x9B079E5221D984D3*/ {
	uint64_t val;
	nativeInit(0x9B079E5221D984D3);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0x9B6E70C5CEEF4EEB(Any p0) /*0x9B6E70C5CEEF4EEB*/ {
	uint64_t val;
	nativeInit(0x9B6E70C5CEEF4EEB);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_WASH_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x9C30613D50A6ADEF*/ {
	uint64_t val;
	nativeInit(0x9C30613D50A6ADEF);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_ADD_ENTITY_ICON(Entity entity, const char* icon) /*0x9CD43EEE12BF4DD0*/ {
	uint64_t val;
	nativeInit(0x9CD43EEE12BF4DD0);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(const char**)(&val) = icon;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_0x9CFDD90B2B844BF7(float p0, float p1, float p2, float p3, float p4) /*0x9CFDD90B2B844BF7*/ {
	uint64_t val;
	nativeInit(0x9CFDD90B2B844BF7);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_ENABLE_ALIEN_BLOOD_VFX(bool Toggle) /*0x9DCE1F0F78260875*/ {
	uint64_t val;
	nativeInit(0x9DCE1F0F78260875);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__TRANSITION_TO_BLURRED(float transitionTime) /*0xA328A24AAA6B7FDC*/ {
	uint64_t val;
	nativeInit(0xA328A24AAA6B7FDC);
	*(float*)(&val) = transitionTime;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xA356990E161C9E65(bool p0) /*0xA356990E161C9E65*/ {
	uint64_t val;
	nativeInit(0xA356990E161C9E65);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_TEXT_2D(const char* text, float x, float y, float z, int red, int green, int blue, int alpha) /*0xA3BB2E9555C05A8F*/ {
	uint64_t val;
	nativeInit(0xA3BB2E9555C05A8F);
	*(const char**)(&val) = text;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, bool axisX, bool axisY, bool axisZ) /*0xA41B6A43642AC2CF*/ {
	uint64_t val;
	nativeInit(0xA41B6A43642AC2CF);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = axisX;
	nativePush(val);
	*(bool*)(&val) = axisY;
	nativePush(val);
	*(bool*)(&val) = axisZ;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xA44FF770DFBC5DAE() /*0xA44FF770DFBC5DAE*/ {
	nativeInit(0xA44FF770DFBC5DAE);
	nativeCall();
}
inline int GRAPHICS_0xA4664972A9B8F8BA(Any p0) /*0xA4664972A9B8F8BA*/ {
	uint64_t val;
	nativeInit(0xA4664972A9B8F8BA);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0xA46B73FAA3460AE1(bool p0) /*0xA46B73FAA3460AE1*/ {
	uint64_t val;
	nativeInit(0xA46B73FAA3460AE1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xA4819F5E23E2FFAD() /*0xA4819F5E23E2FFAD*/ {
	nativeInit(0xA4819F5E23E2FFAD); return *(Any*)(nativeCall());
}
inline void GRAPHICS_0xA51C4B86B71652AE(bool p0) /*0xA51C4B86B71652AE*/ {
	uint64_t val;
	nativeInit(0xA51C4B86B71652AE);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0xA67C35C56EB1BD9D() /*0xA67C35C56EB1BD9D*/ {
	nativeInit(0xA67C35C56EB1BD9D); return *(bool*)(nativeCall());
}
inline void GRAPHICS_REMOVE_DECALS_FROM_OBJECT_FACING(Object obj, float x, float y, float z) /*0xA6F6F70FDC6D144C*/ {
	uint64_t val;
	nativeInit(0xA6F6F70FDC6D144C);
	*(Object*)(&val) = obj;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_DRAW_ORIGIN(float x, float y, float z, Any p3) /*0xAA0008F3BBB8F416*/ {
	uint64_t val;
	nativeInit(0xAA0008F3BBB8F416);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, int alpha) /*0xAAD68E1AB39DA632*/ {
	uint64_t val;
	nativeInit(0xAAD68E1AB39DA632);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__BEGIN_SCALEFORM_MOVIE_METHOD_N(const char* functionName) /*0xAB58C27C2E6123C6*/ {
	uint64_t val;
	nativeInit(0xAB58C27C2E6123C6);
	*(const char**)(&val) = functionName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_DRAW_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha) /*0xAC26716048436851*/ {
	uint64_t val;
	nativeInit(0xAC26716048436851);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = x3;
	nativePush(val);
	*(float*)(&val) = y3;
	nativePush(val);
	*(float*)(&val) = z3;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(Any p0, bool p1) /*0xACEE6F360FC1F6B6*/ {
	uint64_t val;
	nativeInit(0xACEE6F360FC1F6B6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__END_TEXT_COMMAND_SCALEFORM_STRING_2() /*0xAE4E8157D9ECF087*/ {
	nativeInit(0xAE4E8157D9ECF087);
	nativeCall();
}
inline void GRAPHICS_0xAE51BC858F32BA66(Any p0, float p1, float p2, float p3, float p4) /*0xAE51BC858F32BA66*/ {
	uint64_t val;
	nativeInit(0xAE51BC858F32BA66);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__SET_FORCE_PED_FOOTSTEPS_TRACKS(bool toggle) /*0xAEEDAD1420C65CC0*/ {
	uint64_t val;
	nativeInit(0xAEEDAD1420C65CC0);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xB11D94BC55F41932(const char* p0) /*0xB11D94BC55F41932*/ {
	uint64_t val;
	nativeInit(0xB11D94BC55F41932);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xB1BB03742917A5D6(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha) /*0xB1BB03742917A5D6*/ {
	uint64_t val;
	nativeInit(0xB1BB03742917A5D6);
	*(int*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DESTROY_TRACKED_POINT(int point) /*0xB25DC90BAD56CA42*/ {
	uint64_t val;
	nativeInit(0xB25DC90BAD56CA42);
	*(int*)(&val) = point;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xB2EBE8CBC58B90E9() /*0xB2EBE8CBC58B90E9*/ {
	nativeInit(0xB2EBE8CBC58B90E9); return *(Any*)(nativeCall());
}
inline Object GRAPHICS_ADD_DECAL(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, bool p17, bool p18, bool p19) /*0xB302244A1839BDAD*/ {
	uint64_t val;
	nativeInit(0xB302244A1839BDAD);
	*(int*)(&val) = decalType;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = width;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	*(float*)(&val) = rCoef;
	nativePush(val);
	*(float*)(&val) = gCoef;
	nativePush(val);
	*(float*)(&val) = bCoef;
	nativePush(val);
	*(float*)(&val) = opacity;
	nativePush(val);
	*(float*)(&val) = timeout;
	nativePush(val);
	*(bool*)(&val) = p17;
	nativePush(val);
	*(bool*)(&val) = p18;
	nativePush(val);
	*(bool*)(&val) = p19;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline void GRAPHICS_0xB3C641F3630BF6DA(float p0) /*0xB3C641F3630BF6DA*/ {
	uint64_t val;
	nativeInit(0xB3C641F3630BF6DA);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_SCALE(int ptfxHandle, float scale) /*0xB44250AAA456492D*/ {
	uint64_t val;
	nativeInit(0xB44250AAA456492D);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_ANIMPOSTFX_STOP_ALL() /*0xB4EDDC19532BFB85*/ {
	nativeInit(0xB4EDDC19532BFB85);
	nativeCall();
}
inline int GRAPHICS_LOAD_MOVIE_MESH_SET(const char* movieMeshSetName) /*0xB66064452270E8F1*/ {
	uint64_t val;
	nativeInit(0xB66064452270E8F1);
	*(const char**)(&val) = movieMeshSetName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0xB7ED70C49521A61D(int decalType) /*0xB7ED70C49521A61D*/ {
	uint64_t val;
	nativeInit(0xB7ED70C49521A61D);
	*(int*)(&val) = decalType;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_SCRIPT_GFX_ALIGN(int x, int y) /*0xB8A850F20A067EB6*/ {
	uint64_t val;
	nativeInit(0xB8A850F20A067EB6);
	*(int*)(&val) = x;
	nativePush(val);
	*(int*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_REMOVE_PARTICLE_FX_FROM_ENTITY(Entity entity) /*0xB8FEAEEBCC127425*/ {
	uint64_t val;
	nativeInit(0xB8FEAEEBCC127425);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__BEGIN_SCALEFORM_MOVIE_METHOD_V(const char* functionName) /*0xB9449845F73F5E9C*/ {
	uint64_t val;
	nativeInit(0xB9449845F73F5E9C);
	*(const char**)(&val) = functionName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS__SET_CHECKPOINT_ICON_RGBA(int checkpoint, int red, int green, int blue, int alpha) /*0xB9EA40907C680580*/ {
	uint64_t val;
	nativeInit(0xB9EA40907C680580);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xBA3D65906822BED5(bool p0, bool p1, float p2, float p3, float p4, float p5) /*0xBA3D65906822BED5*/ {
	uint64_t val;
	nativeInit(0xBA3D65906822BED5);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_STRING(const char* value) /*0xBA7148484BD90365*/ {
	uint64_t val;
	nativeInit(0xBA7148484BD90365);
	*(const char**)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_TV_CHANNEL(int channel) /*0xBAABBB23EB6E484E*/ {
	uint64_t val;
	nativeInit(0xBAABBB23EB6E484E);
	*(int*)(&val) = channel;
	nativePush(val);
	nativeCall();
}
inline float GRAPHICS_GET_SAFE_ZONE_SIZE() /*0xBAF107B6BB2C97F0*/ {
	nativeInit(0xBAF107B6BB2C97F0); return *(float*)(nativeCall());
}
inline Any GRAPHICS_0xBB0527EC6341496D() /*0xBB0527EC6341496D*/ {
	nativeInit(0xBB0527EC6341496D); return *(Any*)(nativeCall());
}
inline void GRAPHICS_0xBB90E12CAC1DAB25(float p0) /*0xBB90E12CAC1DAB25*/ {
	uint64_t val;
	nativeInit(0xBB90E12CAC1DAB25);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xBBF327DED94E4DEB(const char* p0) /*0xBBF327DED94E4DEB*/ {
	uint64_t val;
	nativeInit(0xBBF327DED94E4DEB);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xBCEDB009461DA156() /*0xBCEDB009461DA156*/ {
	nativeInit(0xBCEDB009461DA156); return *(Any*)(nativeCall());
}
inline int GRAPHICS__REQUEST_SCALEFORM_MOVIE_INTERACTIVE(const char* scaleformName) /*0xBD06C611BB9048C2*/ {
	uint64_t val;
	nativeInit(0xBD06C611BB9048C2);
	*(const char**)(&val) = scaleformName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0xBDEB86F4D5809204(float p0) /*0xBDEB86F4D5809204*/ {
	uint64_t val;
	nativeInit(0xBDEB86F4D5809204);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xBE197EAA669238F4(Any p0, Any p1, Any p2, Any p3) /*0xBE197EAA669238F4*/ {
	uint64_t val;
	nativeInit(0xBE197EAA669238F4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(const char* textureDict) /*0xBE2CACCF5A8AA805*/ {
	uint64_t val;
	nativeInit(0xBE2CACCF5A8AA805);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xBEB3D46BB7F043C0(Any p0) /*0xBEB3D46BB7F043C0*/ {
	uint64_t val;
	nativeInit(0xBEB3D46BB7F043C0);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xBF59707B3E5ED531(const char* p0) /*0xBF59707B3E5ED531*/ {
	uint64_t val;
	nativeInit(0xBF59707B3E5ED531);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xC0416B061F2B7E5E(bool p0) /*0xC0416B061F2B7E5E*/ {
	uint64_t val;
	nativeInit(0xC0416B061F2B7E5E);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xC35A6D07C93802B2() /*0xC35A6D07C93802B2*/ {
	nativeInit(0xC35A6D07C93802B2);
	nativeCall();
}
inline void GRAPHICS__ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_INT(int value) /*0xC3D0841A0CC546A6*/ {
	uint64_t val;
	nativeInit(0xC3D0841A0CC546A6);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_REMOVE_PARTICLE_FX(int ptfxHandle, bool p1) /*0xC401503DFE8D53CF*/ {
	uint64_t val;
	nativeInit(0xC401503DFE8D53CF);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_IS_TRACKED_POINT_VISIBLE(int point) /*0xC45CCDAAC9221CA8*/ {
	uint64_t val;
	nativeInit(0xC45CCDAAC9221CA8);
	*(int*)(&val) = point;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GRAPHICS__END_SCALEFORM_MOVIE_METHOD_RETURN() /*0xC50AA39A577AF886*/ {
	nativeInit(0xC50AA39A577AF886); return *(int*)(nativeCall());
}
inline int GRAPHICS_REQUEST_SCALEFORM_MOVIE_INSTANCE(const char* scaleformName) /*0xC514489CFB8AF806*/ {
	uint64_t val;
	nativeInit(0xC514489CFB8AF806);
	*(const char**)(&val) = scaleformName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS__ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_bool(bool value) /*0xC58424BA936EB458*/ {
	uint64_t val;
	nativeInit(0xC58424BA936EB458);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(bool p0) /*0xC6372ECD45D73BCD*/ {
	uint64_t val;
	nativeInit(0xC6372ECD45D73BCD);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_END_SCALEFORM_MOVIE_METHOD() /*0xC6796A8FFA375E53*/ {
	nativeInit(0xC6796A8FFA375E53);
	nativeCall();
}
inline bool GRAPHICS_IS_DECAL_ALIVE(Object decal) /*0xC694D74949CAFD0C*/ {
	uint64_t val;
	nativeInit(0xC694D74949CAFD0C);
	*(Object*)(&val) = decal;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GRAPHICS__START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis) /*0xC6EB449E33977F0B*/ {
	uint64_t val;
	nativeInit(0xC6EB449E33977F0B);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool GRAPHICS__START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(const char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, bool axisX, bool axisY, bool axisZ) /*0xC95EB1DB6E92113D*/ {
	uint64_t val;
	nativeInit(0xC95EB1DB6E92113D);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = axisX;
	nativePush(val);
	*(bool*)(&val) = axisY;
	nativePush(val);
	*(bool*)(&val) = axisZ;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xC9B18B4619F48F7B(float p0) /*0xC9B18B4619F48F7B*/ {
	uint64_t val;
	nativeInit(0xC9B18B4619F48F7B);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DISABLE_VEHICLE_DISTANTLIGHTS(bool toggle) /*0xC9F98AC1884E73A2*/ {
	uint64_t val;
	nativeInit(0xC9F98AC1884E73A2);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xCA4AE345A153D573(bool p0) /*0xCA4AE345A153D573*/ {
	uint64_t val;
	nativeInit(0xCA4AE345A153D573);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_NOISINESSOVERIDE(float value) /*0xCB6A7C3BB17A0C67*/ {
	uint64_t val;
	nativeInit(0xCB6A7C3BB17A0C67);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_0xCB82A0BF0E3E3265(int p0) /*0xCB82A0BF0E3E3265*/ {
	uint64_t val;
	nativeInit(0xCB82A0BF0E3E3265);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_REMOVE_DECALS_FROM_OBJECT(Object obj) /*0xCCF71CBDDF5B6CB9*/ {
	uint64_t val;
	nativeInit(0xCCF71CBDDF5B6CB9);
	*(Object*)(&val) = obj;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(int scaleform1, int scaleform2, int red, int green, int blue, int alpha) /*0xCF537FDE4FBD4CE5*/ {
	uint64_t val;
	nativeInit(0xCF537FDE4FBD4CE5);
	*(int*)(&val) = scaleform1;
	nativePush(val);
	*(int*)(&val) = scaleform2;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__CALL_SCALEFORM_MOVIE_FUNCTION_FLOAT_PARAMS(int scaleform, const char* functionName, float param1, float param2, float param3, float param4, float param5) /*0xD0837058AE2E4BEE*/ {
	uint64_t val;
	nativeInit(0xD0837058AE2E4BEE);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(const char**)(&val) = functionName;
	nativePush(val);
	*(float*)(&val) = param1;
	nativePush(val);
	*(float*)(&val) = param2;
	nativePush(val);
	*(float*)(&val) = param3;
	nativePush(val);
	*(float*)(&val) = param4;
	nativePush(val);
	*(float*)(&val) = param5;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff) /*0xD0F64B265C8C8B33*/ {
	uint64_t val;
	nativeInit(0xD0F64B265C8C8B33);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = dirX;
	nativePush(val);
	*(float*)(&val) = dirY;
	nativePush(val);
	*(float*)(&val) = dirZ;
	nativePush(val);
	*(int*)(&val) = colorR;
	nativePush(val);
	*(int*)(&val) = colorG;
	nativePush(val);
	*(int*)(&val) = colorB;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(float*)(&val) = brightness;
	nativePush(val);
	*(float*)(&val) = hardness;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(float*)(&val) = falloff;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD1C55B110E4DF534(Any p0) /*0xD1C55B110E4DF534*/ {
	uint64_t val;
	nativeInit(0xD1C55B110E4DF534);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0xD1C7CB175E012964(int scaleformHandle) /*0xD1C7CB175E012964*/ {
	uint64_t val;
	nativeInit(0xD1C7CB175E012964);
	*(int*)(&val) = scaleformHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xD2209BE128B5418C(const char* graphicsName) /*0xD2209BE128B5418C*/ {
	uint64_t val;
	nativeInit(0xD2209BE128B5418C);
	*(const char**)(&val) = graphicsName;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD2300034310557E4(Vehicle vehicle, Any p1) /*0xD2300034310557E4*/ {
	uint64_t val;
	nativeInit(0xD2300034310557E4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD2936CAB8B58FCBD(int p0, bool p1, float x, float y, float z, float p5, bool p6, bool p7) /*0xD2936CAB8B58FCBD*/ {
	uint64_t val;
	nativeInit(0xD2936CAB8B58FCBD);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD39D13C9FEBF0511(bool p0) /*0xD39D13C9FEBF0511*/ {
	uint64_t val;
	nativeInit(0xD39D13C9FEBF0511);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0xD3A10FC7FD8D98CD() /*0xD3A10FC7FD8D98CD*/ {
	nativeInit(0xD3A10FC7FD8D98CD); return *(bool*)(nativeCall());
}
inline void GRAPHICS_DRAW_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) /*0xD3A9971CADAC7252*/ {
	uint64_t val;
	nativeInit(0xD3A9971CADAC7252);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_FLOAT(float value) /*0xD69736AAE04DB51A*/ {
	uint64_t val;
	nativeInit(0xD69736AAE04DB51A);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__PRESET_INTERIOR_AMBIENT_CACHE(const char* tcModifierName) /*0xD7021272EB0A451E*/ {
	uint64_t val;
	nativeInit(0xD7021272EB0A451E);
	*(const char**)(&val) = tcModifierName;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_FADE_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4) /*0xD77EDADB0420E6E0*/ {
	uint64_t val;
	nativeInit(0xD77EDADB0420E6E0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD7D0B00177485411(Any p0, float p1) /*0xD7D0B00177485411*/ {
	uint64_t val;
	nativeInit(0xD7D0B00177485411);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD801CC02177FA3F1() /*0xD801CC02177FA3F1*/ {
	nativeInit(0xD801CC02177FA3F1);
	nativeCall();
}
inline void GRAPHICS_ENABLE_CLOWN_BLOOD_VFX(bool toggle) /*0xD821490579791273*/ {
	uint64_t val;
	nativeInit(0xD821490579791273);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_DRAW_DEBUG_LINE_WITH_TWO_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2) /*0xD8B9A8AC5608FF94*/ {
	uint64_t val;
	nativeInit(0xD8B9A8AC5608FF94);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = r1;
	nativePush(val);
	*(int*)(&val) = g1;
	nativePush(val);
	*(int*)(&val) = b1;
	nativePush(val);
	*(int*)(&val) = r2;
	nativePush(val);
	*(int*)(&val) = g2;
	nativePush(val);
	*(int*)(&val) = b2;
	nativePush(val);
	*(int*)(&val) = alpha1;
	nativePush(val);
	*(int*)(&val) = alpha2;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xD9454B5752C857DC() /*0xD9454B5752C857DC*/ {
	nativeInit(0xD9454B5752C857DC);
	nativeCall();
}
inline void GRAPHICS_0xDBAA5EC848BA2D46(Any p0, Any p1) /*0xDBAA5EC848BA2D46*/ {
	uint64_t val;
	nativeInit(0xDBAA5EC848BA2D46);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_FORCE_RENDER_IN_GAME_UI(bool toggle) /*0xDC459CFA0CCE245B*/ {
	uint64_t val;
	nativeInit(0xDC459CFA0CCE245B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS__GET_MAXIMUM_NUMBER_OF_PHOTOS_2() /*0xDC54A7AF8B3A14EF*/ {
	nativeInit(0xDC54A7AF8B3A14EF);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(int ptfxHandle, float dist) /*0xDCB194B85EF7B541*/ {
	uint64_t val;
	nativeInit(0xDCB194B85EF7B541);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(float*)(&val) = dist;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_REMOVE_PARTICLE_FX_IN_RANGE(float X, float Y, float Z, float radius) /*0xDD19FA1C6D657305*/ {
	uint64_t val;
	nativeInit(0xDD19FA1C6D657305);
	*(float*)(&val) = X;
	nativePush(val);
	*(float*)(&val) = Y;
	nativePush(val);
	*(float*)(&val) = Z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS__START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(const char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis) /*0xDDE23F30CC5A0F03*/ {
	uint64_t val;
	nativeInit(0xDDE23F30CC5A0F03);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_DISABLE_SCREENBLUR_FADE() /*0xDE81239437E8C5A8*/ {
	nativeInit(0xDE81239437E8C5A8);
	nativeCall();
}
inline void GRAPHICS__ENTITY_DESCRIPTION_TEXT(Entity entity) /*0xDEADC0DEDEADC0DE*/ {
	uint64_t val;
	nativeInit(0xDEADC0DEDEADC0DE);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS__HAS_HUD_SCALEFORM_LOADED(int hudComponent) /*0xDF6E5987D2B4D140*/ {
	uint64_t val;
	nativeInit(0xDF6E5987D2B4D140);
	*(int*)(&val) = hudComponent;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_REQUEST_STREAMED_TEXTURE_DICT(const char* textureDict, bool unused) /*0xDFA2EF8E04127DD5*/ {
	uint64_t val;
	nativeInit(0xDFA2EF8E04127DD5);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__TOGGLE_PAUSE_RENDER_PHASES(bool toggle) /*0xDFC252D8A3E15AB7*/ {
	uint64_t val;
	nativeInit(0xDFC252D8A3E15AB7);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_ENTITY_ICON_VISIBILITY(Entity entity, bool toggle) /*0xE0E8BEECCA96BA31*/ {
	uint64_t val;
	nativeInit(0xE0E8BEECCA96BA31);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_START_PARTICLE_FX_LOOPED_AT_COORD(const char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis, bool p11) /*0xE184F4F0DC5910E7*/ {
	uint64_t val;
	nativeInit(0xE184F4F0DC5910E7);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_0xE1C8709406F2C41C() /*0xE1C8709406F2C41C*/ {
	nativeInit(0xE1C8709406F2C41C);
	nativeCall();
}
inline const char* GRAPHICS_SITTING_TV(int method_return) /*0xE1E258829A885245*/ {
	uint64_t val;
	nativeInit(0xE1E258829A885245);
	*(int*)(&val) = method_return;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void GRAPHICS_0xE2892E7E55D7073A(float p0) /*0xE2892E7E55D7073A*/ {
	uint64_t val;
	nativeInit(0xE2892E7E55D7073A);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_CREATE_TRACKED_POINT() /*0xE2C9439ED45DEA60*/ {
	nativeInit(0xE2C9439ED45DEA60); return *(int*)(nativeCall());
}
inline void GRAPHICS_RESET_SCRIPT_GFX_ALIGN() /*0xE3A3DB414A373DAB*/ {
	nativeInit(0xE3A3DB414A373DAB);
	nativeCall();
}
inline void GRAPHICS_0xE3E2C1B4C59DBC77(int unk) /*0xE3E2C1B4C59DBC77*/ {
	uint64_t val;
	nativeInit(0xE3E2C1B4C59DBC77);
	*(int*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xE59343E9E96529E7() /*0xE59343E9E96529E7*/ {
	nativeInit(0xE59343E9E96529E7); return *(Any*)(nativeCall());
}
inline void GRAPHICS_0xE63D7C6EECECB66B(bool p0) /*0xE63D7C6EECECB66B*/ {
	uint64_t val;
	nativeInit(0xE63D7C6EECECB66B);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_NOISEOVERIDE(bool toggle) /*0xE787BF1C5CF823C9*/ {
	uint64_t val;
	nativeInit(0xE787BF1C5CF823C9);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xE791DF1F73ED2C8B(Any p0) /*0xE791DF1F73ED2C8B*/ {
	uint64_t val;
	nativeInit(0xE791DF1F73ED2C8B);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_DRAW_SPRITE(const char* textureDict, const char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha) /*0xE7FFAE5EBF23D890*/ {
	uint64_t val;
	nativeInit(0xE7FFAE5EBF23D890);
	*(const char**)(&val) = textureDict;
	nativePush(val);
	*(const char**)(&val) = textureName;
	nativePush(val);
	*(float*)(&val) = screenX;
	nativePush(val);
	*(float*)(&val) = screenY;
	nativePush(val);
	*(float*)(&val) = width;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__ADD_SCALEFORM_MOVIE_METHOD_PARAMETER_BUTTON_NAME(const char* button) /*0xE83A3E3557A56640*/ {
	uint64_t val;
	nativeInit(0xE83A3E3557A56640);
	*(const char**)(&val) = button;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_REMOVE_DECALS_FROM_VEHICLE(Vehicle vehicle) /*0xE91F1B65F2B48D57*/ {
	uint64_t val;
	nativeInit(0xE91F1B65F2B48D57);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__SET_PARTICLE_FX_ASSET_OLD_TO_NEW(const char* oldAsset, const char* newAsset) /*0xEA1E2D93F6F75ED9*/ {
	uint64_t val;
	nativeInit(0xEA1E2D93F6F75ED9);
	*(const char**)(&val) = oldAsset;
	nativePush(val);
	*(const char**)(&val) = newAsset;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_RELEASE_MOVIE_MESH_SET(int movieMeshSet) /*0xEB119AA014E89183*/ {
	uint64_t val;
	nativeInit(0xEB119AA014E89183);
	*(int*)(&val) = movieMeshSet;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_0xEB3DAC2C86001E5E() /*0xEB3DAC2C86001E5E*/ {
	nativeInit(0xEB3DAC2C86001E5E); return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xEC52C631A1831C03(int p0) /*0xEC52C631A1831C03*/ {
	uint64_t val;
	nativeInit(0xEC52C631A1831C03);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any GRAPHICS_0xEC72C258667BE5EA(Any p0) /*0xEC72C258667BE5EA*/ {
	uint64_t val;
	nativeInit(0xEC72C258667BE5EA);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void GRAPHICS_REMOVE_DECAL(Object decal) /*0xED3F346429CCD659*/ {
	uint64_t val;
	nativeInit(0xED3F346429CCD659);
	*(Object*)(&val) = decal;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(bool p0) /*0xEEC4047028426510*/ {
	uint64_t val;
	nativeInit(0xEEC4047028426510);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xEF398BEEE4EF45F9(bool p0) /*0xEF398BEEE4EF45F9*/ {
	uint64_t val;
	nativeInit(0xEF398BEEE4EF45F9);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(int scaleform, const char* functionName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, const char* stringParam1, const char* stringParam2, const char* stringParam3, const char* stringParam4, const char* stringParam5) /*0xEF662D8D57E290B1*/ {
	uint64_t val;
	nativeInit(0xEF662D8D57E290B1);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(const char**)(&val) = functionName;
	nativePush(val);
	*(float*)(&val) = floatParam1;
	nativePush(val);
	*(float*)(&val) = floatParam2;
	nativePush(val);
	*(float*)(&val) = floatParam3;
	nativePush(val);
	*(float*)(&val) = floatParam4;
	nativePush(val);
	*(float*)(&val) = floatParam5;
	nativePush(val);
	*(const char**)(&val) = stringParam1;
	nativePush(val);
	*(const char**)(&val) = stringParam2;
	nativePush(val);
	*(const char**)(&val) = stringParam3;
	nativePush(val);
	*(const char**)(&val) = stringParam4;
	nativePush(val);
	*(const char**)(&val) = stringParam5;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xEFABC7722293DA7C() /*0xEFABC7722293DA7C*/ {
	nativeInit(0xEFABC7722293DA7C);
	nativeCall();
}
inline bool GRAPHICS__TRANSITION_FROM_BLURRED(float transitionTime) /*0xEFACC8AEF94430D5*/ {
	uint64_t val;
	nativeInit(0xEFACC8AEF94430D5);
	*(float*)(&val) = transitionTime;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xEFB55E7C25D3B3BE() /*0xEFB55E7C25D3B3BE*/ {
	nativeInit(0xEFB55E7C25D3B3BE);
	nativeCall();
}
inline float GRAPHICS__GET_ASPECT_RATIO(bool b) /*0xF1307EF624A80D87*/ {
	uint64_t val;
	nativeInit(0xF1307EF624A80D87);
	*(bool*)(&val) = b;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool GRAPHICS_0xF1CEA8A4198D8E9A(const char* p0) /*0xF1CEA8A4198D8E9A*/ {
	uint64_t val;
	nativeInit(0xF1CEA8A4198D8E9A);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int GRAPHICS_START_PARTICLE_FX_LOOPED_ON_PED_BONE(const char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, bool xAxis, bool yAxis, bool zAxis) /*0xF28DA9F38CD1787C*/ {
	uint64_t val;
	nativeInit(0xF28DA9F38CD1787C);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_DRAW_LIGHT_WITH_RANGE(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity) /*0xF2A1B2771A01DBD4*/ {
	uint64_t val;
	nativeInit(0xF2A1B2771A01DBD4);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(int*)(&val) = colorR;
	nativePush(val);
	*(int*)(&val) = colorG;
	nativePush(val);
	*(int*)(&val) = colorB;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	*(float*)(&val) = intensity;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xF44A5456AC3F4F97(Any p0) /*0xF44A5456AC3F4F97*/ {
	uint64_t val;
	nativeInit(0xF44A5456AC3F4F97);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS__DRAW_LIGHT_WITH_RANGE_AND_SHADOW(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow) /*0xF49E9A9716A04595*/ {
	uint64_t val;
	nativeInit(0xF49E9A9716A04595);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	*(float*)(&val) = intensity;
	nativePush(val);
	*(float*)(&val) = shadow;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_0xF51D36185993515D(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ) /*0xF51D36185993515D*/ {
	uint64_t val;
	nativeInit(0xF51D36185993515D);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = unkX;
	nativePush(val);
	*(float*)(&val) = unkY;
	nativePush(val);
	*(float*)(&val) = unkZ;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(const char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, bool xAxis, bool yAxis, bool zAxis) /*0xF56B8137DF10135D*/ {
	uint64_t val;
	nativeInit(0xF56B8137DF10135D);
	*(const char**)(&val) = effectName;
	nativePush(val);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(bool*)(&val) = xAxis;
	nativePush(val);
	*(bool*)(&val) = yAxis;
	nativePush(val);
	*(bool*)(&val) = zAxis;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS__SCREEN_DRAW_POSITION_RATIO(float x, float y, float p2, float p3) /*0xF5A2C681787E579D*/ {
	uint64_t val;
	nativeInit(0xF5A2C681787E579D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_0xF5BED327CEA362B1(bool p0) /*0xF5BED327CEA362B1*/ {
	uint64_t val;
	nativeInit(0xF5BED327CEA362B1);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_DELETE_CHECKPOINT(int checkpoint) /*0xF5ED37F54CD4D52E*/ {
	uint64_t val;
	nativeInit(0xF5ED37F54CD4D52E);
	*(int*)(&val) = checkpoint;
	nativePush(val);
	nativeCall();
}
inline bool GRAPHICS_BEGIN_SCALEFORM_MOVIE_METHOD(int scaleform, const char* functionName) /*0xF6E48914C7A8694E*/ {
	uint64_t val;
	nativeInit(0xF6E48914C7A8694E);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(const char**)(&val) = functionName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void GRAPHICS_0xF78B803082D4386F(float p0) /*0xF78B803082D4386F*/ {
	uint64_t val;
	nativeInit(0xF78B803082D4386F);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_TV_CHANNEL_PLAYLIST(int channel, const char* playlist, bool fromBeginning) /*0xF7B38B8305F1FE8B*/ {
	uint64_t val;
	nativeInit(0xF7B38B8305F1FE8B);
	*(int*)(&val) = channel;
	nativePush(val);
	*(const char**)(&val) = playlist;
	nativePush(val);
	*(bool*)(&val) = fromBeginning;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_SET_PARTICLE_FX_LOOPED_OFFSETS(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ) /*0xF7DDEBEC43483C43*/ {
	uint64_t val;
	nativeInit(0xF7DDEBEC43483C43);
	*(int*)(&val) = ptfxHandle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	nativeCall();
}
inline void GRAPHICS_CALL_SCALEFORM_MOVIE_METHOD(int scaleform, const char* method) /*0xFBD96D87AC96D533*/ {
	uint64_t val;
	nativeInit(0xFBD96D87AC96D533);
	*(int*)(&val) = scaleform;
	nativePush(val);
	*(const char**)(&val) = method;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_GET_TV_CHANNEL() /*0xFC1E275A90D39995*/ {
	nativeInit(0xFC1E275A90D39995); return *(int*)(nativeCall());
}
inline void GRAPHICS_DRAW_TV_CHANNEL(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha) /*0xFDDC2B4ED3C69DF0*/ {
	uint64_t val;
	nativeInit(0xFDDC2B4ED3C69DF0);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = xScale;
	nativePush(val);
	*(float*)(&val) = yScale;
	nativePush(val);
	*(float*)(&val) = rotation;
	nativePush(val);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline int GRAPHICS_GET_TIMECYCLE_MODIFIER_INDEX() /*0xFDF3D97C674AFB66*/ {
	nativeInit(0xFDF3D97C674AFB66); return *(int*)(nativeCall());
}
inline int GRAPHICS_0xFE26117A5841B2FF(Vehicle vehicle, Any p1) /*0xFE26117A5841B2FF*/ {
	uint64_t val;
	nativeInit(0xFE26117A5841B2FF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void GRAPHICS_CLEAR_DRAW_ORIGIN() /*0xFF0B610F6BE0D7AF*/ {
	nativeInit(0xFF0B610F6BE0D7AF);
	nativeCall();
}
inline int INTERIOR_GET_INTERIOR_AT_COORDS_WITH_TYPE(float x, float y, float z, const char* interiorType) /*0x05B7A89BD78797FC*/ {
	uint64_t val;
	nativeInit(0x05B7A89BD78797FC);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(const char**)(&val) = interiorType;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int INTERIOR_GET_INTERIOR_FROM_ENTITY(Entity entity) /*0x2107BA504071A6BB*/ {
	uint64_t val;
	nativeInit(0x2107BA504071A6BB);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void INTERIOR_0x23B59D8912F94246() /*0x23B59D8912F94246*/ {
	nativeInit(0x23B59D8912F94246);
	nativeCall();
}
inline void INTERIOR_UNPIN_INTERIOR(int interiorID) /*0x261CCE7EED010641*/ {
	uint64_t val;
	nativeInit(0x261CCE7EED010641);
	*(int*)(&val) = interiorID;
	nativePush(val);
	nativeCall();
}
inline bool INTERIOR_IS_VALID_INTERIOR(int interiorID) /*0x26B0E73D7EAAF4D3*/ {
	uint64_t val;
	nativeInit(0x26B0E73D7EAAF4D3);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void INTERIOR__LOAD_INTERIOR(int interiorID) /*0x2CA429C029CCF247*/ {
	uint64_t val;
	nativeInit(0x2CA429C029CCF247);
	*(int*)(&val) = interiorID;
	nativePush(val);
	nativeCall();
}
inline bool INTERIOR__IS_INTERIOR_PROP_ENABLED(int interiorID, const char* propName) /*0x35F7DD45E8C0A16D*/ {
	uint64_t val;
	nativeInit(0x35F7DD45E8C0A16D);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(const char**)(&val) = propName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash INTERIOR_GET_KEY_FOR_ENTITY_IN_ROOM(Entity entity) /*0x399685DB942336BC*/ {
	uint64_t val;
	nativeInit(0x399685DB942336BC);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void INTERIOR_ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(Pickup pickup, const char* roomName) /*0x3F6167F351168730*/ {
	uint64_t val;
	nativeInit(0x3F6167F351168730);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	*(const char**)(&val) = roomName;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR_0x405DC2AEF6AF95B9(Hash roomHashKey) /*0x405DC2AEF6AF95B9*/ {
	uint64_t val;
	nativeInit(0x405DC2AEF6AF95B9);
	*(Hash*)(&val) = roomHashKey;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR_REFRESH_INTERIOR(int interiorID) /*0x41F37C3427C75AE0*/ {
	uint64_t val;
	nativeInit(0x41F37C3427C75AE0);
	*(int*)(&val) = interiorID;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR__DISABLE_INTERIOR_PROP(int interiorID, const char* propName) /*0x420BD37289EEE162*/ {
	uint64_t val;
	nativeInit(0x420BD37289EEE162);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(const char**)(&val) = propName;
	nativePush(val);
	nativeCall();
}
inline Hash INTERIOR_GET_ROOM_KEY_FROM_ENTITY(Entity entity) /*0x47C2A06D4F5F424B*/ {
	uint64_t val;
	nativeInit(0x47C2A06D4F5F424B);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline Any INTERIOR_0x4C2330E61D3DEB56(int interiorID) /*0x4C2330E61D3DEB56*/ {
	uint64_t val;
	nativeInit(0x4C2330E61D3DEB56);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void INTERIOR_FORCE_ROOM_FOR_ENTITY(Entity entity, int interiorID, Hash roomHashKey) /*0x52923C4710DD9907*/ {
	uint64_t val;
	nativeInit(0x52923C4710DD9907);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(Hash*)(&val) = roomHashKey;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR__ENABLE_INTERIOR_PROP(int interiorID, const char* propName) /*0x55E86AF2712B36A1*/ {
	uint64_t val;
	nativeInit(0x55E86AF2712B36A1);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(const char**)(&val) = propName;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR_DISABLE_INTERIOR(int interiorID, bool toggle) /*0x6170941419D7D8EC*/ {
	uint64_t val;
	nativeInit(0x6170941419D7D8EC);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool INTERIOR_IS_INTERIOR_READY(int interiorID) /*0x6726BDCCC1932F0E*/ {
	uint64_t val;
	nativeInit(0x6726BDCCC1932F0E);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void INTERIOR_0x82EBB79E258FA2B7(Entity entity, int interiorID) /*0x82EBB79E258FA2B7*/ {
	uint64_t val;
	nativeInit(0x82EBB79E258FA2B7);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = interiorID;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR_0x920D853F3E17F1DA(int interiorID, Hash roomHashKey) /*0x920D853F3E17F1DA*/ {
	uint64_t val;
	nativeInit(0x920D853F3E17F1DA);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(Hash*)(&val) = roomHashKey;
	nativePush(val);
	nativeCall();
}
inline bool INTERIOR_IS_INTERIOR_CAPPED(int interiorID) /*0x92BAC8ACF88CEC26*/ {
	uint64_t val;
	nativeInit(0x92BAC8ACF88CEC26);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 INTERIOR_GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(int interiorID, float x, float y, float z) /*0x9E3B3E6D66F6E22F*/ {
	uint64_t val;
	nativeInit(0x9E3B3E6D66F6E22F);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void INTERIOR_0x9E6542F0CE8E70A3(bool toggle) /*0x9E6542F0CE8E70A3*/ {
	uint64_t val;
	nativeInit(0x9E6542F0CE8E70A3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Hash INTERIOR__GET_ROOM_KEY_FROM_GAMEPLAY_CAM() /*0xA6575914D2A0B450*/ {
	nativeInit(0xA6575914D2A0B450); return *(Hash*)(nativeCall());
}
inline void INTERIOR__HIDE_MAP_OBJECT_THIS_FRAME(Hash mapObjectHash) /*0xA97F257D0151A6AB*/ {
	uint64_t val;
	nativeInit(0xA97F257D0151A6AB);
	*(Hash*)(&val) = mapObjectHash;
	nativePush(val);
	nativeCall();
}
inline void INTERIOR_0xAF348AFCB575A441(const char* roomName) /*0xAF348AFCB575A441*/ {
	uint64_t val;
	nativeInit(0xAF348AFCB575A441);
	*(const char**)(&val) = roomName;
	nativePush(val);
	nativeCall();
}
inline int INTERIOR_GET_INTERIOR_AT_COORDS(float x, float y, float z) /*0xB0F7F8663821D9C3*/ {
	uint64_t val;
	nativeInit(0xB0F7F8663821D9C3);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void INTERIOR_CLEAR_ROOM_FOR_ENTITY(Entity entity) /*0xB365FC0C4E27FFA7*/ {
	uint64_t val;
	nativeInit(0xB365FC0C4E27FFA7);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool INTERIOR_IS_INTERIOR_DISABLED(int interiorID) /*0xBC5115A5A939DD15*/ {
	uint64_t val;
	nativeInit(0xBC5115A5A939DD15);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool INTERIOR_IS_INTERIOR_SCENE() /*0xBC72B5D7A1CBD54D*/ {
	nativeInit(0xBC72B5D7A1CBD54D); return *(bool*)(nativeCall());
}
inline void INTERIOR_CAP_INTERIOR(int interiorID, bool toggle) /*0xD9175F941610DB54*/ {
	uint64_t val;
	nativeInit(0xD9175F941610DB54);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int INTERIOR_GET_INTERIOR_GROUP_ID(int interiorID) /*0xE4A84ABF135EF91A*/ {
	uint64_t val;
	nativeInit(0xE4A84ABF135EF91A);
	*(int*)(&val) = interiorID;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int INTERIOR_GET_INTERIOR_FROM_COLLISION(float x, float y, float z) /*0xEC4CF9FCB29A4424*/ {
	uint64_t val;
	nativeInit(0xEC4CF9FCB29A4424);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool INTERIOR__ARE_COORDS_COLLIDING_WITH_EXTERIOR(float x, float y, float z) /*0xEEA5AC2EDA7C33E8*/ {
	uint64_t val;
	nativeInit(0xEEA5AC2EDA7C33E8);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int INTERIOR__UNK_GET_INTERIOR_AT_COORDS(float x, float y, float z, int unk) /*0xF0F77ADB9F67E79D*/ {
	uint64_t val;
	nativeInit(0xF0F77ADB9F67E79D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ITEMSET_REMOVE_FROM_ITEMSET(Any p0, Any p1) /*0x25E68244B0177686*/ {
	uint64_t val;
	nativeInit(0x25E68244B0177686);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool ITEMSET_IS_IN_ITEMSET(Any p0, Any p1) /*0x2D0FC594D1E9C107*/ {
	uint64_t val;
	nativeInit(0x2D0FC594D1E9C107);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle ITEMSET_CREATE_ITEMSET(Vehicle distri) /*0x35AD299F50D91B24*/ {
	uint64_t val;
	nativeInit(0x35AD299F50D91B24);
	*(Vehicle*)(&val) = distri;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void ITEMSET_CLEAN_ITEMSET(Any p0) /*0x41BC0D722FC04221*/ {
	uint64_t val;
	nativeInit(0x41BC0D722FC04221);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any ITEMSET_GET_INDEXED_ITEM_IN_ITEMSET(Any p0, Any p1) /*0x7A197E2521EE2BAB*/ {
	uint64_t val;
	nativeInit(0x7A197E2521EE2BAB);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool ITEMSET_IS_ITEMSET_VALID(Any p0) /*0xB1B1EA596344DFAB*/ {
	uint64_t val;
	nativeInit(0xB1B1EA596344DFAB);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any ITEMSET_GET_ITEMSET_SIZE(ScrHandle x) /*0xD9127E83ABF7C631*/ {
	uint64_t val;
	nativeInit(0xD9127E83ABF7C631);
	*(ScrHandle*)(&val) = x;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ITEMSET_DESTROY_ITEMSET(Any p0) /*0xDE18220B1C183EDA*/ {
	uint64_t val;
	nativeInit(0xDE18220B1C183EDA);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool ITEMSET_ADD_TO_ITEMSET(Any p0, Any p1) /*0xE3945201F14637DD*/ {
	uint64_t val;
	nativeInit(0xE3945201F14637DD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void MOBILE__DISABLE_PHONE_THIS_FRAME(bool toggle) /*0x015C49A93E3E086E*/ {
	uint64_t val;
	nativeInit(0x015C49A93E3E086E);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0x15E69E2802C24B8D(float p0) /*0x15E69E2802C24B8D*/ {
	uint64_t val;
	nativeInit(0x15E69E2802C24B8D);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0x1B0B4AEED5B9B41C(float p0) /*0x1B0B4AEED5B9B41C*/ {
	uint64_t val;
	nativeInit(0x1B0B4AEED5B9B41C);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_GET_MOBILE_PHONE_ROTATION(Vector3* rotation, Vehicle p1) /*0x1CEFB61F193070AE*/ {
	uint64_t val;
	nativeInit(0x1CEFB61F193070AE);
	*(Vector3**)(&val) = rotation;
	nativePush(val);
	*(Vehicle*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool MOBILE__NETWORK_SHOP_DOES_ITEM_EXIST_HASH(Hash hash) /*0x247F0F73A182EA0B*/ {
	uint64_t val;
	nativeInit(0x247F0F73A182EA0B);
	*(Hash*)(&val) = hash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void MOBILE_0x3117D84EFA60F77B(float p0) /*0x3117D84EFA60F77B*/ {
	uint64_t val;
	nativeInit(0x3117D84EFA60F77B);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_DESTROY_MOBILE_PHONE() /*0x3BC861DF703E5097*/ {
	nativeInit(0x3BC861DF703E5097);
	nativeCall();
}
inline bool MOBILE_CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(Entity entity) /*0x439E9BC95B7E7FBE*/ {
	uint64_t val;
	nativeInit(0x439E9BC95B7E7FBE);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void MOBILE__SET_PHONE_LEAN(bool Toggle) /*0x44E44169EF70138E*/ {
	uint64_t val;
	nativeInit(0x44E44169EF70138E);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0x466DA42C89865553(float p0) /*0x466DA42C89865553*/ {
	uint64_t val;
	nativeInit(0x466DA42C89865553);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0x53F4892D18EC90A4(float p0) /*0x53F4892D18EC90A4*/ {
	uint64_t val;
	nativeInit(0x53F4892D18EC90A4);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_GET_MOBILE_PHONE_POSITION(Vector3* position) /*0x584FDFDA48805B86*/ {
	uint64_t val;
	nativeInit(0x584FDFDA48805B86);
	*(Vector3**)(&val) = position;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_SET_MOBILE_PHONE_POSITION(float posX, float posY, float posZ) /*0x693A5C6D6734085B*/ {
	uint64_t val;
	nativeInit(0x693A5C6D6734085B);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline void MOBILE__MOVE_FINGER(int direction) /*0x95C9E72F3D7DEC9B*/ {
	uint64_t val;
	nativeInit(0x95C9E72F3D7DEC9B);
	*(int*)(&val) = direction;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0xA2CCBE62CD4C91A4(int* toggle) /*0xA2CCBE62CD4C91A4*/ {
	uint64_t val;
	nativeInit(0xA2CCBE62CD4C91A4);
	*(int**)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_CREATE_MOBILE_PHONE(int p4) /*0xA4E8E696C532FBC7*/ {
	uint64_t val;
	nativeInit(0xA4E8E696C532FBC7);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0xAC2890471901861C(float p0) /*0xAC2890471901861C*/ {
	uint64_t val;
	nativeInit(0xAC2890471901861C);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_GET_MOBILE_PHONE_RENDER_ID(int* renderId) /*0xB4A53E05F68B6FA1*/ {
	uint64_t val;
	nativeInit(0xB4A53E05F68B6FA1);
	*(int**)(&val) = renderId;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_SET_MOBILE_PHONE_ROTATION(float rotX, float rotY, float rotZ, Any p3) /*0xBB779C0CA917E865*/ {
	uint64_t val;
	nativeInit(0xBB779C0CA917E865);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool MOBILE__NETWORK_SHOP_DOES_ITEM_EXIST(const char* name) /*0xBD4D7EAF8A30F637*/ {
	uint64_t val;
	nativeInit(0xBD4D7EAF8A30F637);
	*(const char**)(&val) = name;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool MOBILE_CAN_PHONE_BE_SEEN_ON_SCREEN() /*0xC4E2813898C97A4B*/ {
	nativeInit(0xC4E2813898C97A4B); return *(bool*)(nativeCall());
}
inline void MOBILE_SET_MOBILE_PHONE_SCALE(float scale) /*0xCBDD322A73D6D932*/ {
	uint64_t val;
	nativeInit(0xCBDD322A73D6D932);
	*(float*)(&val) = scale;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0xD6ADE981781FCA09(float p0) /*0xD6ADE981781FCA09*/ {
	uint64_t val;
	nativeInit(0xD6ADE981781FCA09);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_0xF1E22DC13F5EEBAD(float p0) /*0xF1E22DC13F5EEBAD*/ {
	uint64_t val;
	nativeInit(0xF1E22DC13F5EEBAD);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(bool toggle) /*0xF511F759238A5122*/ {
	uint64_t val;
	nativeInit(0xF511F759238A5122);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void MOBILE_CELL_CAM_ACTIVATE(bool p0, bool p1) /*0xFDE8F069C542D126*/ {
	uint64_t val;
	nativeInit(0xFDE8F069C542D126);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_GET_TIME_OFFSET(int timeA, int timeB) /*0x017008CCDAD48503*/ {
	uint64_t val;
	nativeInit(0x017008CCDAD48503);
	*(int*)(&val) = timeA;
	nativePush(val);
	*(int*)(&val) = timeB;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any NETWORK_0x01ABCE5E7CBDA196() /*0x01ABCE5E7CBDA196*/ {
	nativeInit(0x01ABCE5E7CBDA196); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_CONTROL_OF_ENTITY(Entity entity) /*0x01BF60A500E28887*/ {
	uint64_t val;
	nativeInit(0x01BF60A500E28887);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x02A8BEC6FD9AF660(Any* p0, Any p1) /*0x02A8BEC6FD9AF660*/ {
	uint64_t val;
	nativeInit(0x02A8BEC6FD9AF660);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x02ADA21EA2F6918F() /*0x02ADA21EA2F6918F*/ {
	nativeInit(0x02ADA21EA2F6918F); return *(Any*)(nativeCall());
}
inline int NETWORK__NETWORK_CONVERT_SYNCHRONISED_SCENE_TO_SYNCHRONIZED_SCENE(int netScene) /*0x02C40BF885C567B6*/ {
	uint64_t val;
	nativeInit(0x02C40BF885C567B6);
	*(int*)(&val) = netScene;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_TALKING(Player player) /*0x031E11F3D447647E*/ {
	uint64_t val;
	nativeInit(0x031E11F3D447647E);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL() /*0x042E4B70B93E6054*/ {
	nativeInit(0x042E4B70B93E6054);
	nativeCall();
}
inline bool NETWORK__NETWORK_HAVE_TUNABLES_BEEN_DOWNLOADED() /*0x0467C11ED88B7D28*/ {
	nativeInit(0x0467C11ED88B7D28); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_IN_SPECTATOR_MODE() /*0x048746E388762E11*/ {
	nativeInit(0x048746E388762E11); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_ACTIVITY_SESSION() /*0x05095437424397FA*/ {
	nativeInit(0x05095437424397FA); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_SIGNED_IN() /*0x054354A99211EB96*/ {
	nativeInit(0x054354A99211EB96); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_CLEAR_FOLLOWERS() /*0x058F43EC59A8631A*/ {
	nativeInit(0x058F43EC59A8631A);
	nativeCall();
}
inline void NETWORK_NETWORK_REGISTER_ENTITY_AS_NETWORKED(Entity entity) /*0x06FAACD625D80CAA*/ {
	uint64_t val;
	nativeInit(0x06FAACD625D80CAA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x07DD29D5E22763F1(Any* p0) /*0x07DD29D5E22763F1*/ {
	uint64_t val;
	nativeInit(0x07DD29D5E22763F1);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__FACEBOOK_SET_HEIST_COMPLETE(const char* heistName, int cashEarned, int xpEarned) /*0x098AB65B9ED9A9EC*/ {
	uint64_t val;
	nativeInit(0x098AB65B9ED9A9EC);
	*(const char**)(&val) = heistName;
	nativePush(val);
	*(int*)(&val) = cashEarned;
	nativePush(val);
	*(int*)(&val) = xpEarned;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_ENTITY_IS_LOCAL(Entity entity) /*0x0991549DE4D64762*/ {
	uint64_t val;
	nativeInit(0x0991549DE4D64762);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__FACEBOOK_SET_MILESTONE_COMPLETE(int milestoneId) /*0x0AE1F1653B554AB9*/ {
	uint64_t val;
	nativeInit(0x0AE1F1653B554AB9);
	*(int*)(&val) = milestoneId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x0AFCE529F69B21FF() /*0x0AFCE529F69B21FF*/ {
	nativeInit(0x0AFCE529F69B21FF); return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_ENABLE_MOTION_DRUGGED() /*0x0B0CC10720653F3B*/ {
	nativeInit(0x0B0CC10720653F3B); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x0B203B4AFDE53A4F(Any* p0, Any* p1, bool p2) /*0x0B203B4AFDE53A4F*/ {
	uint64_t val;
	nativeInit(0x0B203B4AFDE53A4F);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_IS_TRANSITION_HOST() /*0x0B824797C9BF2159*/ {
	nativeInit(0x0B824797C9BF2159); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PENDING_FRIEND(Any p0) /*0x0BE73DA6984A6E33*/ {
	uint64_t val;
	nativeInit(0x0BE73DA6984A6E33);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x0C1F7D49C39D2289() /*0x0C1F7D49C39D2289*/ {
	nativeInit(0x0C1F7D49C39D2289); return *(Any*)(nativeCall());
}
inline void NETWORK_0x0C978FDA19692C2C(bool p0, bool p1) /*0x0C978FDA19692C2C*/ {
	uint64_t val;
	nativeInit(0x0C978FDA19692C2C);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_0x0CD9AB83489430EA(bool p0) /*0x0CD9AB83489430EA*/ {
	uint64_t val;
	nativeInit(0x0CD9AB83489430EA);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0x0D77A82DC2D0DA59(Any* p0, Any* p1) /*0x0D77A82DC2D0DA59*/ {
	uint64_t val;
	nativeInit(0x0D77A82DC2D0DA59);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x0DBD5D7E3C5BEC3B() /*0x0DBD5D7E3C5BEC3B*/ {
	nativeInit(0x0DBD5D7E3C5BEC3B); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x0EDE326D47CD0F3E(Ped ped, Player player) /*0x0EDE326D47CD0F3E*/ {
	uint64_t val;
	nativeInit(0x0EDE326D47CD0F3E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_PED_TO_NET(Ped ped) /*0x0EDEC3C276198689*/ {
	uint64_t val;
	nativeInit(0x0EDEC3C276198689);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_GAMER_IN_MY_SESSION(int* networkHandle) /*0x0F10B05DDF8D16E9*/ {
	uint64_t val;
	nativeInit(0x0F10B05DDF8D16E9);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x0FF2862B61A58AF9(bool p0) /*0x0FF2862B61A58AF9*/ {
	uint64_t val;
	nativeInit(0x0FF2862B61A58AF9);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_SIGNED_ONLINE() /*0x1077788E268557C2*/ {
	nativeInit(0x1077788E268557C2); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x10BD227A753B0D84() /*0x10BD227A753B0D84*/ {
	nativeInit(0x10BD227A753B0D84); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_GAME_IN_PROGRESS() /*0x10FAB35428CCC9D7*/ {
	nativeInit(0x10FAB35428CCC9D7); return *(bool*)(nativeCall());
}
inline void NETWORK_0x113E6E3E50E286B0(Any p0) /*0x113E6E3E50E286B0*/ {
	uint64_t val;
	nativeInit(0x113E6E3E50E286B0);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x1153FA02A659051C() /*0x1153FA02A659051C*/ {
	nativeInit(0x1153FA02A659051C);
	nativeCall();
}
inline bool NETWORK_0x1171A97A3D3981B6(Any* p0, Any* p1, Any p2, Any p3) /*0x1171A97A3D3981B6*/ {
	uint64_t val;
	nativeInit(0x1171A97A3D3981B6);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x120364DE2845DAF8(Any* p0, Any p1) /*0x120364DE2845DAF8*/ {
	uint64_t val;
	nativeInit(0x120364DE2845DAF8);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_ACTIVITY_SPECTATOR() /*0x12103B9E0C9F92FB*/ {
	nativeInit(0x12103B9E0C9F92FB); return *(bool*)(nativeCall());
}
inline void NETWORK_SET_PLAYER_INVISIBLE_LOCALLY(Player player, bool toggle) /*0x12B37D54667DB0B8*/ {
	uint64_t val;
	nativeInit(0x12B37D54667DB0B8);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_0x12B6281B6C6706C0(bool p0) /*0x12B6281B6C6706C0*/ {
	uint64_t val;
	nativeInit(0x12B6281B6C6706C0);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_0x13518FF1C6B28938(Any p0) /*0x13518FF1C6B28938*/ {
	uint64_t val;
	nativeInit(0x13518FF1C6B28938);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_HAS_RESTRICTED_PROFILE() /*0x1353F87E89946207*/ {
	nativeInit(0x1353F87E89946207); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x135F9B7B7ADD2185(Any* p0) /*0x135F9B7B7ADD2185*/ {
	uint64_t val;
	nativeInit(0x135F9B7B7ADD2185);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x140E6A44870A11CE() /*0x140E6A44870A11CE*/ {
	nativeInit(0x140E6A44870A11CE);
	nativeCall();
}
inline Any NETWORK_0x14922ED3E38761F0() /*0x14922ED3E38761F0*/ {
	nativeInit(0x14922ED3E38761F0); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x152D90E4C1B4738A(Any* p0, Any* p1) /*0x152D90E4C1B4738A*/ {
	uint64_t val;
	nativeInit(0x152D90E4C1B4738A);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_AM_I_BLOCKED_BY_GAMER(Any* p0) /*0x15337C7C268A27B2*/ {
	uint64_t val;
	nativeInit(0x15337C7C268A27B2);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x158EC424F35EC469(const char* p0, bool p1, const char* contentType) /*0x158EC424F35EC469*/ {
	uint64_t val;
	nativeInit(0x158EC424F35EC469);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = contentType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_TEXTURE_DOWNLOAD_REQUEST(int* PlayerHandle, const char* FilePath, const char* Name, bool p3) /*0x16160DA74A8E74A2*/ {
	uint64_t val;
	nativeInit(0x16160DA74A8E74A2);
	*(int**)(&val) = PlayerHandle;
	nativePush(val);
	*(const char**)(&val) = FilePath;
	nativePush(val);
	*(const char**)(&val) = Name;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_0x162C23CA83ED0A62(Any p0) /*0x162C23CA83ED0A62*/ {
	uint64_t val;
	nativeInit(0x162C23CA83ED0A62);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x171DF6A0C07FB3DC(Any p0, Any p1) /*0x171DF6A0C07FB3DC*/ {
	uint64_t val;
	nativeInit(0x171DF6A0C07FB3DC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_PLAYER_IS_UNK() /*0x172F75B6EE2233BA*/ {
	nativeInit(0x172F75B6EE2233BA); return *(bool*)(nativeCall());
}
inline void NETWORK_0x17440AA15D1D3739() /*0x17440AA15D1D3739*/ {
	nativeInit(0x17440AA15D1D3739);
	nativeCall();
}
inline void NETWORK_NETWORK_SET_PROPERTY_ID(Any p0) /*0x1775961C2FBBCB5C*/ {
	uint64_t val;
	nativeInit(0x1775961C2FBBCB5C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x17E0198B3882C2CB() /*0x17E0198B3882C2CB*/ {
	nativeInit(0x17E0198B3882C2CB);
	nativeCall();
}
inline int NETWORK__GET_TUNABLES_CONTENT_MODIFIER_ID(Hash contentHash) /*0x187382F8A3E0A6C3*/ {
	uint64_t val;
	nativeInit(0x187382F8A3E0A6C3);
	*(Hash*)(&val) = contentHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(int netId) /*0x18A47D074708FD68*/ {
	uint64_t val;
	nativeInit(0x18A47D074708FD68);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_NUM_PARTICIPANTS() /*0x18D0456E86604654*/ {
	nativeInit(0x18D0456E86604654); return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_PLAYER_IS_BADSPORT() /*0x19D8DA0E5A68045A*/ {
	nativeInit(0x19D8DA0E5A68045A); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_FRIEND(int* networkHandle) /*0x1A24A179F9B31654*/ {
	uint64_t val;
	nativeInit(0x1A24A179F9B31654);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x1ACCFBA3D8DAB2EE(Any p0, Any p1) /*0x1ACCFBA3D8DAB2EE*/ {
	uint64_t val;
	nativeInit(0x1ACCFBA3D8DAB2EE);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_0x1AD5B71586B94820(Player p0, Any* p1, Any p2) /*0x1AD5B71586B94820*/ {
	uint64_t val;
	nativeInit(0x1AD5B71586B94820);
	*(Player*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_PARTICIPANT_INDEX(int index) /*0x1B84DF6AF2A46938*/ {
	uint64_t val;
	nativeInit(0x1B84DF6AF2A46938);
	*(int*)(&val) = index;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0x1B857666604B1A74(bool p0) /*0x1B857666604B1A74*/ {
	uint64_t val;
	nativeInit(0x1B857666604B1A74);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int lobbySize, bool p1, int instanceId) /*0x1CA59E306ECB80A5*/ {
	uint64_t val;
	nativeInit(0x1CA59E306ECB80A5);
	*(int*)(&val) = lobbySize;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = instanceId;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x1D4DC17C38FEAFF0() /*0x1D4DC17C38FEAFF0*/ {
	nativeInit(0x1D4DC17C38FEAFF0); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x1D610EB0FEA716D9(Any p0) /*0x1D610EB0FEA716D9*/ {
	uint64_t val;
	nativeInit(0x1D610EB0FEA716D9);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_HOST_OF_SCRIPT(const char* scriptName, int instanceId, int positionHash) /*0x1D6A14F1F9A736FC*/ {
	uint64_t val;
	nativeInit(0x1D6A14F1F9A736FC);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	*(int*)(&val) = instanceId;
	nativePush(val);
	*(int*)(&val) = positionHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_RICH_PRESENCE(int p0, Any p1, Any p2, Any p3) /*0x1DCCACDCFC569362*/ {
	uint64_t val;
	nativeInit(0x1DCCACDCFC569362);
	*(int*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x1DE0F5F50D723CAA(Any* p0, Any* p1, Any* p2) /*0x1DE0F5F50D723CAA*/ {
	uint64_t val;
	nativeInit(0x1DE0F5F50D723CAA);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_GET_NUM_RESERVED_MISSION_PEDS(bool p0) /*0x1F13D5AE5CB17E17*/ {
	uint64_t val;
	nativeInit(0x1F13D5AE5CB17E17);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int NETWORK__GET_NUM_MEMBERSHIP_DESC() /*0x1F471B79ACC90BEF*/ {
	nativeInit(0x1F471B79ACC90BEF); return *(int*)(nativeCall());
}
inline void NETWORK_NETWORK_FADE_IN_ENTITY(Entity entity, bool state) /*0x1F4ED342ACEFE62D*/ {
	uint64_t val;
	nativeInit(0x1F4ED342ACEFE62D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_GET_FRIEND_COUNT() /*0x203F1CFD823B27A4*/ {
	nativeInit(0x203F1CFD823B27A4); return *(int*)(nativeCall());
}
inline float NETWORK_NETWORK_GET_PLAYER_LOUDNESS(Any p0) /*0x21A1684A25C2867F*/ {
	uint64_t val;
	nativeInit(0x21A1684A25C2867F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool NETWORK_0x21D04D7BC538C146(Any p0) /*0x21D04D7BC538C146*/ {
	uint64_t val;
	nativeInit(0x21D04D7BC538C146);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x2302C0264EA58D31() /*0x2302C0264EA58D31*/ {
	nativeInit(0x2302C0264EA58D31);
	nativeCall();
}
inline void NETWORK_NETWORK_ADD_FOLLOWERS(int* p0, int p1) /*0x236406F60CF216D6*/ {
	uint64_t val;
	nativeInit(0x236406F60CF216D6);
	*(int**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x237D5336A9A54108(Any p0) /*0x237D5336A9A54108*/ {
	uint64_t val;
	nativeInit(0x237D5336A9A54108);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_WAS_INVITED() /*0x23DFB504655D0CE4*/ {
	nativeInit(0x23DFB504655D0CE4); return *(bool*)(nativeCall());
}
inline void NETWORK_SET_ENTITY_LOCALLY_VISIBLE(Entity entity) /*0x241E289B5C059EDC*/ {
	uint64_t val;
	nativeInit(0x241E289B5C059EDC);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x24409FC4C55CB22D(Any p0) /*0x24409FC4C55CB22D*/ {
	uint64_t val;
	nativeInit(0x24409FC4C55CB22D);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0x24E4E51FC16305F9() /*0x24E4E51FC16305F9*/ {
	nativeInit(0x24E4E51FC16305F9); return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_PLAYER_INDEX(Player player) /*0x24FB80D107371267*/ {
	uint64_t val;
	nativeInit(0x24FB80D107371267);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any NETWORK_0x25B99872D588A101(float p0, float p1, float p2, float p3, float p4, float p5) /*0x25B99872D588A101*/ {
	uint64_t val;
	nativeInit(0x25B99872D588A101);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAVE_ONLINE_PRIVILEGES() /*0x25CB5A9F37BFD063*/ {
	nativeInit(0x25CB5A9F37BFD063); return *(bool*)(nativeCall());
}
inline void NETWORK_0x25D990F8E0E3F13C() /*0x25D990F8E0E3F13C*/ {
	nativeInit(0x25D990F8E0E3F13C);
	nativeCall();
}
inline bool NETWORK_NETWORK_ARE_TRANSITION_DETAILS_VALID(Any p0) /*0x2615AA2A695930C1*/ {
	uint64_t val;
	nativeInit(0x2615AA2A695930C1);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x261E97AD7BCF3D40(bool p0) /*0x261E97AD7BCF3D40*/ {
	uint64_t val;
	nativeInit(0x261E97AD7BCF3D40);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x265635150FB0D82E() /*0x265635150FB0D82E*/ {
	nativeInit(0x265635150FB0D82E);
	nativeCall();
}
inline void NETWORK_0x267C78C60E806B9A(Any p0, bool p1) /*0x267C78C60E806B9A*/ {
	uint64_t val;
	nativeInit(0x267C78C60E806B9A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_NETWORK_GET_PRESENCE_INVITE_SESSION_ID(Any p0) /*0x26E1CD96B0903D60*/ {
	uint64_t val;
	nativeInit(0x26E1CD96B0903D60);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0x26F07DD83A5F7F98() /*0x26F07DD83A5F7F98*/ {
	nativeInit(0x26F07DD83A5F7F98); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_MARK_VISIBLE(bool p0) /*0x271CC6AB59EBF9A5*/ {
	uint64_t val;
	nativeInit(0x271CC6AB59EBF9A5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x274A1519DFC1094F(Any* p0, bool p1, Any* p2) /*0x274A1519DFC1094F*/ {
	uint64_t val;
	nativeInit(0x274A1519DFC1094F);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(int* networkHandle) /*0x2763BBAA72A7BCB9*/ {
	uint64_t val;
	nativeInit(0x2763BBAA72A7BCB9);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x283B6062A2C01E9B() /*0x283B6062A2C01E9B*/ {
	nativeInit(0x283B6062A2C01E9B);
	nativeCall();
}
inline bool NETWORK_NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT() /*0x2910669969E9535E*/ {
	nativeInit(0x2910669969E9535E); return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_IS_TRANSITION_MATCHMAKING() /*0x292564C735375EDF*/ {
	nativeInit(0x292564C735375EDF); return *(Any*)(nativeCall());
}
inline void NETWORK_SET_NETWORK_ID_CAN_MIGRATE(int netId, bool toggle) /*0x299EEB23175895FC*/ {
	uint64_t val;
	nativeInit(0x299EEB23175895FC);
	*(int*)(&val) = netId;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x299EF3C576773506() /*0x299EF3C576773506*/ {
	nativeInit(0x299EF3C576773506); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x2A7776C709904AB0(Any p0) /*0x2A7776C709904AB0*/ {
	uint64_t val;
	nativeInit(0x2A7776C709904AB0);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK__NETWORK_SET_NETWORK_ID_DYNAMIC(int netID, bool toggle) /*0x2B1813ABA29016C5*/ {
	uint64_t val;
	nativeInit(0x2B1813ABA29016C5);
	*(int*)(&val) = netID;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_OPEN_TRANSITION_MATCHMAKING() /*0x2B3A8F7CA3A38FDE*/ {
	nativeInit(0x2B3A8F7CA3A38FDE);
	nativeCall();
}
inline bool NETWORK_0x2B51EDBEFC301339(int p0, const char* p1) /*0x2B51EDBEFC301339*/ {
	uint64_t val;
	nativeInit(0x2B51EDBEFC301339);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x2BF66D2E7414F686() /*0x2BF66D2E7414F686*/ {
	nativeInit(0x2BF66D2E7414F686); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x2CC848A861D01493() /*0x2CC848A861D01493*/ {
	nativeInit(0x2CC848A861D01493); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_FRIEND_MATCHMAKING(int p0, int p1, int maxPlayers, bool p3) /*0x2CFC76E0D087C994*/ {
	uint64_t val;
	nativeInit(0x2CFC76E0D087C994);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x2D5DC831176D0114(Any p0) /*0x2D5DC831176D0114*/ {
	uint64_t val;
	nativeInit(0x2D5DC831176D0114);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int time) /*0x2D95C7E2D7E07307*/ {
	uint64_t val;
	nativeInit(0x2D95C7E2D7E07307);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_NETWORK_LAUNCH_TRANSITION() /*0x2DCF46CB1A4F0884*/ {
	nativeInit(0x2DCF46CB1A4F0884); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x2E0BF682CC778D49(Any p0) /*0x2E0BF682CC778D49*/ {
	uint64_t val;
	nativeInit(0x2E0BF682CC778D49);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_FRIEND_IN_SAME_TITLE(const char* friendName) /*0x2EA9A3BEDF3F17B8*/ {
	uint64_t val;
	nativeInit(0x2EA9A3BEDF3F17B8);
	*(const char**)(&val) = friendName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x2EAC52B4019E2782() /*0x2EAC52B4019E2782*/ {
	nativeInit(0x2EAC52B4019E2782); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_CANCEL_INVITE() /*0x2FBF47B1B36D36F9*/ {
	nativeInit(0x2FBF47B1B36D36F9);
	nativeCall();
}
inline Any NETWORK_0x2FC5650B0271CB57() /*0x2FC5650B0271CB57*/ {
	nativeInit(0x2FC5650B0271CB57); return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_EXPLODE_VEHICLE(Vehicle vehicle, bool isAudible, bool isInvisible, Player player) /*0x301A42153C9AD707*/ {
	uint64_t val;
	nativeInit(0x301A42153C9AD707);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_OVERRIDE_CHAT_RESTRICTIONS(Player player, bool toggle) /*0x3039AE5AD2C9C0C4*/ {
	uint64_t val;
	nativeInit(0x3039AE5AD2C9C0C4);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x3054F114121C21EA(Any p0) /*0x3054F114121C21EA*/ {
	uint64_t val;
	nativeInit(0x3054F114121C21EA);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x308F96458B7087CC(Any* p0, Any p1, Any p2, Any p3, Any* p4, bool p5) /*0x308F96458B7087CC*/ {
	uint64_t val;
	nativeInit(0x308F96458B7087CC);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_TRANSITION_ACTIVITY_ID(Any p0) /*0x30DE938B516F0AD2*/ {
	uint64_t val;
	nativeInit(0x30DE938B516F0AD2);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x3195F8DD0D531052(Any p0, Any p1, Any* p2, Any* p3) /*0x3195F8DD0D531052*/ {
	uint64_t val;
	nativeInit(0x3195F8DD0D531052);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(int* networkHandle, const char* p1, int p2, int p3, bool p4) /*0x31D1D2B858D25E6B*/ {
	uint64_t val;
	nativeInit(0x31D1D2B858D25E6B);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x32DD916F3F7C9672(Any p0) /*0x32DD916F3F7C9672*/ {
	uint64_t val;
	nativeInit(0x32DD916F3F7C9672);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_SESSION_ENTER(Any p0, Any p1, Any p2, int maxPlayers, Any p4, Any p5) /*0x330ED4D05491934F*/ {
	uint64_t val;
	nativeInit(0x330ED4D05491934F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(const char* vars, ScrHandle numVars) /*0x3364AA97340CA215*/ {
	uint64_t val;
	nativeInit(0x3364AA97340CA215);
	*(const char**)(&val) = vars;
	nativePush(val);
	*(ScrHandle*)(&val) = numVars;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_SESSION_LEAVE_SINGLE_PLAYER() /*0x3442775428FD2DAA*/ {
	nativeInit(0x3442775428FD2DAA);
	nativeCall();
}
inline const char* NETWORK_TEXTURE_DOWNLOAD_GET_NAME(int p0) /*0x3448505B6E35262D*/ {
	uint64_t val;
	nativeInit(0x3448505B6E35262D);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORK_NETWORK_BLOCK_INVITES(bool toggle) /*0x34F9E9049454A7A0*/ {
	uint64_t val;
	nativeInit(0x34F9E9049454A7A0);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x35F0B98A8387274D() /*0x35F0B98A8387274D*/ {
	nativeInit(0x35F0B98A8387274D); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x36391F397731595D(Any p0) /*0x36391F397731595D*/ {
	uint64_t val;
	nativeInit(0x36391F397731595D);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(Any* p0, Any p1, Any p2) /*0x3658E8CD94FC121A*/ {
	uint64_t val;
	nativeInit(0x3658E8CD94FC121A);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Vehicle NETWORK_NET_TO_VEH(int netHandle) /*0x367B936610BA360C*/ {
	uint64_t val;
	nativeInit(0x367B936610BA360C);
	*(int*)(&val) = netHandle;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void NETWORK_0x367EF5E2F439B4C6(int p0) /*0x367EF5E2F439B4C6*/ {
	uint64_t val;
	nativeInit(0x367EF5E2F439B4C6);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK__GET_CONTENT_FILE_VERSION(Any p0, Any p1) /*0x37025B27D9B658B1*/ {
	uint64_t val;
	nativeInit(0x37025B27D9B658B1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading) /*0x371EA43692861CF1*/ {
	uint64_t val;
	nativeInit(0x371EA43692861CF1);
	*(int*)(&val) = randomInt;
	nativePush(val);
	*(Vector3**)(&val) = coordinates;
	nativePush(val);
	*(float**)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK__NETWORK_ADD_ENTITY_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6) /*0x376C6375BA60293A*/ {
	uint64_t val;
	nativeInit(0x376C6375BA60293A);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0x37A4494483B9F5C9() /*0x37A4494483B9F5C9*/ {
	nativeInit(0x37A4494483B9F5C9); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_HANDLE_FROM_PLAYER(Player player, int* networkHandle, int bufferSize) /*0x388EB2B86C73B6B3*/ {
	uint64_t val;
	nativeInit(0x388EB2B86C73B6B3);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_DOES_NETWORK_ID_EXIST(int netID) /*0x38CE16C96BD11344*/ {
	uint64_t val;
	nativeInit(0x38CE16C96BD11344);
	*(int*)(&val) = netID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1) /*0x38D5B0FEBB086F75*/ {
	uint64_t val;
	nativeInit(0x38D5B0FEBB086F75);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x39917E1B4CB0F911(bool p0) /*0x39917E1B4CB0F911*/ {
	uint64_t val;
	nativeInit(0x39917E1B4CB0F911);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x3A17A27D75C74887() /*0x3A17A27D75C74887*/ {
	nativeInit(0x3A17A27D75C74887); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_SEND_TEXT_MESSAGE(const char* message, int* networkHandle) /*0x3A214F2EC889B100*/ {
	uint64_t val;
	nativeInit(0x3A214F2EC889B100);
	*(const char**)(&val) = message;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash NETWORK_0x3A3D5568AF297CD5(Hash p1) /*0x3A3D5568AF297CD5*/ {
	uint64_t val;
	nativeInit(0x3A3D5568AF297CD5);
	*(Hash*)(&val) = p1;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool NETWORK_NETWORK_DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, bool p2, int players, bool p4) /*0x3AAD8B2FCA1E289F*/ {
	uint64_t val;
	nativeInit(0x3AAD8B2FCA1E289F);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = players;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x3B39236746714134(Any p0) /*0x3B39236746714134*/ {
	uint64_t val;
	nativeInit(0x3B39236746714134);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_MISSION_FINISHED() /*0x3B3D11CD9FFCDFC9*/ {
	nativeInit(0x3B3D11CD9FFCDFC9);
	nativeCall();
}
inline void NETWORK_0x3C5C1E2C2FF814B1(bool p0) /*0x3C5C1E2C2FF814B1*/ {
	uint64_t val;
	nativeInit(0x3C5C1E2C2FF814B1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x3C891A251567DFCE(Any* p0) /*0x3C891A251567DFCE*/ {
	uint64_t val;
	nativeInit(0x3C891A251567DFCE);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_A_PARTICIPANT(Player playerId) /*0x3CA58F6CB7CBD784*/ {
	uint64_t val;
	nativeInit(0x3CA58F6CB7CBD784);
	*(Player*)(&val) = playerId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x3DBF2DF0AEB7D289(Any p0) /*0x3DBF2DF0AEB7D289*/ {
	uint64_t val;
	nativeInit(0x3DBF2DF0AEB7D289);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_SET_RICH_PRESENCE_2(int p0, const char* gxtLabel) /*0x3E200C2BCF4164EB*/ {
	uint64_t val;
	nativeInit(0x3E200C2BCF4164EB);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = gxtLabel;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int sizeofVars) /*0x3E9B2F01C50DF595*/ {
	uint64_t val;
	nativeInit(0x3E9B2F01C50DF595);
	*(int**)(&val) = vars;
	nativePush(val);
	*(int*)(&val) = sizeofVars;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_DO_TRANSITION_TO_GAME(bool p0, int maxPlayers) /*0x3E9BB38102A589B0*/ {
	uint64_t val;
	nativeInit(0x3E9BB38102A589B0);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x3F52E880AAF6C8CA(bool p0) /*0x3F52E880AAF6C8CA*/ {
	uint64_t val;
	nativeInit(0x3F52E880AAF6C8CA);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x3F9990BF5F22759C(Any* p0) /*0x3F9990BF5F22759C*/ {
	uint64_t val;
	nativeInit(0x3F9990BF5F22759C);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x3FA36981311FA4FF(int netId, bool state) /*0x3FA36981311FA4FF*/ {
	uint64_t val;
	nativeInit(0x3FA36981311FA4FF);
	*(int*)(&val) = netId;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_PLAYER_HAS_HEADSET(Player player) /*0x3FB99A8B08D18FD6*/ {
	uint64_t val;
	nativeInit(0x3FB99A8B08D18FD6);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x407091CF6037118E(int netID) /*0x407091CF6037118E*/ {
	uint64_t val;
	nativeInit(0x407091CF6037118E);
	*(int*)(&val) = netID;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x40F7E66472DF3E5C(Any p0, Any p1) /*0x40F7E66472DF3E5C*/ {
	uint64_t val;
	nativeInit(0x40F7E66472DF3E5C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value) /*0x40FCE03E50E8DBE8*/ {
	uint64_t val;
	nativeInit(0x40FCE03E50E8DBE8);
	*(Hash*)(&val) = tunableContext;
	nativePush(val);
	*(Hash*)(&val) = tunableName;
	nativePush(val);
	*(int**)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* NETWORK__NETWORK_GET_FRIEND_NAME_FROM_INDEX(int friendIndex) /*0x4164F227D052E293*/ {
	uint64_t val;
	nativeInit(0x4164F227D052E293);
	*(int*)(&val) = friendIndex;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORK_FADE_OUT_LOCAL_PLAYER(bool p0) /*0x416DBD4CD6ED8DD2*/ {
	uint64_t val;
	nativeInit(0x416DBD4CD6ED8DD2);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(bool toggle, Ped playerPed, bool p2) /*0x419594E137637120*/ {
	uint64_t val;
	nativeInit(0x419594E137637120);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(Ped*)(&val) = playerPed;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x422D396F80A96547() /*0x422D396F80A96547*/ {
	nativeInit(0x422D396F80A96547); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x422F32CC7E56ABAD(Vehicle vehicle) /*0x422F32CC7E56ABAD*/ {
	uint64_t val;
	nativeInit(0x422F32CC7E56ABAD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x4237E822315D8BA9() /*0x4237E822315D8BA9*/ {
	nativeInit(0x4237E822315D8BA9); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_IN_SPECTATOR_MODE(bool toggle, Ped playerPed) /*0x423DE3854BB50894*/ {
	uint64_t val;
	nativeInit(0x423DE3854BB50894);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(Ped*)(&val) = playerPed;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_FRIEND_ONLINE(const char* name) /*0x425A44533437B64D*/ {
	uint64_t val;
	nativeInit(0x425A44533437B64D);
	*(const char**)(&val) = name;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* NETWORK_NETWORK_GET_GAMERTAG_FROM_HANDLE(int* networkHandle) /*0x426141162EBE5CDB*/ {
	uint64_t val;
	nativeInit(0x426141162EBE5CDB);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Entity NETWORK_NETWORK_GET_ENTITY_KILLER_OF_PLAYER(Player player, Hash* weaponHash) /*0x42B2DAA6B596F5F8*/ {
	uint64_t val;
	nativeInit(0x42B2DAA6B596F5F8);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Hash**)(&val) = weaponHash;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void NETWORK_NETWORK_REQUEST_CLOUD_TUNABLES() /*0x42FB3B532D526E6C*/ {
	nativeInit(0x42FB3B532D526E6C);
	nativeCall();
}
inline bool NETWORK__FACEBOOK_IS_AVAILABLE() /*0x43865688AE10F0D7*/ {
	nativeInit(0x43865688AE10F0D7); return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_CLEAR_FOLLOW_INVITE() /*0x439BFDE3CD0610F6*/ {
	nativeInit(0x439BFDE3CD0610F6); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_CLOSE_TRANSITION_MATCHMAKING() /*0x43F4DBA69710E01E*/ {
	nativeInit(0x43F4DBA69710E01E);
	nativeCall();
}
inline void NETWORK_0x444C4525ECE0A4B9() /*0x444C4525ECE0A4B9*/ {
	nativeInit(0x444C4525ECE0A4B9);
	nativeCall();
}
inline Any NETWORK_0x44B37CDCAE765AAE(Player p0, bool* p1) /*0x44B37CDCAE765AAE*/ {
	uint64_t val;
	nativeInit(0x44B37CDCAE765AAE);
	*(Player*)(&val) = p0;
	nativePush(val);
	*(bool**)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_0x45A83257ED02D9BC() /*0x45A83257ED02D9BC*/ {
	nativeInit(0x45A83257ED02D9BC);
	nativeCall();
}
inline Any NETWORK_0x45E816772E93A9DB() /*0x45E816772E93A9DB*/ {
	nativeInit(0x45E816772E93A9DB); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_DO_TRANSITION_TO_NEW_GAME(bool p0, int maxPlayers, bool p2) /*0x4665F51EFED00034*/ {
	uint64_t val;
	nativeInit(0x4665F51EFED00034);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_HAS_NETWORK_TIME_STARTED() /*0x46718ACEEDEAFC84*/ {
	nativeInit(0x46718ACEEDEAFC84); return *(bool*)(nativeCall());
}
inline bool NETWORK_GET_PLAYER_STAT_STARS_VISIBILITY(Player player, int p1, Hash scriptHash) /*0x46FB3ED415C7641C*/ {
	uint64_t val;
	nativeInit(0x46FB3ED415C7641C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int netScene, Entity entity, int bone) /*0x478DCBD2A98B705A*/ {
	uint64_t val;
	nativeInit(0x478DCBD2A98B705A);
	*(int*)(&val) = netScene;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = bone;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x4811BBAC21C5FCD5(Any p0) /*0x4811BBAC21C5FCD5*/ {
	uint64_t val;
	nativeInit(0x4811BBAC21C5FCD5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_TEXTURE_DOWNLOAD_RELEASE(int p0) /*0x487EB90B98E9FB19*/ {
	uint64_t val;
	nativeInit(0x487EB90B98E9FB19);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1) /*0x48A59CF88D43DF0E*/ {
	uint64_t val;
	nativeInit(0x48A59CF88D43DF0E);
	*(int**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_GET_MEMBERSHIP_DESC(int* memberDesc, int p1) /*0x48DE78AF2C8885B8*/ {
	uint64_t val;
	nativeInit(0x48DE78AF2C8885B8);
	*(int**)(&val) = memberDesc;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* NETWORK_NETWORK_PLAYER_GET_USERID(Player player, const char* userID) /*0x4927FC39CD0869A0*/ {
	uint64_t val;
	nativeInit(0x4927FC39CD0869A0);
	*(Player*)(&val) = player;
	nativePush(val);
	*(const char**)(&val) = userID;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Any NETWORK_NETWORK_ADD_ENTITY_AREA(float p0, float p1, float p2, float p3, float p4, float p5) /*0x494C8FB299290269*/ {
	uint64_t val;
	nativeInit(0x494C8FB299290269);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_PRESENCE_INVITE_INVITER(Any p0) /*0x4962CC4AA2F345B7*/ {
	uint64_t val;
	nativeInit(0x4962CC4AA2F345B7);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK__NETWORK_SCTV_SLOTS(int p0) /*0x49EC8030F5015F8B*/ {
	uint64_t val;
	nativeInit(0x49EC8030F5015F8B);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x4A2D4E8BF4265B0F(Any p0) /*0x4A2D4E8BF4265B0F*/ {
	uint64_t val;
	nativeInit(0x4A2D4E8BF4265B0F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1) /*0x4A595C32F77DFF76*/ {
	uint64_t val;
	nativeInit(0x4A595C32F77DFF76);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_BLOCK_INVITES_2(bool p0) /*0x4A9FDE3A5A6D0437*/ {
	uint64_t val;
	nativeInit(0x4A9FDE3A5A6D0437);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x4BA92A18502BCA61(Player player, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, int flags) /*0x4BA92A18502BCA61*/ {
	uint64_t val;
	nativeInit(0x4BA92A18502BCA61);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x4C61B39930D045DA(Any p0) /*0x4C61B39930D045DA*/ {
	uint64_t val;
	nativeInit(0x4C61B39930D045DA);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_GET_DESTROYER_OF_ENTITY(Any p0, Any p1, Hash* weaponHash) /*0x4CACA84440FA26F6*/ {
	uint64_t val;
	nativeInit(0x4CACA84440FA26F6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Hash**)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x4D02279C83BE69FE() /*0x4D02279C83BE69FE*/ {
	nativeInit(0x4D02279C83BE69FE); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_CONTROL_OF_NETWORK_ID(int netId) /*0x4D36070FE0215186*/ {
	uint64_t val;
	nativeInit(0x4D36070FE0215186);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_INVITED_GAMER(Any* p0) /*0x4D86CD31E8976ECE*/ {
	uint64_t val;
	nativeInit(0x4D86CD31E8976ECE);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x4DF7CFFF471A7FB1(Any p0) /*0x4DF7CFFF471A7FB1*/ {
	uint64_t val;
	nativeInit(0x4DF7CFFF471A7FB1);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x4E548C0D7AE39FF9(Any p0, Any p1) /*0x4E548C0D7AE39FF9*/ {
	uint64_t val;
	nativeInit(0x4E548C0D7AE39FF9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_RESERVE_NETWORK_MISSION_OBJECTS(int amount) /*0x4E5C93BD0C32FBF8*/ {
	uint64_t val;
	nativeInit(0x4E5C93BD0C32FBF8);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_CAN_SESSION_END() /*0x4EEBC3694E49C572*/ {
	nativeInit(0x4EEBC3694E49C572); return *(bool*)(nativeCall());
}
inline void NETWORK_CLOUD_CHECK_AVAILABILITY() /*0x4F18196C8D38768D*/ {
	nativeInit(0x4F18196C8D38768D);
	nativeCall();
}
inline Any NETWORK_NETWORK_IS_TRANSITION_BUSY() /*0x520F3282A53D26B7*/ {
	nativeInit(0x520F3282A53D26B7); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_APPLY_TRANSITION_PARAMETER(Any p0, Any p1) /*0x521638ADA1BA0D18*/ {
	uint64_t val;
	nativeInit(0x521638ADA1BA0D18);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x524FF0AEFF9C3973(Any p0) /*0x524FF0AEFF9C3973*/ {
	uint64_t val;
	nativeInit(0x524FF0AEFF9C3973);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x5324A0E3E4CE3570(Any p0, Any p1, Any* p2, Any* p3) /*0x5324A0E3E4CE3570*/ {
	uint64_t val;
	nativeInit(0x5324A0E3E4CE3570);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x53AFD64C6758F2F9() /*0x53AFD64C6758F2F9*/ {
	nativeInit(0x53AFD64C6758F2F9); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_TRANSITION_STARTED() /*0x53FA83401D9C07FE*/ {
	nativeInit(0x53FA83401D9C07FE); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_PLAYER_IS_ROCKSTAR_DEV(Player player) /*0x544ABDDA3B409B6D*/ {
	uint64_t val;
	nativeInit(0x544ABDDA3B409B6D);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x5539C3EBF104A53A(bool p0) /*0x5539C3EBF104A53A*/ {
	uint64_t val;
	nativeInit(0x5539C3EBF104A53A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline const char* NETWORK__GET_CONTENT_ID(Any p0) /*0x55AA95F481D694D2*/ {
	uint64_t val;
	nativeInit(0x55AA95F481D694D2);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool NETWORK__NETWORK_PLAYER_IS_CHEATER(Player player) /*0x565E430DB3B05BEC*/ {
	uint64_t val;
	nativeInit(0x565E430DB3B05BEC);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK__NETWORK_SESSION_GET_UNK(int p0) /*0x56CE820830EF040B*/ {
	uint64_t val;
	nativeInit(0x56CE820830EF040B);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_FRIEND_IN_MULTIPLAYER(const char* friendName) /*0x57005C18827F3A28*/ {
	uint64_t val;
	nativeInit(0x57005C18827F3A28);
	*(const char**)(&val) = friendName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0) /*0x5728BB6D63E3FF1D*/ {
	uint64_t val;
	nativeInit(0x5728BB6D63E3FF1D);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_TEXTURE_DOWNLOAD_HAS_FAILED(int p0) /*0x5776ED562C134687*/ {
	uint64_t val;
	nativeInit(0x5776ED562C134687);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_PLAYER_IS_IN_CLAN() /*0x579CCED0265D4896*/ {
	nativeInit(0x579CCED0265D4896); return *(bool*)(nativeCall());
}
inline int NETWORK_PARTICIPANT_ID_TO_INT() /*0x57A3BDDAD8E5AA0A*/ {
	nativeInit(0x57A3BDDAD8E5AA0A); return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_BLOCKED_BY_ME(Player player) /*0x57AF1F8E27483721*/ {
	uint64_t val;
	nativeInit(0x57AF1F8E27483721);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_CHAT_MUTE(bool p0) /*0x57B192B4D4AD23D5*/ {
	uint64_t val;
	nativeInit(0x57B192B4D4AD23D5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_GET_SCRIPT_STATUS() /*0x57D158647A6BFABF*/ {
	nativeInit(0x57D158647A6BFABF); return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_ARE_HANDLES_THE_SAME(int* netHandle1, int* netHandle2) /*0x57DBA049E110F217*/ {
	uint64_t val;
	nativeInit(0x57DBA049E110F217);
	*(int**)(&val) = netHandle1;
	nativePush(val);
	*(int**)(&val) = netHandle2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CAN_BAIL() /*0x580CE4438479CC61*/ {
	nativeInit(0x580CE4438479CC61); return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_GET_PLAYER_CREW_EMBLEM_TXD_NAME(Player* player, Any* p1) /*0x5835D9CD92E83184*/ {
	uint64_t val;
	nativeInit(0x5835D9CD92E83184);
	*(Player**)(&val) = player;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x584770794D758C18(Any p0, Any* p1) /*0x584770794D758C18*/ {
	uint64_t val;
	nativeInit(0x584770794D758C18);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash NETWORK__NETWORK_HASH_FROM_GAMER_HANDLE(int* networkHandle) /*0x58575AC3CF2CA8EC*/ {
	uint64_t val;
	nativeInit(0x58575AC3CF2CA8EC);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void NETWORK_0x58C21165F6545892(const char* p0, const char* p1) /*0x58C21165F6545892*/ {
	uint64_t val;
	nativeInit(0x58C21165F6545892);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x58CC181719256197(Any p0, Any p1, Any p2) /*0x58CC181719256197*/ {
	uint64_t val;
	nativeInit(0x58CC181719256197);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0x59328EB08C5CEB2B() /*0x59328EB08C5CEB2B*/ {
	nativeInit(0x59328EB08C5CEB2B); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x593570C289A77688() /*0x593570C289A77688*/ {
	nativeInit(0x593570C289A77688); return *(bool*)(nativeCall());
}
inline void NETWORK_SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME() /*0x593850C16A36B692*/ {
	nativeInit(0x593850C16A36B692);
	nativeCall();
}
inline bool NETWORK_0x595F028698072DD9(Any p0, Any p1, bool p2) /*0x595F028698072DD9*/ {
	uint64_t val;
	nativeInit(0x595F028698072DD9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x597F8DBA9B206FC7() /*0x597F8DBA9B206FC7*/ {
	nativeInit(0x597F8DBA9B206FC7); return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_RANDOM_INT() /*0x599E4FA1F87EB5FF*/ {
	nativeInit(0x599E4FA1F87EB5FF); return *(int*)(nativeCall());
}
inline Any NETWORK_0x59DF79317F85A7E0() /*0x59DF79317F85A7E0*/ {
	nativeInit(0x59DF79317F85A7E0); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x5A0A3D1A186A5508() /*0x5A0A3D1A186A5508*/ {
	nativeInit(0x5A0A3D1A186A5508); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x5A34CD9C3C5BEC44(Any p0) /*0x5A34CD9C3C5BEC44*/ {
	uint64_t val;
	nativeInit(0x5A34CD9C3C5BEC44);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x5A6AA44FF8E931E6() /*0x5A6AA44FF8E931E6*/ {
	nativeInit(0x5A6AA44FF8E931E6); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x5A6FFA2433E2F14C(Player player, float p1, float p2, float p3, float p4, float p5, float p6, float p7, int flags) /*0x5A6FFA2433E2F14C*/ {
	uint64_t val;
	nativeInit(0x5A6FFA2433E2F14C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x5AE17C6B0134B7F1() /*0x5AE17C6B0134B7F1*/ {
	nativeInit(0x5AE17C6B0134B7F1); return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS() /*0x5B4F04F19376A0BA*/ {
	nativeInit(0x5B4F04F19376A0BA); return *(Any*)(nativeCall());
}
inline void NETWORK_0x5B8ED3DB018927B1(Any p0) /*0x5B8ED3DB018927B1*/ {
	uint64_t val;
	nativeInit(0x5B8ED3DB018927B1);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0) /*0x5B9E023DC6EBEDC0*/ {
	uint64_t val;
	nativeInit(0x5B9E023DC6EBEDC0);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_CONTROL_OF_PICKUP(Pickup pickup) /*0x5BC9495F0B3B6FA6*/ {
	uint64_t val;
	nativeInit(0x5BC9495F0B3B6FA6);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x5C497525F803486B() /*0x5C497525F803486B*/ {
	nativeInit(0x5C497525F803486B);
	nativeCall();
}
inline void NETWORK_0x5C707A667DF8B9FA(bool p0, Any p1) /*0x5C707A667DF8B9FA*/ {
	uint64_t val;
	nativeInit(0x5C707A667DF8B9FA);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x5CAE833B0EE0C500(Any p0) /*0x5CAE833B0EE0C500*/ {
	uint64_t val;
	nativeInit(0x5CAE833B0EE0C500);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x5D10B3795F3FC886() /*0x5D10B3795F3FC886*/ {
	nativeInit(0x5D10B3795F3FC886); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x5DC577201723960A() /*0x5DC577201723960A*/ {
	nativeInit(0x5DC577201723960A); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x5E0165278F6339EE(Any p0) /*0x5E0165278F6339EE*/ {
	uint64_t val;
	nativeInit(0x5E0165278F6339EE);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0x5E24341A7F92A74B() /*0x5E24341A7F92A74B*/ {
	nativeInit(0x5E24341A7F92A74B); return *(Any*)(nativeCall());
}
inline void NETWORK_0x5E3AA4CA2B6FB0EE(Any p0) /*0x5E3AA4CA2B6FB0EE*/ {
	uint64_t val;
	nativeInit(0x5E3AA4CA2B6FB0EE);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x5EA784D197556507() /*0x5EA784D197556507*/ {
	nativeInit(0x5EA784D197556507); return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_TIMEOUT_TIME() /*0x5ED0356A0CE3A34F*/ {
	nativeInit(0x5ED0356A0CE3A34F); return *(int*)(nativeCall());
}
inline bool NETWORK__CAN_PLAY_ONLINE() /*0x5F91D5D0B36AA310*/ {
	nativeInit(0x5F91D5D0B36AA310); return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_IS_TEXT_CHAT_ACTIVE() /*0x5FCF4D7069B09026*/ {
	nativeInit(0x5FCF4D7069B09026); return *(bool*)(nativeCall());
}
inline void NETWORK_USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(bool toggle) /*0x5FFE9B4144F9712F*/ {
	uint64_t val;
	nativeInit(0x5FFE9B4144F9712F);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x600F8CB31C7AAB6E(Any p0) /*0x600F8CB31C7AAB6E*/ {
	uint64_t val;
	nativeInit(0x600F8CB31C7AAB6E);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x606E4D3E3CCCF3EB() /*0x606E4D3E3CCCF3EB*/ {
	nativeInit(0x606E4D3E3CCCF3EB); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x60EDD13EB3AC1FF3() /*0x60EDD13EB3AC1FF3*/ {
	nativeInit(0x60EDD13EB3AC1FF3); return *(Any*)(nativeCall());
}
inline void NETWORK_0x61A885D3F7CFEE9A() /*0x61A885D3F7CFEE9A*/ {
	nativeInit(0x61A885D3F7CFEE9A);
	nativeCall();
}
inline void NETWORK__SET_NETWORK_OBJECT_NON_CONTACT(Object object, bool toggle) /*0x6274C4712850841E*/ {
	uint64_t val;
	nativeInit(0x6274C4712850841E);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x62A0296C1BB1CEB3() /*0x62A0296C1BB1CEB3*/ {
	nativeInit(0x62A0296C1BB1CEB3); return *(Any*)(nativeCall());
}
inline bool NETWORK__FACEBOOK_IS_SENDING_DATA() /*0x62B9FEC9A11F10EF*/ {
	nativeInit(0x62B9FEC9A11F10EF); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x631DC5DFF4B110E3(Player index) /*0x631DC5DFF4B110E3*/ {
	uint64_t val;
	nativeInit(0x631DC5DFF4B110E3);
	*(Player*)(&val) = index;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK__NETWORK_GET_PLAYER_PED_FROM_INDEX() /*0x638A3A81733086DB*/ {
	nativeInit(0x638A3A81733086DB); return *(int*)(nativeCall());
}
inline Any NETWORK_0x63B406D7884BFA95() /*0x63B406D7884BFA95*/ {
	nativeInit(0x63B406D7884BFA95); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_IN_MP_CUTSCENE(Player player) /*0x63F9EE203C3619F2*/ {
	uint64_t val;
	nativeInit(0x63F9EE203C3619F2);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x64F62AFB081E260D() /*0x64F62AFB081E260D*/ {
	nativeInit(0x64F62AFB081E260D);
	nativeCall();
}
inline bool NETWORK_NETWORK_GET_TRANSITION_HOST(int* networkHandle) /*0x65042B9774C4435E*/ {
	uint64_t val;
	nativeInit(0x65042B9774C4435E);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x6512765E3BE78C50() /*0x6512765E3BE78C50*/ {
	nativeInit(0x6512765E3BE78C50); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_PLAYER_IS_CHEATER() /*0x655B91F1495A9090*/ {
	nativeInit(0x655B91F1495A9090); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x662635855957C411(Any p0) /*0x662635855957C411*/ {
	uint64_t val;
	nativeInit(0x662635855957C411);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_0x66B59CFFD78467AF() /*0x66B59CFFD78467AF*/ {
	nativeInit(0x66B59CFFD78467AF); return *(bool*)(nativeCall());
}
inline void NETWORK_0x66F010A4B031A331(Any* p0) /*0x66F010A4B031A331*/ {
	uint64_t val;
	nativeInit(0x66F010A4B031A331);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_PARTY_MEMBER(int* networkHandle) /*0x676ED266AADD31E0*/ {
	uint64_t val;
	nativeInit(0x676ED266AADD31E0);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x678BB03C1A3BD51E(Any p0, Any p1, Any p2, Any* p3, Any* p4) /*0x678BB03C1A3BD51E*/ {
	uint64_t val;
	nativeInit(0x678BB03C1A3BD51E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_VOICE_LEAVE() /*0x6793E42BE02B575D*/ {
	nativeInit(0x6793E42BE02B575D);
	nativeCall();
}
inline bool NETWORK_0x67A5589628E0CFF6() /*0x67A5589628E0CFF6*/ {
	nativeInit(0x67A5589628E0CFF6); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x67FC09BC554A75E5() /*0x67FC09BC554A75E5*/ {
	nativeInit(0x67FC09BC554A75E5); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_IN_TRANSITION() /*0x68049AEFF83D8F0A*/ {
	nativeInit(0x68049AEFF83D8F0A); return *(bool*)(nativeCall());
}
inline void NETWORK_0x68103E2247887242() /*0x68103E2247887242*/ {
	nativeInit(0x68103E2247887242);
	nativeCall();
}
inline bool NETWORK_0x692D58DF40657E8C(Any p0, Any p1, Any p2, Any* p3, Any p4, bool p5) /*0x692D58DF40657E8C*/ {
	uint64_t val;
	nativeInit(0x692D58DF40657E8C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_CAN_REGISTER_MISSION_ENTITIES(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt) /*0x69778E7564BADE6D*/ {
	uint64_t val;
	nativeInit(0x69778E7564BADE6D);
	*(int*)(&val) = ped_amt;
	nativePush(val);
	*(int*)(&val) = vehicle_amt;
	nativePush(val);
	*(int*)(&val) = object_amt;
	nativePush(val);
	*(int*)(&val) = pickup_amt;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x6A5D89D7769A40D8(bool p0) /*0x6A5D89D7769A40D8*/ {
	uint64_t val;
	nativeInit(0x6A5D89D7769A40D8);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK__NETWORK_BLOCK_KICKED_PLAYERS(bool p0) /*0x6B07B9CE4D390375*/ {
	uint64_t val;
	nativeInit(0x6B07B9CE4D390375);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(int* networkHandle) /*0x6B5C83BA3EFE6A10*/ {
	uint64_t val;
	nativeInit(0x6B5C83BA3EFE6A10);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x6BFF5F84102DF80A(Any p0) /*0x6BFF5F84102DF80A*/ {
	uint64_t val;
	nativeInit(0x6BFF5F84102DF80A);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Player NETWORK_NETWORK_GET_PLAYER_INDEX_FROM_PED(Ped ped) /*0x6C0E2E0125610278*/ {
	uint64_t val;
	nativeInit(0x6C0E2E0125610278);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline Any NETWORK_0x6C34F1208B8923FD(Any p0) /*0x6C34F1208B8923FD*/ {
	uint64_t val;
	nativeInit(0x6C34F1208B8923FD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_IN_MP_CUTSCENE() /*0x6CC27C9FA2040220*/ {
	nativeInit(0x6CC27C9FA2040220); return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_GET_SERVER_TIME(int* hours, int* minutes, int* seconds) /*0x6D03BFBD643B2A02*/ {
	uint64_t val;
	nativeInit(0x6D03BFBD643B2A02);
	*(int**)(&val) = hours;
	nativePush(val);
	*(int**)(&val) = minutes;
	nativePush(val);
	*(int**)(&val) = seconds;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_CLEAR_FOUND_GAMERS() /*0x6D14CCEE1B40381A*/ {
	nativeInit(0x6D14CCEE1B40381A);
	nativeCall();
}
inline bool NETWORK_0x6D4CB481FAC835E8(Any p0, Any p1, const char* p2, Any p3) /*0x6D4CB481FAC835E8*/ {
	uint64_t val;
	nativeInit(0x6D4CB481FAC835E8);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int netID) /*0x6E192E33AD436366*/ {
	uint64_t val;
	nativeInit(0x6E192E33AD436366);
	*(int*)(&val) = netID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_ADDING_FRIEND() /*0x6EA101606F6E4D81*/ {
	nativeInit(0x6EA101606F6E4D81); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_HOST(int p0, int maxPlayers, bool p2) /*0x6F3D4ED9BEE4E61D*/ {
	uint64_t val;
	nativeInit(0x6F3D4ED9BEE4E61D);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x6F44CBF56D79FAC0(Any p0, Any p1) /*0x6F44CBF56D79FAC0*/ {
	uint64_t val;
	nativeInit(0x6F44CBF56D79FAC0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_0x6F697A66CE78674E(int team, bool toggle) /*0x6F697A66CE78674E*/ {
	uint64_t val;
	nativeInit(0x6F697A66CE78674E);
	*(int*)(&val) = team;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_HANDLE_VALID(int* networkHandle, int bufferSize) /*0x6F79B93B0A8E4133*/ {
	uint64_t val;
	nativeInit(0x6F79B93B0A8E4133);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x6FB7BB3607D27FA2() /*0x6FB7BB3607D27FA2*/ {
	nativeInit(0x6FB7BB3607D27FA2); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PARTICIPANT_ACTIVE(int p0) /*0x6FF8FF40B6357D45*/ {
	uint64_t val;
	nativeInit(0x6FF8FF40B6357D45);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x702BC4D605522539(Any p0) /*0x702BC4D605522539*/ {
	uint64_t val;
	nativeInit(0x702BC4D605522539);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x703F12425ECA8BF5(Any p0) /*0x703F12425ECA8BF5*/ {
	uint64_t val;
	nativeInit(0x703F12425ECA8BF5);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_OVERRIDE_SPECTATOR_MODE(bool toggle) /*0x70DA3BF8DACD3210*/ {
	uint64_t val;
	nativeInit(0x70DA3BF8DACD3210);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x70EA8DA57840F9BE(Any p0) /*0x70EA8DA57840F9BE*/ {
	uint64_t val;
	nativeInit(0x70EA8DA57840F9BE);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x715135F4B82AC90D(Entity entity) /*0x715135F4B82AC90D*/ {
	uint64_t val;
	nativeInit(0x715135F4B82AC90D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_FILLOUT_PM_PLAYER_LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3) /*0x716B6DB9D1886106*/ {
	uint64_t val;
	nativeInit(0x716B6DB9D1886106);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_GAMER_TALKING(int* p0) /*0x71C33B22606CD88A*/ {
	uint64_t val;
	nativeInit(0x71C33B22606CD88A);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_DO_TRANSITION_QUICKMATCH(Any p0, Any p1, Any p2, Any p3) /*0x71FB0EBCD4915D56*/ {
	uint64_t val;
	nativeInit(0x71FB0EBCD4915D56);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) /*0x7206F674F2A3B1BB*/ {
	uint64_t val;
	nativeInit(0x7206F674F2A3B1BB);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x722F5D28B61C5EA8(Any p0) /*0x722F5D28B61C5EA8*/ {
	uint64_t val;
	nativeInit(0x722F5D28B61C5EA8);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_RESET_BODY_TRACKER() /*0x72433699B4E6DD64*/ {
	nativeInit(0x72433699B4E6DD64);
	nativeCall();
}
inline void NETWORK_NETWORK_REMOVE_ALL_TRANSITION_INVITE() /*0x726E0375C7A26368*/ {
	nativeInit(0x726E0375C7A26368);
	nativeCall();
}
inline bool NETWORK_CAN_REGISTER_MISSION_VEHICLES(int amount) /*0x7277F1F2E085EE74*/ {
	uint64_t val;
	nativeInit(0x7277F1F2E085EE74);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(Any* p0) /*0x7284A47B3540E6CF*/ {
	uint64_t val;
	nativeInit(0x7284A47B3540E6CF);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x728C4CC7920CD102(Any p0) /*0x728C4CC7920CD102*/ {
	uint64_t val;
	nativeInit(0x728C4CC7920CD102);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_CLAN_ANIMATION(const char* animDict, const char* animName) /*0x729E3401F0430686*/ {
	uint64_t val;
	nativeInit(0x729E3401F0430686);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x72D0706CD6CCDB58() /*0x72D0706CD6CCDB58*/ {
	nativeInit(0x72D0706CD6CCDB58);
	nativeCall();
}
inline bool NETWORK_0x72D918C99BCACC54(Any p0) /*0x72D918C99BCACC54*/ {
	uint64_t val;
	nativeInit(0x72D918C99BCACC54);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_UNREGISTER_NETWORKED_ENTITY(Entity entity) /*0x7368E683BB9038D6*/ {
	uint64_t val;
	nativeInit(0x7368E683BB9038D6);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_NETWORK_GET_TRANSITION_MEMBERS(Any* p0, Any p1) /*0x73B000F7FBC55829*/ {
	uint64_t val;
	nativeInit(0x73B000F7FBC55829);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_ACTIVITY_PLAYER_NUM(bool p0) /*0x73E2B500410DA5A2*/ {
	uint64_t val;
	nativeInit(0x73E2B500410DA5A2);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0x741A3D8380319A81() /*0x741A3D8380319A81*/ {
	nativeInit(0x741A3D8380319A81);
	nativeCall();
}
inline void NETWORK_NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Ped ped, int netScene, const char* animDict, const char* animName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) /*0x742A637471BCECD9*/ {
	uint64_t val;
	nativeInit(0x742A637471BCECD9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = netScene;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMultiplier;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(float*)(&val) = playbackRate;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x742B58F723233ED9(Any p0) /*0x742B58F723233ED9*/ {
	uint64_t val;
	nativeInit(0x742B58F723233ED9);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_0x74698374C45701D2() /*0x74698374C45701D2*/ {
	nativeInit(0x74698374C45701D2); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_IS_CLOSED_CREW() /*0x74732C6CA90DA2B4*/ {
	nativeInit(0x74732C6CA90DA2B4); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) /*0x74881E6BCAE2327C*/ {
	uint64_t val;
	nativeInit(0x74881E6BCAE2327C);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x74FB3E29E6D10FA9() /*0x74FB3E29E6D10FA9*/ {
	nativeInit(0x74FB3E29E6D10FA9); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_ACTIVITY_SPECTATOR(bool toggle) /*0x75138790B4359A74*/ {
	uint64_t val;
	nativeInit(0x75138790B4359A74);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_REMOVE_TRANSITION_INVITE(Any* p0) /*0x7524B431B2E6F7EE*/ {
	uint64_t val;
	nativeInit(0x7524B431B2E6F7EE);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x7543BB439F63792B(int* clanDesc, int bufferSize) /*0x7543BB439F63792B*/ {
	uint64_t val;
	nativeInit(0x7543BB439F63792B);
	*(int**)(&val) = clanDesc;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x759299C5BB31D2A9(Any p0, Any p1) /*0x759299C5BB31D2A9*/ {
	uint64_t val;
	nativeInit(0x759299C5BB31D2A9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_SET_LOCAL_PLAYER_VISIBLE_LOCALLY(bool p0) /*0x7619364C82D3BF14*/ {
	uint64_t val;
	nativeInit(0x7619364C82D3BF14);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x769951E2455E2EB5() /*0x769951E2455E2EB5*/ {
	nativeInit(0x769951E2455E2EB5); return *(Any*)(nativeCall());
}
inline void NETWORK_RESERVE_NETWORK_MISSION_VEHICLES(int amount) /*0x76B02E21ED27A469*/ {
	uint64_t val;
	nativeInit(0x76B02E21ED27A469);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline Any* NETWORK_0x76BF03FADBF154F5() /*0x76BF03FADBF154F5*/ {
	nativeInit(0x76BF03FADBF154F5); return *(Any**)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_FOLLOW_INVITE() /*0x76D9B976C4C09FDE*/ {
	nativeInit(0x76D9B976C4C09FDE); return *(bool*)(nativeCall());
}
inline const char* NETWORK_NETWORK_PLAYER_GET_NAME(Player player) /*0x7718D2E2060837D2*/ {
	uint64_t val;
	nativeInit(0x7718D2E2060837D2);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORK_0x77758139EC9B66C7(bool p0) /*0x77758139EC9B66C7*/ {
	uint64_t val;
	nativeInit(0x77758139EC9B66C7);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x77FADDCBE3499DF7(Any p0) /*0x77FADDCBE3499DF7*/ {
	uint64_t val;
	nativeInit(0x77FADDCBE3499DF7);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x7808619F31FF22DB() /*0x7808619F31FF22DB*/ {
	nativeInit(0x7808619F31FF22DB); return *(Any*)(nativeCall());
}
inline bool NETWORK_0x78321BEA235FD8CD(Any p0, bool p1) /*0x78321BEA235FD8CD*/ {
	uint64_t val;
	nativeInit(0x78321BEA235FD8CD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x793FF272D5B365F4() /*0x793FF272D5B365F4*/ {
	nativeInit(0x793FF272D5B365F4); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE(Any* p0) /*0x796A87B3B68D1F3D*/ {
	uint64_t val;
	nativeInit(0x796A87B3B68D1F3D);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_DESTROYER_OF_NETWORK_ID(int netId, Hash* weaponHash) /*0x7A1ADEEF01740A24*/ {
	uint64_t val;
	nativeInit(0x7A1ADEEF01740A24);
	*(int*)(&val) = netId;
	nativePush(val);
	*(Hash**)(&val) = weaponHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int NETWORK_GET_NETWORK_TIME() /*0x7A5487FE9FAA6B48*/ {
	nativeInit(0x7A5487FE9FAA6B48); return *(int*)(nativeCall());
}
inline void NETWORK_0x7AC752103856FB20(bool p0) /*0x7AC752103856FB20*/ {
	uint64_t val;
	nativeInit(0x7AC752103856FB20);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_CREATE_SYNCHRONISED_SCENE(float x, float y, float z, float xRot, float yRot, float zRot, int p6, int p7, int p8, float p9) /*0x7CD6BC4C2BBDD526*/ {
	uint64_t val;
	nativeInit(0x7CD6BC4C2BBDD526);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int NETWORK__GET_CONTENT_DESCRIPTION_HASH(Any p0) /*0x7CF0448787B23758*/ {
	uint64_t val;
	nativeInit(0x7CF0448787B23758);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0x7D395EA61622E116(bool p0) /*0x7D395EA61622E116*/ {
	uint64_t val;
	nativeInit(0x7D395EA61622E116);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x7DB53B37A2F211A0() /*0x7DB53B37A2F211A0*/ {
	nativeInit(0x7DB53B37A2F211A0); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_INACTIVE_PROFILE(Any* p0) /*0x7E58745504313A2E*/ {
	uint64_t val;
	nativeInit(0x7E58745504313A2E);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CAN_ENTER_MULTIPLAYER() /*0x7E782A910C362C25*/ {
	nativeInit(0x7E782A910C362C25); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_KEEP_FOCUSPOINT(bool p0, Any p1) /*0x7F8413B7FC2AA6B9*/ {
	uint64_t val;
	nativeInit(0x7F8413B7FC2AA6B9);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x7FCC39C46C3C03BD(Any p0) /*0x7FCC39C46C3C03BD*/ {
	uint64_t val;
	nativeInit(0x7FCC39C46C3C03BD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x7FD2990AF016795E(Any* p0, Any* p1, Any p2, Any p3, Any p4) /*0x7FD2990AF016795E*/ {
	uint64_t val;
	nativeInit(0x7FD2990AF016795E);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_CAN_REGISTER_MISSION_OBJECTS(int amount) /*0x800DD4721A8B008B*/ {
	uint64_t val;
	nativeInit(0x800DD4721A8B008B);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__IS_ROCKSTAR_BANNED() /*0x8020A73847E0CA7D*/ {
	nativeInit(0x8020A73847E0CA7D); return *(bool*)(nativeCall());
}
inline bool NETWORK__HAS_BG_SCRIPT_BEEN_DOWNLOADED() /*0x8132C0EB8B2B3293*/ {
	nativeInit(0x8132C0EB8B2B3293); return *(bool*)(nativeCall());
}
inline bool NETWORK_SET_BALANCE_ADD_MACHINE(Any* p0, Any* p1) /*0x815E5E3073DA1D67*/ {
	uint64_t val;
	nativeInit(0x815E5E3073DA1D67);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x82377B65E943F72D(Any p0) /*0x82377B65E943F72D*/ {
	uint64_t val;
	nativeInit(0x82377B65E943F72D);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_HOST_OF_THIS_SCRIPT() /*0x83CD99A1E6061AB5*/ {
	nativeInit(0x83CD99A1E6061AB5); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x83F28CE49FBBFFBA(Any p0, Any p1, bool p2) /*0x83F28CE49FBBFFBA*/ {
	uint64_t val;
	nativeInit(0x83F28CE49FBBFFBA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x83FE8D7229593017() /*0x83FE8D7229593017*/ {
	nativeInit(0x83FE8D7229593017);
	nativeCall();
}
inline Any NETWORK_NETWORK_GET_TALKER_PROXIMITY() /*0x84F0F13120B4E098*/ {
	nativeInit(0x84F0F13120B4E098); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_ARE_ROS_AVAILABLE() /*0x85443FF4C328F53B*/ {
	nativeInit(0x85443FF4C328F53B); return *(bool*)(nativeCall());
}
inline bool NETWORK_0x855BC38818F6F684() /*0x855BC38818F6F684*/ {
	nativeInit(0x855BC38818F6F684); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SHOW_PROFILE_UI(int* networkHandle) /*0x859ED1CEA343FCA8*/ {
	uint64_t val;
	nativeInit(0x859ED1CEA343FCA8);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x85A0EF54A500882C(Any* p0) /*0x85A0EF54A500882C*/ {
	uint64_t val;
	nativeInit(0x85A0EF54A500882C);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_DOES_TUNABLE_EXIST(const char* tunableContext, const char* tunableName) /*0x85E5F8B9B898B20A*/ {
	uint64_t val;
	nativeInit(0x85E5F8B9B898B20A);
	*(const char**)(&val) = tunableContext;
	nativePush(val);
	*(const char**)(&val) = tunableName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x86E0660E4F5C956D() /*0x86E0660E4F5C956D*/ {
	nativeInit(0x86E0660E4F5C956D);
	nativeCall();
}
inline bool NETWORK_NETWORK_REQUEST_CONTROL_OF_DOOR(int doorID) /*0x870DDFD5A4A796E4*/ {
	uint64_t val;
	nativeInit(0x870DDFD5A4A796E4);
	*(int*)(&val) = doorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x87E5C46C187FE0AE(Any p0, Any p1) /*0x87E5C46C187FE0AE*/ {
	uint64_t val;
	nativeInit(0x87E5C46C187FE0AE);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_IS_FRIEND_HANDLE_ONLINE(int* networkHandle) /*0x87EB7A3FFCB314DB*/ {
	uint64_t val;
	nativeInit(0x87EB7A3FFCB314DB);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_AM_I_BLOCKED_BY_PLAYER(Player player) /*0x87F395D957D4353D*/ {
	uint64_t val;
	nativeInit(0x87F395D957D4353D);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x8806CEBFABD3CE05(Any p0) /*0x8806CEBFABD3CE05*/ {
	uint64_t val;
	nativeInit(0x8806CEBFABD3CE05);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x883D79C4071E18B3() /*0x883D79C4071E18B3*/ {
	nativeInit(0x883D79C4071E18B3); return *(Any*)(nativeCall());
}
inline Any NETWORK_0x88B588B41FF7868E() /*0x88B588B41FF7868E*/ {
	nativeInit(0x88B588B41FF7868E); return *(Any*)(nativeCall());
}
inline int NETWORK_0x89023FBBF9200E9F() /*0x89023FBBF9200E9F*/ {
	nativeInit(0x89023FBBF9200E9F); return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_LOCAL_PLAYER_INVINCIBLE() /*0x8A8694B48715B000*/ {
	nativeInit(0x8A8694B48715B000); return *(bool*)(nativeCall());
}
inline Any NETWORK_0x8B0C2964BA471961() /*0x8B0C2964BA471961*/ {
	nativeInit(0x8B0C2964BA471961); return *(Any*)(nativeCall());
}
inline void NETWORK__NETWORK_SESSION_SET_MAX_PLAYERS(int playerType, int playerCount) /*0x8B6A4DD0AF9CE215*/ {
	uint64_t val;
	nativeInit(0x8B6A4DD0AF9CE215);
	*(int*)(&val) = playerType;
	nativePush(val);
	*(int*)(&val) = playerCount;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0x8BD6C6DEA20E82C6(Any p0) /*0x8BD6C6DEA20E82C6*/ {
	uint64_t val;
	nativeInit(0x8BD6C6DEA20E82C6);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_ACCESS_TUNABLE_INT(const char* tunableContext, const char* tunableName, int* value) /*0x8BE1146DFD5D4468*/ {
	uint64_t val;
	nativeInit(0x8BE1146DFD5D4468);
	*(const char**)(&val) = tunableContext;
	nativePush(val);
	*(const char**)(&val) = tunableName;
	nativePush(val);
	*(int**)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_MUTED_BY_ME(Player player) /*0x8C71288AE68EDE39*/ {
	uint64_t val;
	nativeInit(0x8C71288AE68EDE39);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x8C8D2739BA44AF0F(Any p0) /*0x8C8D2739BA44AF0F*/ {
	uint64_t val;
	nativeInit(0x8C8D2739BA44AF0F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_IS_NP_AVAILABLE() /*0x8D11E61A4ABF49CC*/ {
	nativeInit(0x8D11E61A4ABF49CC); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_HOST() /*0x8DB296B814EDDA07*/ {
	nativeInit(0x8DB296B814EDDA07); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(int* networkHandle) /*0x8DE9945BCC9AEC52*/ {
	uint64_t val;
	nativeInit(0x8DE9945BCC9AEC52);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_ADD_FRIEND(int* networkHandle, const char* message) /*0x8E02D73914064223*/ {
	uint64_t val;
	nativeInit(0x8E02D73914064223);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(const char**)(&val) = message;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Player NETWORK_PARTICIPANT_ID() /*0x90986E8876CE0A83*/ {
	nativeInit(0x90986E8876CE0A83); return *(Player*)(nativeCall());
}
inline bool NETWORK_0x919B3C98ED8292F9(Any p0) /*0x919B3C98ED8292F9*/ {
	uint64_t val;
	nativeInit(0x919B3C98ED8292F9);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x91B87C55093DE351() /*0x91B87C55093DE351*/ {
	nativeInit(0x91B87C55093DE351); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS() /*0x924426BFFD82E915*/ {
	nativeInit(0x924426BFFD82E915); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_REMOVE_ENTITY_AREA(Any p0) /*0x93CF869BAA0C4874*/ {
	uint64_t val;
	nativeInit(0x93CF869BAA0C4874);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_CONNECTED(Player player) /*0x93DC1BE4E1ABE9D1*/ {
	uint64_t val;
	nativeInit(0x93DC1BE4E1ABE9D1);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x941E5306BCD7C2C7() /*0x941E5306BCD7C2C7*/ {
	nativeInit(0x941E5306BCD7C2C7); return *(Any*)(nativeCall());
}
inline void NETWORK_0x94538037EE44F5CF(bool p0) /*0x94538037EE44F5CF*/ {
	uint64_t val;
	nativeInit(0x94538037EE44F5CF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0x9465E683B12D3F6B() /*0x9465E683B12D3F6B*/ {
	nativeInit(0x9465E683B12D3F6B);
	nativeCall();
}
inline Any NETWORK_0x94A8394D150B013A() /*0x94A8394D150B013A*/ {
	nativeInit(0x94A8394D150B013A); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_CREW_MATCHMAKING(int p0, int p1, int p2, int maxPlayers, bool p4) /*0x94BC51E9449D917F*/ {
	uint64_t val;
	nativeInit(0x94BC51E9449D917F);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_BAIL() /*0x95914459A87EBA28*/ {
	nativeInit(0x95914459A87EBA28);
	nativeCall();
}
inline Any NETWORK_0x9614B71F8ADB982B() /*0x9614B71F8ADB982B*/ {
	nativeInit(0x9614B71F8ADB982B); return *(Any*)(nativeCall());
}
inline void NETWORK_SET_STORE_ENABLED(bool toggle) /*0x9641A9FF718E9C5E*/ {
	uint64_t val;
	nativeInit(0x9641A9FF718E9C5E);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_IN_PARTY() /*0x966C2BC2A7FE3F30*/ {
	nativeInit(0x966C2BC2A7FE3F30); return *(bool*)(nativeCall());
}
inline void NETWORK_0x966DD84FB6A46017() /*0x966DD84FB6A46017*/ {
	nativeInit(0x966DD84FB6A46017);
	nativeCall();
}
inline bool NETWORK__NETWORK_ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value) /*0x972BC203BBC4C4D5*/ {
	uint64_t val;
	nativeInit(0x972BC203BBC4C4D5);
	*(Hash*)(&val) = tunableContext;
	nativePush(val);
	*(Hash*)(&val) = tunableName;
	nativePush(val);
	*(float**)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0x973D76AA760A6CB6(bool p0) /*0x973D76AA760A6CB6*/ {
	uint64_t val;
	nativeInit(0x973D76AA760A6CB6);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_MULTIPLAYER_DISABLED() /*0x9747292807126EDA*/ {
	nativeInit(0x9747292807126EDA); return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_RESPAWN_COORDS(Player player, float x, float y, float z, bool p4, bool p5) /*0x9769F811D1785B03*/ {
	uint64_t val;
	nativeInit(0x9769F811D1785B03);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x97A770BEEF227E2B(Any p0, Any p1, Any* p2, Any* p3) /*0x97A770BEEF227E2B*/ {
	uint64_t val;
	nativeInit(0x97A770BEEF227E2B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_OVERRIDE_SEND_RESTRICTIONS(Player player, bool toggle) /*0x97DD4C5944CC2E6A*/ {
	uint64_t val;
	nativeInit(0x97DD4C5944CC2E6A);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0x993CBE59D350D225(Any p0) /*0x993CBE59D350D225*/ {
	uint64_t val;
	nativeInit(0x993CBE59D350D225);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_COPY_PED_BLEND_DATA(Ped ped, Player player) /*0x99B72C7ABDE5C910*/ {
	uint64_t val;
	nativeInit(0x99B72C7ABDE5C910);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_OBJ_TO_NET(Object object) /*0x99BFDC94A603E541*/ {
	uint64_t val;
	nativeInit(0x99BFDC94A603E541);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_NETWORK_START_SYNCHRONISED_SCENE(int netScene) /*0x9A1B3FCDB36C8697*/ {
	uint64_t val;
	nativeInit(0x9A1B3FCDB36C8697);
	*(int*)(&val) = netScene;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_CLOUD_AVAILABLE() /*0x9A4CF4F48AD77302*/ {
	nativeInit(0x9A4CF4F48AD77302); return *(bool*)(nativeCall());
}
inline int NETWORK__GET_POSIX_TIME() /*0x9A73240B49945C76*/ {
	nativeInit(0x9A73240B49945C76); return *(int*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR() /*0x9AA46BADAD0E27ED*/ {
	nativeInit(0x9AA46BADAD0E27ED); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_PLAYER_STARTED_TRANSITION(Player player) /*0x9AC9CCBFA8C29795*/ {
	uint64_t val;
	nativeInit(0x9AC9CCBFA8C29795);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x9BF438815F5D96EA(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5) /*0x9BF438815F5D96EA*/ {
	uint64_t val;
	nativeInit(0x9BF438815F5D96EA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_VOICE_HOST() /*0x9C1556705F864230*/ {
	nativeInit(0x9C1556705F864230);
	nativeCall();
}
inline bool NETWORK_NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5) /*0x9C4AB58491FDC98A*/ {
	uint64_t val;
	nativeInit(0x9C4AB58491FDC98A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_IN_MP_CUTSCENE(bool p0, bool p1) /*0x9CA5DE655269FEC4*/ {
	uint64_t val;
	nativeInit(0x9CA5DE655269FEC4);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_JOIN_TRANSITION(Player player) /*0x9D060B08CD63321A*/ {
	uint64_t val;
	nativeInit(0x9D060B08CD63321A);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int maxSpectators) /*0x9D277B76D1D12222*/ {
	uint64_t val;
	nativeInit(0x9D277B76D1D12222);
	*(int*)(&val) = maxSpectators;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_SCRIPT_ACTIVE(const char* scriptName, int instanceId, bool unk, int positionHash) /*0x9D40DF90FAD26098*/ {
	uint64_t val;
	nativeInit(0x9D40DF90FAD26098);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	*(int*)(&val) = instanceId;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	*(int*)(&val) = positionHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_AM_I_MUTED_BY_PLAYER(Player player) /*0x9D6981DFC91A8604*/ {
	uint64_t val;
	nativeInit(0x9D6981DFC91A8604);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_IS_TRANSITION_TO_GAME() /*0x9D7696D8F4FA6CB7*/ {
	nativeInit(0x9D7696D8F4FA6CB7); return *(Any*)(nativeCall());
}
inline void NETWORK_0x9D7AFCBF21C51712(bool p0) /*0x9D7AFCBF21C51712*/ {
	uint64_t val;
	nativeInit(0x9D7AFCBF21C51712);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any* p3) /*0x9D80CD1D0E6327DE*/ {
	uint64_t val;
	nativeInit(0x9D80CD1D0E6327DE);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_FOUND_GAMER(Any* p0, Any p1) /*0x9DCFF2AFB68B3476*/ {
	uint64_t val;
	nativeInit(0x9DCFF2AFB68B3476);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_DISABLE_INVINCIBLE_FLASHING(int player, bool p1) /*0x9DD368BF06983221*/ {
	uint64_t val;
	nativeInit(0x9DD368BF06983221);
	*(int*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_SESSION_STARTED() /*0x9DE624D2FC4B603F*/ {
	nativeInit(0x9DE624D2FC4B603F); return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_IS_PLAYER_EQUAL_TO_INDEX(Player player, int index) /*0x9DE986FC9A87C474*/ {
	uint64_t val;
	nativeInit(0x9DE986FC9A87C474);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* NETWORK_GET_TIME_AS_STRING(int time) /*0x9E23B1777A927DAD*/ {
	uint64_t val;
	nativeInit(0x9E23B1777A927DAD);
	*(int*)(&val) = time;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool NETWORK_NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(int* networkHandle, Any* p1, int players, bool p3, bool p4, bool p5) /*0x9E80A5BA8109F974*/ {
	uint64_t val;
	nativeInit(0x9E80A5BA8109F974);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = players;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GAMERTAG_FROM_HANDLE_START(int* networkHandle) /*0x9F0C0A981D73FA56*/ {
	uint64_t val;
	nativeInit(0x9F0C0A981D73FA56);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0x9F6E2821885CAEE2(Any p0, Any p1, Any p2, Any* p3, Any* p4) /*0x9F6E2821885CAEE2*/ {
	uint64_t val;
	nativeInit(0x9F6E2821885CAEE2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_JOIN(int clanDesc) /*0x9FAAA4F4FC71F87F*/ {
	uint64_t val;
	nativeInit(0x9FAAA4F4FC71F87F);
	*(int*)(&val) = clanDesc;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0x9FEDF86898F100E9() /*0x9FEDF86898F100E9*/ {
	nativeInit(0x9FEDF86898F100E9); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_END(bool p0, bool p1) /*0xA02E59562D711006*/ {
	uint64_t val;
	nativeInit(0xA02E59562D711006);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_JOIN_GROUP_ACTIVITY() /*0xA06509A691D12BE4*/ {
	nativeInit(0xA06509A691D12BE4); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SUPPRESS_INVITE(bool toggle) /*0xA0682D67EF1FBA3D*/ {
	uint64_t val;
	nativeInit(0xA0682D67EF1FBA3D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(Any p0, Any p1, Any p2, Any p3) /*0xA091A5E44F0072E5*/ {
	uint64_t val;
	nativeInit(0xA091A5E44F0072E5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__IS_SOCIALCLUB_BANNED() /*0xA0AD7E2AF5349F61*/ {
	nativeInit(0xA0AD7E2AF5349F61); return *(bool*)(nativeCall());
}
inline Any NETWORK_0xA0FA4EC6A05DA44E() /*0xA0FA4EC6A05DA44E*/ {
	nativeInit(0xA0FA4EC6A05DA44E); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_HANDLE_FROM_MEMBER_ID(const char* memberId, int* networkHandle, int bufferSize) /*0xA0FD21BED61E5C4C*/ {
	uint64_t val;
	nativeInit(0xA0FD21BED61E5C4C);
	*(const char**)(&val) = memberId;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity) /*0xA11700682F3AD45C*/ {
	uint64_t val;
	nativeInit(0xA11700682F3AD45C);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_0xA134777FF7F33331(Any p0, Any* p1) /*0xA134777FF7F33331*/ {
	uint64_t val;
	nativeInit(0xA134777FF7F33331);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CAN_COMMUNICATE_WITH_GAMER(int* player) /*0xA150A4F065806B1F*/ {
	uint64_t val;
	nativeInit(0xA150A4F065806B1F);
	*(int**)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_CAN_NETWORK_ID_BE_SEEN(int netId) /*0xA1607996431332DF*/ {
	uint64_t val;
	nativeInit(0xA1607996431332DF);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_NUM_FOUND_GAMERS() /*0xA1B043EE79A916FB*/ {
	nativeInit(0xA1B043EE79A916FB); return *(int*)(nativeCall());
}
inline void NETWORK_0xA1E5E0204A6FCC70() /*0xA1E5E0204A6FCC70*/ {
	nativeInit(0xA1E5E0204A6FCC70);
	nativeCall();
}
inline void NETWORK_NETWORK_SESSION_FORCE_CANCEL_INVITE() /*0xA29177F7703B5644*/ {
	nativeInit(0xA29177F7703B5644);
	nativeCall();
}
inline int NETWORK_GET_TIME_DIFFERENCE(int timeA, int timeB) /*0xA2C6FC031D46FFF0*/ {
	uint64_t val;
	nativeInit(0xA2C6FC031D46FFF0);
	*(int*)(&val) = timeA;
	nativePush(val);
	*(int*)(&val) = timeB;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0xA2E9C1AB8A92E8CD(bool p0) /*0xA2E9C1AB8A92E8CD*/ {
	uint64_t val;
	nativeInit(0xA2E9C1AB8A92E8CD);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xA2F952104FC6DD4B(Any p0) /*0xA2F952104FC6DD4B*/ {
	uint64_t val;
	nativeInit(0xA2F952104FC6DD4B);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xA306F470D1660581() /*0xA306F470D1660581*/ {
	nativeInit(0xA306F470D1660581); return *(Any*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_NUM_CONNECTED_PLAYERS() /*0xA4A79DD2D9600654*/ {
	nativeInit(0xA4A79DD2D9600654); return *(int*)(nativeCall());
}
inline Any NETWORK_NETWORK_HOST_TRANSITION(Any p0, int playerCount, Any p2, Hash jobHash, Any p4, Any p5) /*0xA60BB5CE242BB254*/ {
	uint64_t val;
	nativeInit(0xA60BB5CE242BB254);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = playerCount;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Hash*)(&val) = jobHash;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netId) /*0xA670B3662FAFFBD0*/ {
	uint64_t val;
	nativeInit(0xA670B3662FAFFBD0);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int netId, bool p1, bool p2) /*0xA6928482543022B4*/ {
	uint64_t val;
	nativeInit(0xA6928482543022B4);
	*(int*)(&val) = netId;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_HAS_ROS_PRIVILEGE(int index) /*0xA699957E60D80214*/ {
	uint64_t val;
	nativeInit(0xA699957E60D80214);
	*(int*)(&val) = index;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK__NETWORK_GET_NUM_PARTICIPANTS_HOST() /*0xA6C90FBC38E395EE*/ {
	nativeInit(0xA6C90FBC38E395EE); return *(int*)(nativeCall());
}
inline Any NETWORK_0xA72835064DD63E4C() /*0xA72835064DD63E4C*/ {
	nativeInit(0xA72835064DD63E4C); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_BLOCK_JOIN_REQUESTS(bool toggle) /*0xA73667484D7037C3*/ {
	uint64_t val;
	nativeInit(0xA73667484D7037C3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK__FACEBOOK_DO_UNK_CHECK() /*0xA75E2B6733DA5142*/ {
	nativeInit(0xA75E2B6733DA5142); return *(bool*)(nativeCall());
}
inline bool NETWORK_0xA7862BC5ED1DFD7E(Any p0, Any p1, Any* p2, Any* p3) /*0xA7862BC5ED1DFD7E*/ {
	uint64_t val;
	nativeInit(0xA7862BC5ED1DFD7E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK__GET_CONTENT_CATEGORY(int p0) /*0xA7BAB11E7C9C6C5A*/ {
	uint64_t val;
	nativeInit(0xA7BAB11E7C9C6C5A);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0xA7E30DE9272B6D49(Ped ped, float x, float y, float z, float p4) /*0xA7E30DE9272B6D49*/ {
	uint64_t val;
	nativeInit(0xA7E30DE9272B6D49);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void NETWORK__SET_NETWORK_ID_SYNC_TO_PLAYER(int netId, Player player, bool toggle) /*0xA8A024587329F36A*/ {
	uint64_t val;
	nativeInit(0xA8A024587329F36A);
	*(int*)(&val) = netId;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xA8ACB6459542A8C8() /*0xA8ACB6459542A8C8*/ {
	nativeInit(0xA8ACB6459542A8C8); return *(Any*)(nativeCall());
}
inline bool NETWORK_0xA9240A96C74CCA13(Any p0) /*0xA9240A96C74CCA13*/ {
	uint64_t val;
	nativeInit(0xA9240A96C74CCA13);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(int* networkHandle) /*0xA989044E70010ABE*/ {
	uint64_t val;
	nativeInit(0xA989044E70010ABE);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_ACCESS_TUNABLE_bool(const char* tunableContext, const char* tunableName) /*0xAA6A47A573ABB75A*/ {
	uint64_t val;
	nativeInit(0xAA6A47A573ABB75A);
	*(const char**)(&val) = tunableContext;
	nativePush(val);
	*(const char**)(&val) = tunableName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK_GET_NUM_RESERVED_MISSION_OBJECTS(bool p0) /*0xAA81B5F10BC43AC2*/ {
	uint64_t val;
	nativeInit(0xAA81B5F10BC43AC2);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_0xAAA553E7DD28A457(bool p0) /*0xAAA553E7DD28A457*/ {
	uint64_t val;
	nativeInit(0xAAA553E7DD28A457);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int* p0) /*0xAAB11F6C4ADBC2C1*/ {
	uint64_t val;
	nativeInit(0xAAB11F6C4ADBC2C1);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(Any* p0) /*0xABD5E88B8A2D3DB2*/ {
	uint64_t val;
	nativeInit(0xABD5E88B8A2D3DB2);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_HAS_PENDING_INVITE() /*0xAC8C7B9B88C4A668*/ {
	nativeInit(0xAC8C7B9B88C4A668); return *(bool*)(nativeCall());
}
inline void NETWORK__GET_DATE_AND_TIME_FROM_UNIX_EPOCH(int unixEpoch, Any* timeStructure) /*0xAC97AF97FA68E5D5*/ {
	uint64_t val;
	nativeInit(0xAC97AF97FA68E5D5);
	*(int*)(&val) = unixEpoch;
	nativePush(val);
	*(Any**)(&val) = timeStructure;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_IN_TUTORIAL_SESSION() /*0xADA24309FE08DACF*/ {
	nativeInit(0xADA24309FE08DACF); return *(bool*)(nativeCall());
}
inline void NETWORK_0xADB57E5B663CCA8B(Player p0, float* p1, float* p2) /*0xADB57E5B663CCA8B*/ {
	uint64_t val;
	nativeInit(0xADB57E5B663CCA8B);
	*(Player*)(&val) = p0;
	nativePush(val);
	*(float**)(&val) = p1;
	nativePush(val);
	*(float**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xAEAB987727C5A8A4(Any p0) /*0xAEAB987727C5A8A4*/ {
	uint64_t val;
	nativeInit(0xAEAB987727C5A8A4);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0xAEEF48CDF5B6CE7C(Any p0, Any p1) /*0xAEEF48CDF5B6CE7C*/ {
	uint64_t val;
	nativeInit(0xAEEF48CDF5B6CE7C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CAN_ACCESS_MULTIPLAYER(int* loadingState) /*0xAF50DA1A3F8B1BA4*/ {
	uint64_t val;
	nativeInit(0xAF50DA1A3F8B1BA4);
	*(int**)(&val) = loadingState;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_OVERRIDE_TRANSITION_CHAT(bool p0) /*0xAF66059A131AA269*/ {
	uint64_t val;
	nativeInit(0xAF66059A131AA269);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_NETWORK_GET_MAX_FRIENDS() /*0xAFEBB0D5D8F687D2*/ {
	nativeInit(0xAFEBB0D5D8F687D2); return *(int*)(nativeCall());
}
inline bool NETWORK_NETWORK_GAMERTAG_FROM_HANDLE_PENDING() /*0xB071E27958EF4CF0*/ {
	nativeInit(0xB071E27958EF4CF0); return *(bool*)(nativeCall());
}
inline bool NETWORK_0xB07D3185E11657A5(Entity p0) /*0xB07D3185E11657A5*/ {
	uint64_t val;
	nativeInit(0xB07D3185E11657A5);
	*(Entity*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_PLAYER_IS_ACTIVE(int* networkHandle) /*0xB124B57F571D8F18*/ {
	uint64_t val;
	nativeInit(0xB124B57F571D8F18);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xB13E88E655E5A3BC() /*0xB13E88E655E5A3BC*/ {
	nativeInit(0xB13E88E655E5A3BC);
	nativeCall();
}
inline Any NETWORK_0xB309EBEA797E001F(Any p0) /*0xB309EBEA797E001F*/ {
	uint64_t val;
	nativeInit(0xB309EBEA797E001F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any NETWORK_0xB37E4E6A2388CA7B() /*0xB37E4E6A2388CA7B*/ {
	nativeInit(0xB37E4E6A2388CA7B); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING() /*0xB3F64A6A91432477*/ {
	nativeInit(0xB3F64A6A91432477); return *(bool*)(nativeCall());
}
inline Any NETWORK_0xB4271092CA7EDF48(Any p0) /*0xB4271092CA7EDF48*/ {
	uint64_t val;
	nativeInit(0xB4271092CA7EDF48);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_CHANGE_SLOTS(int p0, bool p1) /*0xB4AB419E0D86ACAE*/ {
	uint64_t val;
	nativeInit(0xB4AB419E0D86ACAE);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_VEH_TO_NET(Vehicle vehicle) /*0xB4C94523F023419C*/ {
	uint64_t val;
	nativeInit(0xB4C94523F023419C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_PENDING() /*0xB5074DB804E28CE7*/ {
	nativeInit(0xB5074DB804E28CE7); return *(Any*)(nativeCall());
}
inline bool NETWORK_0xB57A49545BA53CE7(Any* p0) /*0xB57A49545BA53CE7*/ {
	uint64_t val;
	nativeInit(0xB57A49545BA53CE7);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xB5D3453C98456528() /*0xB5D3453C98456528*/ {
	nativeInit(0xB5D3453C98456528); return *(Any*)(nativeCall());
}
inline void NETWORK_0xB606E6CC59664972(Any p0) /*0xB606E6CC59664972*/ {
	uint64_t val;
	nativeInit(0xB606E6CC59664972);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_RESERVE_NETWORK_MISSION_PEDS(int amount) /*0xB60FEBA45333D36F*/ {
	uint64_t val;
	nativeInit(0xB60FEBA45333D36F);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity entity) /*0xB69317BF5E782347*/ {
	uint64_t val;
	nativeInit(0xB69317BF5E782347);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_0xB746D20B17F2A229(Any* p0, Any* p1) /*0xB746D20B17F2A229*/ {
	uint64_t val;
	nativeInit(0xB746D20B17F2A229);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_UPDATE_PLAYER_SCARS() /*0xB7C7F6AD6424304B*/ {
	nativeInit(0xB7C7F6AD6424304B);
	nativeCall();
}
inline bool NETWORK_SET_BALANCE_ADD_MACHINES(Any* p0, Any p1, Any* p2) /*0xB8322EEB38BE7C26*/ {
	uint64_t val;
	nativeInit(0xB8322EEB38BE7C26);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_PLAYER_ACTIVE(Player player) /*0xB8DFD30D6973E135*/ {
	uint64_t val;
	nativeInit(0xB8DFD30D6973E135);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int maxPlayers) /*0xB9CFD27A5D578D83*/ {
	uint64_t val;
	nativeInit(0xB9CFD27A5D578D83);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_IS_VISIBLE() /*0xBA416D68C631496A*/ {
	nativeInit(0xBA416D68C631496A); return *(bool*)(nativeCall());
}
inline void NETWORK_0xBA96394A0EECFA65() /*0xBA96394A0EECFA65*/ {
	nativeInit(0xBA96394A0EECFA65);
	nativeCall();
}
inline Any NETWORK_0xBA9775570DB788CF() /*0xBA9775570DB788CF*/ {
	nativeInit(0xBA9775570DB788CF); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_VOICE_ACTIVE(bool toggle) /*0xBABEC9E69A91C57B*/ {
	uint64_t val;
	nativeInit(0xBABEC9E69A91C57B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_FRIEND_INDEX_ONLINE(int friendIndex) /*0xBAD8F2A42B844821*/ {
	uint64_t val;
	nativeInit(0xBAD8F2A42B844821);
	*(int*)(&val) = friendIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xBAF6BABF9E7CCC13(int p0, Any* p1) /*0xBAF6BABF9E7CCC13*/ {
	uint64_t val;
	nativeInit(0xBAF6BABF9E7CCC13);
	*(int*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0) /*0xBB6E6FEE99D866B2*/ {
	uint64_t val;
	nativeInit(0xBB6E6FEE99D866B2);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xBBDF066252829606(Any p0, bool p1) /*0xBBDF066252829606*/ {
	uint64_t val;
	nativeInit(0xBBDF066252829606);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Hash NETWORK__NETWORK_HASH_FROM_PLAYER_HANDLE(Player player) /*0xBC1D768F2F5D6C05*/ {
	uint64_t val;
	nativeInit(0xBC1D768F2F5D6C05);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool NETWORK_CAN_REGISTER_MISSION_PEDS(int amount) /*0xBCBF4FEF9FA5D781*/ {
	uint64_t val;
	nativeInit(0xBCBF4FEF9FA5D781);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA() /*0xBD0BE0BFC927EAC1*/ {
	nativeInit(0xBD0BE0BFC927EAC1);
	nativeCall();
}
inline bool NETWORK_0xBD545D44CCE70597() /*0xBD545D44CCE70597*/ {
	nativeInit(0xBD545D44CCE70597); return *(bool*)(nativeCall());
}
inline Any NETWORK_0xBDB6F89C729CF388() /*0xBDB6F89C729CF388*/ {
	nativeInit(0xBDB6F89C729CF388); return *(Any*)(nativeCall());
}
inline Ped NETWORK_NET_TO_PED(int netHandle) /*0xBDCD95FC216A8B3E*/ {
	uint64_t val;
	nativeInit(0xBDCD95FC216A8B3E);
	*(int*)(&val) = netHandle;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_ACTIVITY_QUICKMATCH(Any p0, Any p1, Any p2, Any p3) /*0xBE3E347A87ACEB82*/ {
	uint64_t val;
	nativeInit(0xBE3E347A87ACEB82);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xBF09786A7FCAB582(Any p0) /*0xBF09786A7FCAB582*/ {
	uint64_t val;
	nativeInit(0xBF09786A7FCAB582);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK__NETWORK_RESPAWN_PLAYER(Player player, bool p1) /*0xBF22E0F32968E967*/ {
	uint64_t val;
	nativeInit(0xBF22E0F32968E967);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Entity NETWORK_NET_TO_ENT(int netHandle) /*0xBFFEAB45A9A9094A*/ {
	uint64_t val;
	nativeInit(0xBFFEAB45A9A9094A);
	*(int*)(&val) = netHandle;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline const char* NETWORK__GET_ROOT_CONTENT_ID(Any p0) /*0xC0173D6BFF4E0348*/ {
	uint64_t val;
	nativeInit(0xC0173D6BFF4E0348);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool NETWORK__NETWORK_HAS_CONTROL_OF_PAVEMENT_STATS(Hash doorHash) /*0xC01E93FAC20C3346*/ {
	uint64_t val;
	nativeInit(0xC01E93FAC20C3346);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1) /*0xC080FF658B2E41DA*/ {
	uint64_t val;
	nativeInit(0xC080FF658B2E41DA);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xC0D2AF00BCC234CA() /*0xC0D2AF00BCC234CA*/ {
	nativeInit(0xC0D2AF00BCC234CA); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_SEND_PRESENCE_TRANSITION_INVITE(Any* p0, Any* p1, Any p2, Any p3) /*0xC116FF9B4D488291*/ {
	uint64_t val;
	nativeInit(0xC116FF9B4D488291);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK__NETWORK_SESSION_HOSTED(bool p0) /*0xC19F6C8E7865A6FF*/ {
	uint64_t val;
	nativeInit(0xC19F6C8E7865A6FF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xC22912B1D85F26B1(int p0, int* p1, Any* p2) /*0xC22912B1D85F26B1*/ {
	uint64_t val;
	nativeInit(0xC22912B1D85F26B1);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_STOP_SYNCHRONISED_SCENE(int netScene) /*0xC254481A4574CB2F*/ {
	uint64_t val;
	nativeInit(0xC254481A4574CB2F);
	*(int*)(&val) = netScene;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_CLEAR_PROPERTY_ID() /*0xC2B82527CA77053E*/ {
	nativeInit(0xC2B82527CA77053E);
	nativeCall();
}
inline Any NETWORK_0xC32EA7A2F6CA7557() /*0xC32EA7A2F6CA7557*/ {
	nativeInit(0xC32EA7A2F6CA7557); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_SEND_PRESENCE_INVITE(int* networkHandle, Any* p1, Any p2, Any p3) /*0xC3C7A6AFDB244624*/ {
	uint64_t val;
	nativeInit(0xC3C7A6AFDB244624);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xC42DD763159F3461() /*0xC42DD763159F3461*/ {
	nativeInit(0xC42DD763159F3461); return *(Any*)(nativeCall());
}
inline void NETWORK_0xC505036A35AFD01B(bool p0) /*0xC505036A35AFD01B*/ {
	uint64_t val;
	nativeInit(0xC505036A35AFD01B);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xC55A0B40FFB1ED23() /*0xC55A0B40FFB1ED23*/ {
	nativeInit(0xC55A0B40FFB1ED23); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xC571D0E77D8BBC29() /*0xC571D0E77D8BBC29*/ {
	nativeInit(0xC571D0E77D8BBC29); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xC64DED7EF0D2FE37(Any* p0) /*0xC64DED7EF0D2FE37*/ {
	uint64_t val;
	nativeInit(0xC64DED7EF0D2FE37);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_IS_PLAYER_ANIMATION_DRAWING_SYNCHRONIZED() /*0xC6F8AB8A4189CF3A*/ {
	nativeInit(0xC6F8AB8A4189CF3A);
	nativeCall();
}
inline bool NETWORK_0xC7397A83F7A2A462(Any* p0, Any p1, bool p2, Any* p3) /*0xC7397A83F7A2A462*/ {
	uint64_t val;
	nativeInit(0xC7397A83F7A2A462);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__NETWORK_ACCESS_TUNABLE_bool_HASH_FAIL_VAL(Hash tunableContext, Hash tunableName, bool defaultValue) /*0xC7420099936CE286*/ {
	uint64_t val;
	nativeInit(0xC7420099936CE286);
	*(Hash*)(&val) = tunableContext;
	nativePush(val);
	*(Hash*)(&val) = tunableName;
	nativePush(val);
	*(bool*)(&val) = defaultValue;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0) /*0xC74C33FCA52856D5*/ {
	uint64_t val;
	nativeInit(0xC74C33FCA52856D5);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_GET_ENTITY_IS_NETWORKED(Entity entity) /*0xC7827959479DCC78*/ {
	uint64_t val;
	nativeInit(0xC7827959479DCC78);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xC7ABAC5DE675EE3B() /*0xC7ABAC5DE675EE3B*/ {
	nativeInit(0xC7ABAC5DE675EE3B); return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_HOST_OF_THIS_SCRIPT() /*0xC7B4D79B01FA7A5C*/ {
	nativeInit(0xC7B4D79B01FA7A5C); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xC7BE335216B5EC7C() /*0xC7BE335216B5EC7C*/ {
	nativeInit(0xC7BE335216B5EC7C); return *(Any*)(nativeCall());
}
inline const char* NETWORK_NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(int* networkHandle) /*0xC82630132081BB6F*/ {
	uint64_t val;
	nativeInit(0xC82630132081BB6F);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Any NETWORK_0xC87E740D9F3872CC() /*0xC87E740D9F3872CC*/ {
	nativeInit(0xC87E740D9F3872CC); return *(Any*)(nativeCall());
}
inline Any NETWORK_NETWORK_ACTION_FOLLOW_INVITE() /*0xC88156EBB786F8D5*/ {
	nativeInit(0xC88156EBB786F8D5); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_GET_MEMBERSHIP(int* p0, int* clanMembership, int p2) /*0xC8BC2011F67B3411*/ {
	uint64_t val;
	nativeInit(0xC8BC2011F67B3411);
	*(int**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = clanMembership;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_CAN_SET_WAYPOINT() /*0xC927EC229934AF60*/ {
	nativeInit(0xC927EC229934AF60); return *(bool*)(nativeCall());
}
inline void NETWORK_0xC9B43A33D09CADA7(Any p0) /*0xC9B43A33D09CADA7*/ {
	uint64_t val;
	nativeInit(0xC9B43A33D09CADA7);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_SET_GAMER_INVITED_TO_TRANSITION(int* networkHandle) /*0xCA2C8073411ECDB6*/ {
	uint64_t val;
	nativeInit(0xCA2C8073411ECDB6);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xCA575C391FEA25CC(Any p0) /*0xCA575C391FEA25CC*/ {
	uint64_t val;
	nativeInit(0xCA575C391FEA25CC);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xCA94551B50B4932C(Any p0) /*0xCA94551B50B4932C*/ {
	uint64_t val;
	nativeInit(0xCA94551B50B4932C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_IN_SESSION() /*0xCA97246103B63917*/ {
	nativeInit(0xCA97246103B63917); return *(bool*)(nativeCall());
}
inline void NETWORK_0xCAE55F48D3D7875C(Any p0) /*0xCAE55F48D3D7875C*/ {
	uint64_t val;
	nativeInit(0xCAE55F48D3D7875C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_0xCB215C4B56A7FAE7(bool p0) /*0xCB215C4B56A7FAE7*/ {
	uint64_t val;
	nativeInit(0xCB215C4B56A7FAE7);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK_IS_TIME_LESS_THAN(int timeA, int timeB) /*0xCB2CF5148012C8D0*/ {
	uint64_t val;
	nativeInit(0xCB2CF5148012C8D0);
	*(int*)(&val) = timeA;
	nativePush(val);
	*(int*)(&val) = timeB;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_HAS_CONTROL_OF_DOOR(Hash doorHash) /*0xCB3C68ADB06195DF*/ {
	uint64_t val;
	nativeInit(0xCB3C68ADB06195DF);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_FILLOUT_PM_PLAYER_LIST(int* networkHandle, Any p1, Any p2) /*0xCBBD7C4991B64809*/ {
	uint64_t val;
	nativeInit(0xCBBD7C4991B64809);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_TALKER_PROXIMITY(float p0) /*0xCBF12D65F95AD686*/ {
	uint64_t val;
	nativeInit(0xCBF12D65F95AD686);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xCCA4318E1AB03F1F(Any* p0) /*0xCCA4318E1AB03F1F*/ {
	uint64_t val;
	nativeInit(0xCCA4318E1AB03F1F);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* NETWORK_GET_PLAYER_ADVANCED_MODIFIER_PRIVILEGES(int p0) /*0xCD67AD041A394C9C*/ {
	uint64_t val;
	nativeInit(0xCD67AD041A394C9C);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORK_0xCD71A4ECAB22709E(Entity entity) /*0xCD71A4ECAB22709E*/ {
	uint64_t val;
	nativeInit(0xCD71A4ECAB22709E);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline Entity NETWORK_NETWORK_GET_ENTITY_FROM_NETWORK_ID(int netId) /*0xCE4E5D9B0A4FF560*/ {
	uint64_t val;
	nativeInit(0xCE4E5D9B0A4FF560);
	*(int*)(&val) = netId;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline Player NETWORK_NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(int* networkHandle) /*0xCE5F689CF5A0A49D*/ {
	uint64_t val;
	nativeInit(0xCE5F689CF5A0A49D);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_GAMER_MUTED_BY_ME(int* p0) /*0xCE60DE011B6C7978*/ {
	uint64_t val;
	nativeInit(0xCE60DE011B6C7978);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1) /*0xCE86D8191B762107*/ {
	uint64_t val;
	nativeInit(0xCE86D8191B762107);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_IS_PRIVATE() /*0xCEF70AA5B3F89BA1*/ {
	nativeInit(0xCEF70AA5B3F89BA1); return *(bool*)(nativeCall());
}
inline int NETWORK_NETWORK_GET_NUM_PRESENCE_INVITES() /*0xCEFA968912D0F78D*/ {
	nativeInit(0xCEFA968912D0F78D); return *(int*)(nativeCall());
}
inline int NETWORK_GET_NUM_RESERVED_MISSION_VEHICLES(bool p0) /*0xCF3A965906452031*/ {
	uint64_t val;
	nativeInit(0xCF3A965906452031);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int NETWORK_0xCF61D4B4702EE9EB() /*0xCF61D4B4702EE9EB*/ {
	nativeInit(0xCF61D4B4702EE9EB); return *(int*)(nativeCall());
}
inline void NETWORK__NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(int netScene, const char* animDict, const char* animName) /*0xCF8BD3B0BD6D42D7*/ {
	uint64_t val;
	nativeInit(0xCF8BD3B0BD6D42D7);
	*(int*)(&val) = netScene;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xCFD115B373C0DF63(Any p0, Any* p1) /*0xCFD115B373C0DF63*/ {
	uint64_t val;
	nativeInit(0xCFD115B373C0DF63);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xCFEB46DCD7D8D5EB(bool p0) /*0xCFEB46DCD7D8D5EB*/ {
	uint64_t val;
	nativeInit(0xCFEB46DCD7D8D5EB);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xCFEB8AF24FC1D0BB(bool p0) /*0xCFEB8AF24FC1D0BB*/ {
	uint64_t val;
	nativeInit(0xCFEB8AF24FC1D0BB);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xD05D1A6C74DA3498(Any* p0, bool p1, Any* p2) /*0xD05D1A6C74DA3498*/ {
	uint64_t val;
	nativeInit(0xD05D1A6C74DA3498);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xD0A484CB2F829FBE() /*0xD0A484CB2F829FBE*/ {
	nativeInit(0xD0A484CB2F829FBE); return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_END_TUTORIAL_SESSION() /*0xD0AFAFF5A51D72F7*/ {
	nativeInit(0xD0AFAFF5A51D72F7);
	nativeCall();
}
inline void NETWORK_SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(bool p0, bool p1) /*0xD1065D68947E7B6E*/ {
	uint64_t val;
	nativeInit(0xD1065D68947E7B6E);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK__NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT_2(int numPlayers, bool p1, int instanceId) /*0xD1110739EEADB592*/ {
	uint64_t val;
	nativeInit(0xD1110739EEADB592);
	*(int*)(&val) = numPlayers;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = instanceId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_LEAVE_TRANSITION() /*0xD23A1A815D21DB19*/ {
	nativeInit(0xD23A1A815D21DB19); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xD313DE83394AF134() /*0xD313DE83394AF134*/ {
	nativeInit(0xD313DE83394AF134); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xD38C4A6D047C019D() /*0xD38C4A6D047C019D*/ {
	nativeInit(0xD38C4A6D047C019D); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xD39B3FFF8FFDD5BF(Any p0) /*0xD39B3FFF8FFDD5BF*/ {
	uint64_t val;
	nativeInit(0xD39B3FFF8FFDD5BF);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int netID, bool p1) /*0xD45B1FFCCD52FF19*/ {
	uint64_t val;
	nativeInit(0xD45B1FFCCD52FF19);
	*(int*)(&val) = netID;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_HANDLE_FROM_FRIEND(Player friendIndex, int* networkHandle, int bufferSize) /*0xD45CB817D7E177D2*/ {
	uint64_t val;
	nativeInit(0xD45CB817D7E177D2);
	*(Player*)(&val) = friendIndex;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xD53ACDBEF24A46E8() /*0xD53ACDBEF24A46E8*/ {
	nativeInit(0xD53ACDBEF24A46E8); return *(Any*)(nativeCall());
}
inline bool NETWORK_0xD5A4B59980401588(Any p0, Any p1, Any* p2, Any* p3) /*0xD5A4B59980401588*/ {
	uint64_t val;
	nativeInit(0xD5A4B59980401588);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_TEAM_ONLY_CHAT(bool toggle) /*0xD5B4883AC32F24C3*/ {
	uint64_t val;
	nativeInit(0xD5B4883AC32F24C3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int NETWORK_0xD66C9E72B3CC4982(Any* p0, Any p1) /*0xD66C9E72B3CC4982*/ {
	uint64_t val;
	nativeInit(0xD66C9E72B3CC4982);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK__NETWORK_SESSION_IS_PLAYER_VOTED_TO_KICK(Player player) /*0xD6D09A6F32F49EF1*/ {
	uint64_t val;
	nativeInit(0xD6D09A6F32F49EF1);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_CLOCK_TIME_OVERRIDDEN() /*0xD7C95D322FF57522*/ {
	nativeInit(0xD7C95D322FF57522); return *(bool*)(nativeCall());
}
inline bool NETWORK_IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(float p0, float p1, float p2, float p3) /*0xD82CF8E64C8729D8*/ {
	uint64_t val;
	nativeInit(0xD82CF8E64C8729D8);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_ENTITY_CAN_BLEND(Entity entity, bool toggle) /*0xD830567D88A1E873*/ {
	uint64_t val;
	nativeInit(0xD830567D88A1E873);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_SESSION_ACTIVE() /*0xD83C2B94E7508980*/ {
	nativeInit(0xD83C2B94E7508980); return *(bool*)(nativeCall());
}
inline Object NETWORK_NET_TO_OBJ(int netHandle) /*0xD8515F5FEA14CB3F*/ {
	uint64_t val;
	nativeInit(0xD8515F5FEA14CB3F);
	*(int*)(&val) = netHandle;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline void NETWORK_NETWORK_CLEAR_CLOCK_TIME_OVERRIDE() /*0xD972DF67326F966E*/ {
	nativeInit(0xD972DF67326F966E);
	nativeCall();
}
inline bool NETWORK_IS_NETWORK_VEHICLE_BEEN_DAMAGED_BY_ANY_OBJECT(float x, float y, float z) /*0xDBD2056652689917*/ {
	uint64_t val;
	nativeInit(0xDBD2056652689917);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_IS_SPHERE_VISIBLE_TO_PLAYER(Player player, float x, float y, float z, float scale) /*0xDC3A310219E5DA62*/ {
	uint64_t val;
	nativeInit(0xDC3A310219E5DA62);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK__FACEBOOK_SET_CREATE_CHARACTER_COMPLETE() /*0xDC48473142545431*/ {
	nativeInit(0xDC48473142545431); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_HANDLE_FROM_USER_ID(const char* userId, int* networkHandle, int bufferSize) /*0xDCD51DD8F87AEC5C*/ {
	uint64_t val;
	nativeInit(0xDCD51DD8F87AEC5C);
	*(const char**)(&val) = userId;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_FINDING_GAMERS() /*0xDDDF64C91BFCF0AA*/ {
	nativeInit(0xDDDF64C91BFCF0AA); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(Player player, bool toggle) /*0xDDF73E2B1FEC5AB4*/ {
	uint64_t val;
	nativeInit(0xDDF73E2B1FEC5AB4);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_IS_TIME_MORE_THAN(int timeA, int timeB) /*0xDE350F8651E4346C*/ {
	uint64_t val;
	nativeInit(0xDE350F8651E4346C);
	*(int*)(&val) = timeA;
	nativePush(val);
	*(int*)(&val) = timeB;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_FADE_OUT_ENTITY(Entity entity, bool normal, bool slow) /*0xDE564951F95E09ED*/ {
	uint64_t val;
	nativeInit(0xDE564951F95E09ED);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = normal;
	nativePush(val);
	*(bool*)(&val) = slow;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xDEB2B99A1AF1A2A6(Any p0) /*0xDEB2B99A1AF1A2A6*/ {
	uint64_t val;
	nativeInit(0xDEB2B99A1AF1A2A6);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_AM_I_MUTED_BY_GAMER(Any* p0) /*0xDF02A2C93F1F26DA*/ {
	uint64_t val;
	nativeInit(0xDF02A2C93F1F26DA);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_NETWORK_GET_PRESENCE_INVITE_ID(Any p0) /*0xDFF09646E12EC386*/ {
	uint64_t val;
	nativeInit(0xDFF09646E12EC386);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_SET_ENTITY_VISIBLE_IN_CUTSCENE(Any p0, bool p1, bool p2) /*0xE0031D3C8F36AB82*/ {
	uint64_t val;
	nativeInit(0xE0031D3C8F36AB82);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_CLEAR_VOICE_CHANNEL() /*0xE036A705F989E049*/ {
	nativeInit(0xE036A705F989E049);
	nativeCall();
}
inline void NETWORK_SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int netId, bool toggle) /*0xE05E81A888FA63C8*/ {
	uint64_t val;
	nativeInit(0xE05E81A888FA63C8);
	*(int*)(&val) = netId;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xE0A6138401BCB837() /*0xE0A6138401BCB837*/ {
	nativeInit(0xE0A6138401BCB837); return *(Any*)(nativeCall());
}
inline const char* NETWORK_NETWORK_GET_FRIEND_NAME(int friendIndex) /*0xE11EBBB2A783FE8B*/ {
	uint64_t val;
	nativeInit(0xE11EBBB2A783FE8B);
	*(int*)(&val) = friendIndex;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORK_SET_ENTITY_LOCALLY_INVISIBLE(Entity entity) /*0xE135A9FF3F5D05D8*/ {
	uint64_t val;
	nativeInit(0xE135A9FF3F5D05D8);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_USING_NETWORK_WEAPONTYPE(Any p0) /*0xE26CCFF8094D8C74*/ {
	uint64_t val;
	nativeInit(0xE26CCFF8094D8C74);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int NETWORK__NETWORK_GET_RANDOM_INT_IN_RANGE(int rangeStart, int rangeEnd) /*0xE30CF56F1EFA5F43*/ {
	uint64_t val;
	nativeInit(0xE30CF56F1EFA5F43);
	*(int*)(&val) = rangeStart;
	nativePush(val);
	*(int*)(&val) = rangeEnd;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool NETWORK__NETWORK_DOES_TUNABLE_EXIST_HASH(Hash tunableContext, Hash tunableName) /*0xE4E53E1419D81127*/ {
	uint64_t val;
	nativeInit(0xE4E53E1419D81127);
	*(Hash*)(&val) = tunableContext;
	nativePush(val);
	*(Hash*)(&val) = tunableName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_X_AFFECTS_GAMERS(Any p0) /*0xE532D6811B3A4D2A*/ {
	uint64_t val;
	nativeInit(0xE532D6811B3A4D2A);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_ACCESS_TUNABLE_FLOAT(const char* tunableContext, const char* tunableName, float* value) /*0xE5608CA7BC163A5F*/ {
	uint64_t val;
	nativeInit(0xE5608CA7BC163A5F);
	*(const char**)(&val) = tunableContext;
	nativePush(val);
	*(const char**)(&val) = tunableName;
	nativePush(val);
	*(float**)(&val) = value;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SESSION_GET_INVITER(int* networkHandle) /*0xE57397B4A3429DD0*/ {
	uint64_t val;
	nativeInit(0xE57397B4A3429DD0);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(bool p0) /*0xE5F773C1A1D9D168*/ {
	uint64_t val;
	nativeInit(0xE5F773C1A1D9D168);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xE64A3CA08DFA37A9(Any p0) /*0xE64A3CA08DFA37A9*/ {
	uint64_t val;
	nativeInit(0xE64A3CA08DFA37A9);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xE66C690248F11150(Entity p0, Any p1) /*0xE66C690248F11150*/ {
	uint64_t val;
	nativeInit(0xE66C690248F11150);
	*(Entity*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_OVERRIDE_CLOCK_TIME(int Hours, int Minutes, int Seconds) /*0xE679E3E06E363892*/ {
	uint64_t val;
	nativeInit(0xE679E3E06E363892);
	*(int*)(&val) = Hours;
	nativePush(val);
	*(int*)(&val) = Minutes;
	nativePush(val);
	*(int*)(&val) = Seconds;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_IS_PLAYER_IN_CUTSCENE(Player player) /*0xE73092F4157CD126*/ {
	uint64_t val;
	nativeInit(0xE73092F4157CD126);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_GET_LOCAL_HANDLE(int* networkHandle, int bufferSize) /*0xE86051786B66CD8E*/ {
	uint64_t val;
	nativeInit(0xE86051786B66CD8E);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_HAS_HEADSET() /*0xE870F9F1F7B4F1FA*/ {
	nativeInit(0xE870F9F1F7B4F1FA); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_GAMER_BLOCKED_BY_ME(Any* p0) /*0xE944C4F5AF1B5883*/ {
	uint64_t val;
	nativeInit(0xE944C4F5AF1B5883);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xE9B99B6853181409() /*0xE9B99B6853181409*/ {
	nativeInit(0xE9B99B6853181409);
	nativeCall();
}
inline Any NETWORK_0xEA14EEF5B7CD2C30() /*0xEA14EEF5B7CD2C30*/ {
	nativeInit(0xEA14EEF5B7CD2C30); return *(Any*)(nativeCall());
}
inline bool NETWORK__NETWORK_ACCESS_TUNABLE_bool_HASH(Hash tunableContext, Hash tunableName) /*0xEA16B69D93D71A45*/ {
	uint64_t val;
	nativeInit(0xEA16B69D93D71A45);
	*(Hash*)(&val) = tunableContext;
	nativePush(val);
	*(Hash*)(&val) = tunableName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_RESURRECT_LOCAL_PLAYER(float x, float y, float z, float heading, bool unk, bool changetime) /*0xEA23C49EAA83ACFB*/ {
	uint64_t val;
	nativeInit(0xEA23C49EAA83ACFB);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = unk;
	nativePush(val);
	*(bool*)(&val) = changetime;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_BAIL_TRANSITION() /*0xEAA572036990CD1B*/ {
	nativeInit(0xEAA572036990CD1B);
	nativeCall();
}
inline bool NETWORK_0xEBCAB9E5048434F4() /*0xEBCAB9E5048434F4*/ {
	nativeInit(0xEBCAB9E5048434F4); return *(bool*)(nativeCall());
}
inline void NETWORK_0xEBEFC2E77084F599(Any p0, const char* p1, bool p2) /*0xEBEFC2E77084F599*/ {
	uint64_t val;
	nativeInit(0xEBEFC2E77084F599);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xEBF8284D8CADEB53() /*0xEBF8284D8CADEB53*/ {
	nativeInit(0xEBF8284D8CADEB53);
	nativeCall();
}
inline bool NETWORK_0xEBFA8D50ADDC54C4(Any p0) /*0xEBFA8D50ADDC54C4*/ {
	uint64_t val;
	nativeInit(0xEBFA8D50ADDC54C4);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_SET_NETWORK_VEHICLE_RESPOT_TIMER(int netId, int time) /*0xEC51713AB6EC36E8*/ {
	uint64_t val;
	nativeInit(0xEC51713AB6EC36E8);
	*(int*)(&val) = netId;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_BAD_SPORT_PLAYER_LEFT_DETECTED(int* networkHandle, int p1, int p2) /*0xEC5E3AF5289DCA81*/ {
	uint64_t val;
	nativeInit(0xEC5E3AF5289DCA81);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_HOST_CLOSED(int p0, int maxPlayers) /*0xED34C0C02C098BB7*/ {
	uint64_t val;
	nativeInit(0xED34C0C02C098BB7);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = maxPlayers;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any NETWORK_0xEDF7F927136C224B() /*0xEDF7F927136C224B*/ {
	nativeInit(0xEDF7F927136C224B); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_CLAN_PLAYER_GET_DESC(int* clanDesc, int bufferSize, int* networkHandle) /*0xEEE6EACBE8874FBA*/ {
	uint64_t val;
	nativeInit(0xEEE6EACBE8874FBA);
	*(int**)(&val) = clanDesc;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_CHANGE_TRANSITION_SLOTS(Any p0, Any p1) /*0xEEEDA5E6D7080987*/ {
	uint64_t val;
	nativeInit(0xEEEDA5E6D7080987);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xEF0912DDF7C4CB4B() /*0xEF0912DDF7C4CB4B*/ {
	nativeInit(0xEF0912DDF7C4CB4B); return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_TRANSITION_CREATOR_HANDLE(Any* p0) /*0xEF26739BCD9907D5*/ {
	uint64_t val;
	nativeInit(0xEF26739BCD9907D5);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_SET_VOICE_CHANNEL(Any p0) /*0xEF6212C2EFEF1A23*/ {
	uint64_t val;
	nativeInit(0xEF6212C2EFEF1A23);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_IS_CABLE_CONNECTED() /*0xEFFB25453D8600F9*/ {
	nativeInit(0xEFFB25453D8600F9); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_REMOVE_PRESENCE_INVITE(Any p0) /*0xF0210268DB0974B1*/ {
	uint64_t val;
	nativeInit(0xF0210268DB0974B1);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xF03755696450470C() /*0xF03755696450470C*/ {
	nativeInit(0xF03755696450470C);
	nativeCall();
}
inline void NETWORK_0xF083835B70BA9BFE() /*0xF083835B70BA9BFE*/ {
	nativeInit(0xF083835B70BA9BFE);
	nativeCall();
}
inline void NETWORK_0xF1B84178F8674195(Any p0) /*0xF1B84178F8674195*/ {
	uint64_t val;
	nativeInit(0xF1B84178F8674195);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK__NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK(Entity entity, bool toggle) /*0xF1CA12B18AEF5298*/ {
	uint64_t val;
	nativeInit(0xF1CA12B18AEF5298);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xF1EEA2DDA9FFA69D(Any p0) /*0xF1EEA2DDA9FFA69D*/ {
	uint64_t val;
	nativeInit(0xF1EEA2DDA9FFA69D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Entity entity, int netScene, const char* animDict, const char* animName, float speed, float speedMulitiplier, int flag) /*0xF2404D68CBC855FA*/ {
	uint64_t val;
	nativeInit(0xF2404D68CBC855FA);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = netScene;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = speedMulitiplier;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xF2EAC213D5EA0623() /*0xF2EAC213D5EA0623*/ {
	nativeInit(0xF2EAC213D5EA0623); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_GAMER_HAS_HEADSET(Any* p0) /*0xF2FD55CB574BCC55*/ {
	uint64_t val;
	nativeInit(0xF2FD55CB574BCC55);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_IS_SOLO() /*0xF3929C2379B60CCE*/ {
	nativeInit(0xF3929C2379B60CCE); return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_IS_SESSION_BUSY() /*0xF4435D66A8E2905E*/ {
	nativeInit(0xF4435D66A8E2905E); return *(bool*)(nativeCall());
}
inline void NETWORK_0xF45352426FF3A4F0(int* clanDesc, int bufferSize, int* networkHandle) /*0xF45352426FF3A4F0*/ {
	uint64_t val;
	nativeInit(0xF45352426FF3A4F0);
	*(int**)(&val) = clanDesc;
	nativePush(val);
	*(int*)(&val) = bufferSize;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xF46A1E03E8755980(bool p0) /*0xF46A1E03E8755980*/ {
	uint64_t val;
	nativeInit(0xF46A1E03E8755980);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xF49ABC20D8552257(Any p0) /*0xF49ABC20D8552257*/ {
	uint64_t val;
	nativeInit(0xF49ABC20D8552257);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xF53E48461B71EECB(Any p0) /*0xF53E48461B71EECB*/ {
	uint64_t val;
	nativeInit(0xF53E48461B71EECB);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_IS_TIME_EQUAL_TO(int timeA, int timeB) /*0xF5BC95857BD6D512*/ {
	uint64_t val;
	nativeInit(0xF5BC95857BD6D512);
	*(int*)(&val) = timeA;
	nativePush(val);
	*(int*)(&val) = timeB;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORK_NETWORK_FIND_MATCHED_GAMERS(int attribute, float p1, float lowerLimit, float upperLimit) /*0xF7B2CFDE5C9F700D*/ {
	uint64_t val;
	nativeInit(0xF7B2CFDE5C9F700D);
	*(int*)(&val) = attribute;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = lowerLimit;
	nativePush(val);
	*(float*)(&val) = upperLimit;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_NETWORK_SET_FRIENDLY_FIRE_OPTION(bool toggle) /*0xF808475FA571D823*/ {
	uint64_t val;
	nativeInit(0xF808475FA571D823);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xF814FEC6A19FD6E0() /*0xF814FEC6A19FD6E0*/ {
	nativeInit(0xF814FEC6A19FD6E0);
	nativeCall();
}
inline void NETWORK_0xF98DDE0A8ED09323(bool p0) /*0xF98DDE0A8ED09323*/ {
	uint64_t val;
	nativeInit(0xF98DDE0A8ED09323);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_0xF9B83B77929D8863() /*0xF9B83B77929D8863*/ {
	nativeInit(0xF9B83B77929D8863); return *(bool*)(nativeCall());
}
inline bool NETWORK_0xF9E1CCAE8BA4C281(Any p0, Any p1, Any* p2, Any* p3) /*0xF9E1CCAE8BA4C281*/ {
	uint64_t val;
	nativeInit(0xF9E1CCAE8BA4C281);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_0xFA2888E3833C8E96() /*0xFA2888E3833C8E96*/ {
	nativeInit(0xFA2888E3833C8E96);
	nativeCall();
}
inline void NETWORK_NETWORK_SESSION_KICK_PLAYER(Player player) /*0xFA8904DC5F304220*/ {
	uint64_t val;
	nativeInit(0xFA8904DC5F304220);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_ACCEPT_PRESENCE_INVITE(Any p0) /*0xFA91550DF9318B22*/ {
	uint64_t val;
	nativeInit(0xFA91550DF9318B22);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORK_SET_PLAYER_VISIBLE_LOCALLY(Player player, bool toggle) /*0xFAA10F1FAFB11AF2*/ {
	uint64_t val;
	nativeInit(0xFAA10F1FAFB11AF2);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xFAE628F1E9ADB239(Any p0, Any p1, Any p2) /*0xFAE628F1E9ADB239*/ {
	uint64_t val;
	nativeInit(0xFAE628F1E9ADB239);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xFB1F9381E80FA13F(int p0, Any* p1) /*0xFB1F9381E80FA13F*/ {
	uint64_t val;
	nativeInit(0xFB1F9381E80FA13F);
	*(int*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORK_NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE() /*0xFB3272229A82C759*/ {
	nativeInit(0xFB3272229A82C759);
	nativeCall();
}
inline void NETWORK_0xFB680D403909DC70(Any p0, Any p1) /*0xFB680D403909DC70*/ {
	uint64_t val;
	nativeInit(0xFB680D403909DC70);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORK_0xFB8F2A6F3DF08CBE() /*0xFB8F2A6F3DF08CBE*/ {
	nativeInit(0xFB8F2A6F3DF08CBE);
	nativeCall();
}
inline Any NETWORK_0xFBC5E768C7A77A6A() /*0xFBC5E768C7A77A6A*/ {
	nativeInit(0xFBC5E768C7A77A6A); return *(Any*)(nativeCall());
}
inline bool NETWORK_NETWORK_SESSION_IS_CLOSED_FRIENDS() /*0xFBCFA2EA2E206890*/ {
	nativeInit(0xFBCFA2EA2E206890); return *(bool*)(nativeCall());
}
inline void NETWORK_0xFC18DB55AE19E046(bool p0) /*0xFC18DB55AE19E046*/ {
	uint64_t val;
	nativeInit(0xFC18DB55AE19E046);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORK_NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED() /*0xFD00798DBA7523DD*/ {
	nativeInit(0xFD00798DBA7523DD); return *(bool*)(nativeCall());
}
inline void NETWORK_0xFD75DABC0957BF33(bool p0) /*0xFD75DABC0957BF33*/ {
	uint64_t val;
	nativeInit(0xFD75DABC0957BF33);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any NETWORK_0xFD8B834A8BA05048() /*0xFD8B834A8BA05048*/ {
	nativeInit(0xFD8B834A8BA05048); return *(Any*)(nativeCall());
}
inline Any NETWORK_0xFFE1E5B792D92B34() /*0xFFE1E5B792D92B34*/ {
	nativeInit(0xFFE1E5B792D92B34); return *(Any*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_EARN_FROM_ROCKSTAR(int amount) /*0x02CE1D6AC0FC73EA*/ {
	uint64_t val;
	nativeInit(0x02CE1D6AC0FC73EA);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_DELETE_CHARACTER(int characterIndex, bool p1, bool p2) /*0x05A50AF38947EB8D*/ {
	uint64_t val;
	nativeInit(0x05A50AF38947EB8D);
	*(int*)(&val) = characterIndex;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_BOUNTY(int amount, int* networkHandle, Any* p2, Any p3) /*0x131BB5DA15453ACF*/ {
	uint64_t val;
	nativeInit(0x131BB5DA15453ACF);
	*(int*)(&val) = amount;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_TAXI(int amount, bool p1, bool p2) /*0x17C3A7D31EAE39F9*/ {
	uint64_t val;
	nativeInit(0x17C3A7D31EAE39F9);
	*(int*)(&val) = amount;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_NETWORK_CAN_SHARE_JOB_CASH() /*0x1C2473301B1C66BA*/ {
	nativeInit(0x1C2473301B1C66BA); return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_BETTING(Any p0, Any p1, Any* p2, bool p3, bool p4) /*0x1C436FD11FFA692F*/ {
	uint64_t val;
	nativeInit(0x1C436FD11FFA692F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline const char* NETWORKCASH_PROCESS_CASH_GIFT(int* p0, int* p1, const char* p2) /*0x20194D48EAEC9A41*/ {
	uint64_t val;
	nativeInit(0x20194D48EAEC9A41);
	*(int**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_CASH_DROP(int amount, bool p1, bool p2) /*0x289016EC778D60E0*/ {
	uint64_t val;
	nativeInit(0x289016EC778D60E0);
	*(int*)(&val) = amount;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_BOUNTY(Any p0, bool p1, bool p2) /*0x29B260B84947DFCC*/ {
	uint64_t val;
	nativeInit(0x29B260B84947DFCC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, bool p2) /*0x2B171E6B2F64D8DF*/ {
	uint64_t val;
	nativeInit(0x2B171E6B2F64D8DF);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_NETWORK_CAN_BET(Any p0) /*0x3A54E33660DED67F*/ {
	uint64_t val;
	nativeInit(0x3A54E33660DED67F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_INITIALIZE_CASH(int p1, int p2) /*0x3DA5ECD1A56CBA6D*/ {
	uint64_t val;
	nativeInit(0x3DA5ECD1A56CBA6D);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_PERSONAL_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) /*0x3F4D00167E41E0AD*/ {
	uint64_t val;
	nativeInit(0x3F4D00167E41E0AD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_NOT_BADSPORT(int amount) /*0x4337511FA8221D36*/ {
	uint64_t val;
	nativeInit(0x4337511FA8221D36);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_HOLDUPS(int amount) /*0x45B8154E077D9E4D*/ {
	uint64_t val;
	nativeInit(0x45B8154E077D9E4D);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_AI_TARGET_KILL(Any p0, Any p1) /*0x515B4A22E4D3C6D7*/ {
	uint64_t val;
	nativeInit(0x515B4A22E4D3C6D7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_BOAT_PICKUP(Any p0, bool p1, bool p2) /*0x524EE43A37232C00*/ {
	uint64_t val;
	nativeInit(0x524EE43A37232C00);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int value, int* networkHandle) /*0x56A3B51944C50598*/ {
	uint64_t val;
	nativeInit(0x56A3B51944C50598);
	*(int*)(&val) = value;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline int NETWORKCASH_NETWORK_GET_VC_BALANCE() /*0x5CBAD97E059E1B94*/ {
	nativeInit(0x5CBAD97E059E1B94); return *(int*)(nativeCall());
}
inline bool NETWORKCASH_NETWORK_CAN_RECEIVE_PLAYER_CASH(Any p0, Any p1, Any p2, Any p3) /*0x5D17BE59D2123284*/ {
	uint64_t val;
	nativeInit(0x5D17BE59D2123284);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_PAY_EMPLOYEE_WAGE(Any p0, bool p1, bool p2) /*0x5FD5ED82CBBE9989*/ {
	uint64_t val;
	nativeInit(0x5FD5ED82CBBE9989);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_BEND_JOB(int amount, const char* heistHash) /*0x61326EE6DF15B0CA*/ {
	uint64_t val;
	nativeInit(0x61326EE6DF15B0CA);
	*(int*)(&val) = amount;
	nativePush(val);
	*(const char**)(&val) = heistHash;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_BUY_PROPERTY(float propertyCost, Hash propertyName, bool p2, bool p3) /*0x650A08A280870AF6*/ {
	uint64_t val;
	nativeInit(0x650A08A280870AF6);
	*(float*)(&val) = propertyCost;
	nativePush(val);
	*(Hash*)(&val) = propertyName;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2) /*0x6816FB4416760775*/ {
	uint64_t val;
	nativeInit(0x6816FB4416760775);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_FROM_ROCKSTAR(int bank, bool p1, bool p2) /*0x6A445B64ED7ABEB5*/ {
	uint64_t val;
	nativeInit(0x6A445B64ED7ABEB5);
	*(int*)(&val) = bank;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_CINEMA(Any p0, Any p1, bool p2, bool p3) /*0x6B38ECB05A63A685*/ {
	uint64_t val;
	nativeInit(0x6B38ECB05A63A685);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_BUY_PASSIVE_MODE(Any p0, bool p1, bool p2) /*0x6D3A430D1A809179*/ {
	uint64_t val;
	nativeInit(0x6D3A430D1A809179);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_BUY_REVEAL_PLAYERS(Any p0, bool p1, bool p2) /*0x6E176F1B18BC0637*/ {
	uint64_t val;
	nativeInit(0x6E176F1B18BC0637);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_DAILY_OBJECTIVE(int p0, const char* p1, int p2) /*0x6EA318C91C1A8786*/ {
	uint64_t val;
	nativeInit(0x6EA318C91C1A8786);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_0x6FCF8DDEA146C45B(int p0) /*0x6FCF8DDEA146C45B*/ {
	uint64_t val;
	nativeInit(0x6FCF8DDEA146C45B);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORKCASH_0x7303E27CC6532080(Any p0, bool p1, bool p2, bool p3, Any* p4, Any p5) /*0x7303E27CC6532080*/ {
	uint64_t val;
	nativeInit(0x7303E27CC6532080);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_BUY_AIRSTRIKE(int cost, bool p1, bool p2) /*0x763B4BD305338F19*/ {
	uint64_t val;
	nativeInit(0x763B4BD305338F19);
	*(int*)(&val) = cost;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int NETWORKCASH_NETWORK_GET_VC_BANK_BALANCE() /*0x76EF28DA05EA395A*/ {
	nativeInit(0x76EF28DA05EA395A); return *(int*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_BUY_BOUNTY(int amount, Player victim, bool p2, bool p3) /*0x7B718E197453F2D9*/ {
	uint64_t val;
	nativeInit(0x7B718E197453F2D9);
	*(int*)(&val) = amount;
	nativePush(val);
	*(Player*)(&val) = victim;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_HELI_PICKUP(Any p0, bool p1, bool p2) /*0x7BF1D73DB2ECA492*/ {
	uint64_t val;
	nativeInit(0x7BF1D73DB2ECA492);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_0x7C4FCCD2E4DEB394() /*0x7C4FCCD2E4DEB394*/ {
	nativeInit(0x7C4FCCD2E4DEB394); return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_PLAYER_HEALTHCARE(Any p0, Any p1, bool p2, bool p3) /*0x7C99101F7FCE2EE5*/ {
	uint64_t val;
	nativeInit(0x7C99101F7FCE2EE5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_TELESCOPE(Any p0, bool p1, bool p2) /*0x7FE61782AD94CC09*/ {
	uint64_t val;
	nativeInit(0x7FE61782AD94CC09);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_ARREST_BAIL(Any p0, bool p1, bool p2) /*0x812F5488B1B2A299*/ {
	uint64_t val;
	nativeInit(0x812F5488B1B2A299);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_NETWORK_MONEY_CAN_BET(Any p0, bool p1, bool p2) /*0x81404F3DC124FE5B*/ {
	uint64_t val;
	nativeInit(0x81404F3DC124FE5B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_BUY_HELI_STRIKE(int cost, bool p1, bool p2) /*0x81AA4610E3FD3A69*/ {
	uint64_t val;
	nativeInit(0x81AA4610E3FD3A69);
	*(int*)(&val) = cost;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_REQUEST_JOB(Any p0, bool p1, bool p2) /*0x8204DA7934DF3155*/ {
	uint64_t val;
	nativeInit(0x8204DA7934DF3155);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_BETTING(int amount, const char* p1) /*0x827A5BA1A44ACA6D*/ {
	uint64_t val;
	nativeInit(0x827A5BA1A44ACA6D);
	*(int*)(&val) = amount;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_PROPERTY(int amount, Hash propertyName) /*0x849648349D77F5C5*/ {
	uint64_t val;
	nativeInit(0x849648349D77F5C5);
	*(int*)(&val) = amount;
	nativePush(val);
	*(Hash*)(&val) = propertyName;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_BUY_FAIRGROUND_RIDE(int amountSpent, Any p1, bool p2, bool p3) /*0x8A7B3952DD64D2B5*/ {
	uint64_t val;
	nativeInit(0x8A7B3952DD64D2B5);
	*(int*)(&val) = amountSpent;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_PAY_MATCH_ENTRY_FEE(int value, int* p1, bool p2, bool p3) /*0x9346E14F2AF74D46*/ {
	uint64_t val;
	nativeInit(0x9346E14F2AF74D46);
	*(int*)(&val) = value;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_ROBBED_BY_MUGGER(int amount, bool p1, bool p2) /*0x995A65F15F581359*/ {
	uint64_t val;
	nativeInit(0x995A65F15F581359);
	*(int*)(&val) = amount;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_SPENT_REQUEST_HEIST(Any p0, bool p1, bool p2) /*0x9D26502BB97BFE62*/ {
	uint64_t val;
	nativeInit(0x9D26502BB97BFE62);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int amount, Hash vehicleModel, int* networkHandle, bool notBankrupt, bool hasTheMoney) /*0x9FF28D88C766E3E8*/ {
	uint64_t val;
	nativeInit(0x9FF28D88C766E3E8);
	*(int*)(&val) = amount;
	nativePush(val);
	*(Hash*)(&val) = vehicleModel;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	*(bool*)(&val) = notBankrupt;
	nativePush(val);
	*(bool*)(&val) = hasTheMoney;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_GANG_PICKUP(int amount) /*0xA03D4ACE0A3284CE*/ {
	uint64_t val;
	nativeInit(0xA03D4ACE0A3284CE);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline int NETWORKCASH_NETWORK_GET_VC_WALLET_BALANCE(int character) /*0xA40F9C2623F6A8B5*/ {
	uint64_t val;
	nativeInit(0xA40F9C2623F6A8B5);
	*(int*)(&val) = character;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_BUY_OFFTHERADAR(Any p0, bool p1, bool p2) /*0xA628A745E2275C5D*/ {
	uint64_t val;
	nativeInit(0xA628A745E2275C5D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_BULL_SHARK(int amount, bool p1, bool p2) /*0xA6DD8458CE24012C*/ {
	uint64_t val;
	nativeInit(0xA6DD8458CE24012C);
	*(int*)(&val) = amount;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline const char* NETWORKCASH__NETWORK_GET_BANK_BALANCE_STRING() /*0xA6FA3979BED01B81*/ {
	nativeInit(0xA6FA3979BED01B81); return *(const char**)(nativeCall());
}
inline void NETWORKCASH_NETWORK_CLEAR_CHARACTER_WALLET(Any p0) /*0xA921DED15FDF28F5*/ {
	uint64_t val;
	nativeInit(0xA921DED15FDF28F5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_NETWORK_CAN_SPEND_MONEY(Any p0, bool p1, bool p2, bool p3, Any p4) /*0xAB3CAA6B422164DA*/ {
	uint64_t val;
	nativeInit(0xAB3CAA6B422164DA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_CALL_PLAYER(Any p0, Any* p1, bool p2, bool p3) /*0xACDE7185B374177C*/ {
	uint64_t val;
	nativeInit(0xACDE7185B374177C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_PAY_UTILITY_BILL(Any p0, bool p1, bool p2) /*0xAFE08B35EC0C9EAE*/ {
	uint64_t val;
	nativeInit(0xAFE08B35EC0C9EAE);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_AMMO_DROP(Any p0, bool p1, bool p2) /*0xB162DC95C0A3317B*/ {
	uint64_t val;
	nativeInit(0xB162DC95C0A3317B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_CRATE_DROP(int amount) /*0xB1CC1B9EC3007A2A*/ {
	uint64_t val;
	nativeInit(0xB1CC1B9EC3007A2A);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_PROSTITUTES(Any p0, bool p1, bool p2) /*0xB21B89501CFAC79E*/ {
	uint64_t val;
	nativeInit(0xB21B89501CFAC79E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_JOB(int amount, const char* p1) /*0xB2CC4836834E8A98*/ {
	uint64_t val;
	nativeInit(0xB2CC4836834E8A98);
	*(int*)(&val) = amount;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_EARN_FROM_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) /*0xB539BD8A4C1EECF8*/ {
	uint64_t val;
	nativeInit(0xB539BD8A4C1EECF8);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_NO_COPS(Any p0, bool p1, bool p2) /*0xD5BB406F4E04019F*/ {
	uint64_t val;
	nativeInit(0xD5BB406F4E04019F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_BUY_HEALTHCARE(int cost, bool p1, bool p2) /*0xD9B067E55253E3DD*/ {
	uint64_t val;
	nativeInit(0xD9B067E55253E3DD);
	*(int*)(&val) = cost;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_HOLDUPS(Any p0, bool p1, bool p2) /*0xD9B86B9872039763*/ {
	uint64_t val;
	nativeInit(0xD9B86B9872039763);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_0xDC18531D7019A535(Any p0, Any p1) /*0xDC18531D7019A535*/ {
	uint64_t val;
	nativeInit(0xDC18531D7019A535);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool NETWORKCASH_0xE154B48B68EF72BC(Any p0) /*0xE154B48B68EF72BC*/ {
	uint64_t val;
	nativeInit(0xE154B48B68EF72BC);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, bool p2, bool p3) /*0xE1B13771A843C4F6*/ {
	uint64_t val;
	nativeInit(0xE1B13771A843C4F6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool NETWORKCASH_0xE260E0BB9CD995AC(Any p0) /*0xE260E0BB9CD995AC*/ {
	uint64_t val;
	nativeInit(0xE260E0BB9CD995AC);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_HIRE_MUGGER(Any p0, bool p1, bool p2) /*0xE404BFB981665BF0*/ {
	uint64_t val;
	nativeInit(0xE404BFB981665BF0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_HIRE_MERCENARY(Any p0, bool p1, bool p2) /*0xE7B80E2BF9D80BD6*/ {
	uint64_t val;
	nativeInit(0xE7B80E2BF9D80BD6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_SPENT_CARWASH(Any p0, Any p1, Any p2, bool p3, bool p4) /*0xEC03C719DB2F4306*/ {
	uint64_t val;
	nativeInit(0xEC03C719DB2F4306);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline Any NETWORKCASH_NETWORK_EARN_FROM_PICKUP(int amount) /*0xED1517D3AF17C698*/ {
	uint64_t val;
	nativeInit(0xED1517D3AF17C698);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_SPENT_IN_STRIPCLUB(Any p0, bool p1, Any p2, bool p3) /*0xEE99784E4467689C*/ {
	uint64_t val;
	nativeInit(0xEE99784E4467689C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_BUY_ITEM(Ped player, Hash item, Any p2, Any p3, bool p4, const char* item_name, Any p6, Any p7, Any p8, bool p9) /*0xF0077C797F66A355*/ {
	uint64_t val;
	nativeInit(0xF0077C797F66A355);
	*(Ped*)(&val) = player;
	nativePush(val);
	*(Hash*)(&val) = item;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(const char**)(&val) = item_name;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_ARMOUR_TRUCK(int amount) /*0xF514621E8EA463D0*/ {
	uint64_t val;
	nativeInit(0xF514621E8EA463D0);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline Any NETWORKCASH_0xF70EFA14FE091429(Any p0) /*0xF70EFA14FE091429*/ {
	uint64_t val;
	nativeInit(0xF70EFA14FE091429);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void NETWORKCASH_NETWORK_EARN_FROM_IMPORT_EXPORT(Any p0, Any p1) /*0xF92A014A634442D6*/ {
	uint64_t val;
	nativeInit(0xF92A014A634442D6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_REFUND_CASH(int m_Index, const char* szType, const char* szReason, bool bUnk) /*0xF9C812CD7C46E817*/ {
	uint64_t val;
	nativeInit(0xF9C812CD7C46E817);
	*(int*)(&val) = m_Index;
	nativePush(val);
	*(const char**)(&val) = szType;
	nativePush(val);
	*(const char**)(&val) = szReason;
	nativePush(val);
	*(bool*)(&val) = bUnk;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH_NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int amount, int* networkHandle) /*0xFB18DF9CB95E0105*/ {
	uint64_t val;
	nativeInit(0xFB18DF9CB95E0105);
	*(int*)(&val) = amount;
	nativePush(val);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline void NETWORKCASH__NETWORK_EARN_FROM_AMBIENT_JOB(int p0, const char* p1, Any* p2) /*0xFB6DB092FBAE29E6*/ {
	uint64_t val;
	nativeInit(0xFB6DB092FBAE29E6);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0x024A60DEB0EA69F0(Any p0, Player player, float p2, int p3) /*0x024A60DEB0EA69F0*/ {
	uint64_t val;
	nativeInit(0x024A60DEB0EA69F0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_0x0378C08504160D0D(Any p0) /*0x0378C08504160D0D*/ {
	uint64_t val;
	nativeInit(0x0378C08504160D0D);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x03C27E13B42A0E82(Hash doorHash, float p1, bool p2, bool p3) /*0x03C27E13B42A0E82*/ {
	uint64_t val;
	nativeInit(0x03C27E13B42A0E82);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_CREATE_MONEY_PICKUPS(float x, float y, float z, int value, int amount, Hash model) /*0x0589B5E791CE9B2B*/ {
	uint64_t val;
	nativeInit(0x0589B5E791CE9B2B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline Hash OBJECT__GET_WEAPON_HASH_FROM_PICKUP(Pickup pickupHash) /*0x08F96CA6C551AD51*/ {
	uint64_t val;
	nativeInit(0x08F96CA6C551AD51);
	*(Pickup*)(&val) = pickupHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void OBJECT_0x0BF3B3BD47D79C08(Hash hash, int p1) /*0x0BF3B3BD47D79C08*/ {
	uint64_t val;
	nativeInit(0x0BF3B3BD47D79C08);
	*(Hash*)(&val) = hash;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0x11D1E53A726891FE(Object object) /*0x11D1E53A726891FE*/ {
	uint64_t val;
	nativeInit(0x11D1E53A726891FE);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Pickup OBJECT__CREATE_PORTABLE_PICKUP_2(Hash pickupHash, float x, float y, float z, bool placeOnGround, Hash modelHash) /*0x125494B98A21AAF7*/ {
	uint64_t val;
	nativeInit(0x125494B98A21AAF7);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = placeOnGround;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline int OBJECT_0x160AA1B32F6139B8(Hash doorHash) /*0x160AA1B32F6139B8*/ {
	uint64_t val;
	nativeInit(0x160AA1B32F6139B8);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Vector3 OBJECT__GET_OBJECT_OFFSET_FROM_COORDS(float xPos, float yPos, float zPos, float heading, float xOffset, float yOffset, float zOffset) /*0x163E252DE035A133*/ {
	uint64_t val;
	nativeInit(0x163E252DE035A133);
	*(float*)(&val) = xPos;
	nativePush(val);
	*(float*)(&val) = yPos;
	nativePush(val);
	*(float*)(&val) = zPos;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Any OBJECT_0x163F8B586BC95F2A(Any coords, float radius, Hash modelHash, float x, float y, float z, Vector3* p6, int p7) /*0x163F8B586BC95F2A*/ {
	uint64_t val;
	nativeInit(0x163F8B586BC95F2A);
	*(Any*)(&val) = coords;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Vector3**)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool OBJECT_0x1761DC5D8471CBAA(Any p0, Player player, int p2) /*0x1761DC5D8471CBAA*/ {
	uint64_t val;
	nativeInit(0x1761DC5D8471CBAA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x190428512B240692(Any p0, bool p1, bool p2, bool p3, bool p4) /*0x190428512B240692*/ {
	uint64_t val;
	nativeInit(0x190428512B240692);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline Vector3 OBJECT_GET_PICKUP_COORDS(Pickup pickup) /*0x225B8B35C88029B3*/ {
	uint64_t val;
	nativeInit(0x225B8B35C88029B3);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline float OBJECT_0x260EE4FDBDF4DB01(Any p0) /*0x260EE4FDBDF4DB01*/ {
	uint64_t val;
	nativeInit(0x260EE4FDBDF4DB01);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void OBJECT_REMOVE_ALL_PICKUPS_OF_TYPE(Hash pickupHash) /*0x27F9D613092159CF*/ {
	uint64_t val;
	nativeInit(0x27F9D613092159CF);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_IS_POINT_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, bool p10, bool p11) /*0x2A70BAE8883E4C81*/ {
	uint64_t val;
	nativeInit(0x2A70BAE8883E4C81);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Pickup OBJECT_CREATE_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, bool placeOnGround, Hash modelHash) /*0x2EAF1FDB2FB55698*/ {
	uint64_t val;
	nativeInit(0x2EAF1FDB2FB55698);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = placeOnGround;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline bool OBJECT_SLIDE_OBJECT(Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, bool collision) /*0x2FDFF4107B8C1147*/ {
	uint64_t val;
	nativeInit(0x2FDFF4107B8C1147);
	*(Object*)(&val) = object;
	nativePush(val);
	*(float*)(&val) = toX;
	nativePush(val);
	*(float*)(&val) = toY;
	nativePush(val);
	*(float*)(&val) = toZ;
	nativePush(val);
	*(float*)(&val) = speedX;
	nativePush(val);
	*(float*)(&val) = speedY;
	nativePush(val);
	*(float*)(&val) = speedZ;
	nativePush(val);
	*(bool*)(&val) = collision;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x318516E02DE3ECE2(float p0) /*0x318516E02DE3ECE2*/ {
	uint64_t val;
	nativeInit(0x318516E02DE3ECE2);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0x31F924B53EADDF65(bool p0) /*0x31F924B53EADDF65*/ {
	uint64_t val;
	nativeInit(0x31F924B53EADDF65);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_REMOVE_PICKUP(Pickup pickup) /*0x3288D8ACAECD2AB2*/ {
	uint64_t val;
	nativeInit(0x3288D8ACAECD2AB2);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	nativeCall();
}
inline void OBJECT__HIGHLIGHT_PLACEMENT_COORDS(float x, float y, float z, int colorIndex) /*0x3430676B11CDF21D*/ {
	uint64_t val;
	nativeInit(0x3430676B11CDF21D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = colorIndex;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0x372EF6699146A1E4(Any p0, Entity entity, float p2, int p3) /*0x372EF6699146A1E4*/ {
	uint64_t val;
	nativeInit(0x372EF6699146A1E4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_IS_ANY_OBJECT_NEAR_POINT(float x, float y, float z, float range, bool p4) /*0x397DC58FF00298D1*/ {
	uint64_t val;
	nativeInit(0x397DC58FF00298D1);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(Object object, bool toggle) /*0x406137F8EF90EAF5*/ {
	uint64_t val;
	nativeInit(0x406137F8EF90EAF5);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0x46494A2475701343(float p0, float p1, float p2, float p3, Hash modelHash, bool p5) /*0x46494A2475701343*/ {
	uint64_t val;
	nativeInit(0x46494A2475701343);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_REMOVE_DOOR_FROM_SYSTEM(Hash doorHash) /*0x464D8E1427156FE4*/ {
	uint64_t val;
	nativeInit(0x464D8E1427156FE4);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0x4A39DB43E47CF3AA(Any p0) /*0x4A39DB43E47CF3AA*/ {
	uint64_t val;
	nativeInit(0x4A39DB43E47CF3AA);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int OBJECT_0x4BC2854478F3A749(Hash doorHash) /*0x4BC2854478F3A749*/ {
	uint64_t val;
	nativeInit(0x4BC2854478F3A749);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void OBJECT_0x4D89D607CB3DD1D2(Object object, bool toggle) /*0x4D89D607CB3DD1D2*/ {
	uint64_t val;
	nativeInit(0x4D89D607CB3DD1D2);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Object OBJECT_GET_PICKUP_OBJECT(Pickup pickup) /*0x5099BC55630B25AE*/ {
	uint64_t val;
	nativeInit(0x5099BC55630B25AE);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline Object OBJECT_CREATE_OBJECT(Object modelHash, float x, float y, float z, bool isNetwork, bool thisScriptCheck, bool dynamic) /*0x509D5878EB39E842*/ {
	uint64_t val;
	nativeInit(0x509D5878EB39E842);
	*(Object*)(&val) = modelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	*(bool*)(&val) = dynamic;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline bool OBJECT__DOES_DES_OBJECT_EXIST(int handle) /*0x52AF537A0C5B8AAD*/ {
	uint64_t val;
	nativeInit(0x52AF537A0C5B8AAD);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_DELETE_OBJECT(Object* object) /*0x539E0AE3E6634B9F*/ {
	uint64_t val;
	nativeInit(0x539E0AE3E6634B9F);
	*(Object**)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_SET_TEAM_PICKUP_OBJECT(Object object, Any p1, bool p2) /*0x53E0DF1A2A3CF0CA*/ {
	uint64_t val;
	nativeInit(0x53E0DF1A2A3CF0CA);
	*(Object*)(&val) = object;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0x589F80B325CC82C5(float p0, float p1, float p2, Any p3, Any* p4) /*0x589F80B325CC82C5*/ {
	uint64_t val;
	nativeInit(0x589F80B325CC82C5);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_PLACE_OBJECT_ON_GROUND_PROPERLY(Object object) /*0x58A850EAEE20FAA3*/ {
	uint64_t val;
	nativeInit(0x58A850EAEE20FAA3);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT__SET_DES_OBJECT_STATE(int handle, int state) /*0x5C29F698D404C5E1*/ {
	uint64_t val;
	nativeInit(0x5C29F698D404C5E1);
	*(int*)(&val) = handle;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline Hash OBJECT__GET_PICKUP_HASH(Pickup pickupHash) /*0x5EAAD83F8CFB4575*/ {
	uint64_t val;
	nativeInit(0x5EAAD83F8CFB4575);
	*(Pickup*)(&val) = pickupHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void OBJECT_0x616093EC6B139DD9(Player player, Hash pickupHash, bool p2) /*0x616093EC6B139DD9*/ {
	uint64_t val;
	nativeInit(0x616093EC6B139DD9);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline float OBJECT_0x65499865FCA6E5EC(Hash doorHash) /*0x65499865FCA6E5EC*/ {
	uint64_t val;
	nativeInit(0x65499865FCA6E5EC);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void OBJECT_0x66A49D021870FE88() /*0x66A49D021870FE88*/ {
	nativeInit(0x66A49D021870FE88);
	nativeCall();
}
inline Pickup OBJECT_CREATE_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flag, int value, Hash modelHash, bool returnHandle, bool p8) /*0x673966A0C0FD7171*/ {
	uint64_t val;
	nativeInit(0x673966A0C0FD7171);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(bool*)(&val) = returnHandle;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline bool OBJECT_0x673ED815D6E323B7(Any p0, bool p1, bool p2, bool p3, Any p4) /*0x673ED815D6E323B7*/ {
	uint64_t val;
	nativeInit(0x673ED815D6E323B7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT__SET_DOOR_ACCELERATION_LIMIT(Hash doorHash, int limit, bool p2, bool p3) /*0x6BAB9442830C7F53*/ {
	uint64_t val;
	nativeInit(0x6BAB9442830C7F53);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(int*)(&val) = limit;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Vector3 OBJECT_GET_SAFE_PICKUP_COORDS(float x, float y, float z, Any p3, Any p4) /*0x6E16BC2503FF1FF0*/ {
	uint64_t val;
	nativeInit(0x6E16BC2503FF1FF0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void OBJECT_ADD_DOOR_TO_SYSTEM(Hash doorHash, Hash modelHash, float x, float y, float z, bool p5, bool p6, bool p7) /*0x6F8838D03D1DC226*/ {
	uint64_t val;
	nativeInit(0x6F8838D03D1DC226);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0x701FDA1E82076BA4() /*0x701FDA1E82076BA4*/ {
	nativeInit(0x701FDA1E82076BA4);
	nativeCall();
}
inline bool OBJECT_HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(float p0, float p1, float p2, float p3, Hash modelHash, Any p5) /*0x761B0E69AC4D007E*/ {
	uint64_t val;
	nativeInit(0x761B0E69AC4D007E);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x762DB2D380B48D04(Any p0) /*0x762DB2D380B48D04*/ {
	uint64_t val;
	nativeInit(0x762DB2D380B48D04);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void OBJECT__SET_OBJECT_LOD(Object object, bool toggle) /*0x77F33F2CCF64B3AA*/ {
	uint64_t val;
	nativeInit(0x77F33F2CCF64B3AA);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_SET_PICKUP_REGENERATION_TIME(Pickup pickup, int duration) /*0x78015C9B4B3ECC9D*/ {
	uint64_t val;
	nativeInit(0x78015C9B4B3ECC9D);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0x78857FC65CADB909(bool p0) /*0x78857FC65CADB909*/ {
	uint64_t val;
	nativeInit(0x78857FC65CADB909);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_HAS_PICKUP_BEEN_COLLECTED(Pickup pickup) /*0x80EC48E6679313F9*/ {
	uint64_t val;
	nativeInit(0x80EC48E6679313F9);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_0x85B6C850546FDDE2(Any p0, bool p1, bool p2, bool p3, Any p4) /*0x85B6C850546FDDE2*/ {
	uint64_t val;
	nativeInit(0x85B6C850546FDDE2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x88EAEC617CD26926(Hash p0, bool p1) /*0x88EAEC617CD26926*/ {
	uint64_t val;
	nativeInit(0x88EAEC617CD26926);
	*(Hash*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Pickup OBJECT_CREATE_PICKUP_ROTATE(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, bool p10, Hash modelHash) /*0x891804727E0A98B7*/ {
	uint64_t val;
	nativeInit(0x891804727E0A98B7);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline Any OBJECT__GET_DES_OBJECT_STATE(int handle) /*0x899BA936634A322E*/ {
	uint64_t val;
	nativeInit(0x899BA936634A322E);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any OBJECT_SET_OBJECT_TARGETTABLE(Object object, bool targettable) /*0x8A7391690F5AFD81*/ {
	uint64_t val;
	nativeInit(0x8A7391690F5AFD81);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = targettable;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool OBJECT_HAS_OBJECT_BEEN_BROKEN(Object object) /*0x8ABFB70C49CC43E2*/ {
	uint64_t val;
	nativeInit(0x8ABFB70C49CC43E2);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_IS_OBJECT_VISIBLE(Object object) /*0x8B32ACE6326A7546*/ {
	uint64_t val;
	nativeInit(0x8B32ACE6326A7546);
	*(Object*)(&val) = object;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT_IS_OBJECT_NEAR_POINT(Hash objectHash, float x, float y, float z, float range) /*0x8C90FE4B381BA60A*/ {
	uint64_t val;
	nativeInit(0x8C90FE4B381BA60A);
	*(Hash*)(&val) = objectHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_ATTACH_PORTABLE_PICKUP_TO_PED(Ped ped, Any p1) /*0x8DC39368BDD57755*/ {
	uint64_t val;
	nativeInit(0x8DC39368BDD57755);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_IS_GARAGE_EMPTY(Any garage, bool p1, int p2) /*0x90E47239EA1980B8*/ {
	uint64_t val;
	nativeInit(0x90E47239EA1980B8);
	*(Any*)(&val) = garage;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0x92AEFB5F6E294023(Object object, bool p1, bool p2) /*0x92AEFB5F6E294023*/ {
	uint64_t val;
	nativeInit(0x92AEFB5F6E294023);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void OBJECT__SET_OBJECT_TEXTURE_VARIANT(Object object, int paintIndex) /*0x971DA0055324D033*/ {
	uint64_t val;
	nativeInit(0x971DA0055324D033);
	*(Object*)(&val) = object;
	nativePush(val);
	*(int*)(&val) = paintIndex;
	nativePush(val);
	nativeCall();
}
inline float OBJECT_CREATE_OBJECT_NO_OFFSET(int* modelfwgaHash, float x, float y, float z, bool isNetwork, bool thisScriptCheck, bool dynamic) /*0x9A294B2138ABB884*/ {
	uint64_t val;
	nativeInit(0x9A294B2138ABB884);
	*(int**)(&val) = modelfwgaHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	*(bool*)(&val) = dynamic;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void OBJECT__DOOR_CONTROL(Hash doorHash, float x, float y, float z, bool locked, float xRotMult, float yRotMult, float zRotMult) /*0x9B12F9A24FABEDB0*/ {
	uint64_t val;
	nativeInit(0x9B12F9A24FABEDB0);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = locked;
	nativePush(val);
	*(float*)(&val) = xRotMult;
	nativePush(val);
	*(float*)(&val) = yRotMult;
	nativePush(val);
	*(float*)(&val) = zRotMult;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0x9BA001CB45CBF627(Hash doorHash, float heading, bool p2, bool p3) /*0x9BA001CB45CBF627*/ {
	uint64_t val;
	nativeInit(0x9BA001CB45CBF627);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xA08FE5E49BDC39DD(Any p0, float p1, bool p2) /*0xA08FE5E49BDC39DD*/ {
	uint64_t val;
	nativeInit(0xA08FE5E49BDC39DD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xA2C1F5E92AFE49ED() /*0xA2C1F5E92AFE49ED*/ {
	nativeInit(0xA2C1F5E92AFE49ED);
	nativeCall();
}
inline void OBJECT_0xA85A21582451E951(Hash doorHash, bool p1) /*0xA85A21582451E951*/ {
	uint64_t val;
	nativeInit(0xA85A21582451E951);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void OBJECT__MARK_OBJECT_FOR_DELETION(Object object) /*0xADBE4809F19F927A*/ {
	uint64_t val;
	nativeInit(0xADBE4809F19F927A);
	*(Object*)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_DOES_PICKUP_EXIST(Pickup pickup) /*0xAFC1CA75AD4074D1*/ {
	uint64_t val;
	nativeInit(0xAFC1CA75AD4074D1);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_TRACK_OBJECT_VISIBILITY(Any p0) /*0xB252BC036B525623*/ {
	uint64_t val;
	nativeInit(0xB252BC036B525623);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xB2D0BDE54F0E8E5A(Object object, bool toggle) /*0xB2D0BDE54F0E8E5A*/ {
	uint64_t val;
	nativeInit(0xB2D0BDE54F0E8E5A);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int OBJECT__GET_DES_OBJECT(float x, float y, float z, float rotation, const char* name) /*0xB48FCED898292E52*/ {
	uint64_t val;
	nativeInit(0xB48FCED898292E52);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = rotation;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void OBJECT__SET_DOOR_AJAR_ANGLE(Hash doorHash, float ajar, bool p2, bool p3) /*0xB6E6FBA95C7324AC*/ {
	uint64_t val;
	nativeInit(0xB6E6FBA95C7324AC);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(float*)(&val) = ajar;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline float OBJECT_GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(Any p0, bool p1) /*0xB6FBFD079B8D0596*/ {
	uint64_t val;
	nativeInit(0xB6FBFD079B8D0596);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void OBJECT_0xBCE595371A5FBAAF(Any p0, bool p1) /*0xBCE595371A5FBAAF*/ {
	uint64_t val;
	nativeInit(0xBCE595371A5FBAAF);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(float x, float y, float z, float radius, Hash hash, bool p5) /*0xBFA48E2FF417213F*/ {
	uint64_t val;
	nativeInit(0xBFA48E2FF417213F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = hash;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool OBJECT__DOES_DOOR_EXIST(Hash doorHash) /*0xC153C43EA202C8C1*/ {
	uint64_t val;
	nativeInit(0xC153C43EA202C8C1);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0xC485E07E4F0B7958(Hash doorHash, bool p1, bool p2, bool p3) /*0xC485E07E4F0B7958*/ {
	uint64_t val;
	nativeInit(0xC485E07E4F0B7958);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_IS_DOOR_CLOSED(Hash door) /*0xC531EE8A1145A149*/ {
	uint64_t val;
	nativeInit(0xC531EE8A1145A149);
	*(Hash*)(&val) = door;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0xC6033D32241F6FB5(Any p0, bool p1) /*0xC6033D32241F6FB5*/ {
	uint64_t val;
	nativeInit(0xC6033D32241F6FB5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xC7F29CA00F46350E(bool p0) /*0xC7F29CA00F46350E*/ {
	uint64_t val;
	nativeInit(0xC7F29CA00F46350E);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_DETACH_PORTABLE_PICKUP_FROM_PED(Ped ped) /*0xCF463D1E9A0AECB1*/ {
	uint64_t val;
	nativeInit(0xCF463D1E9A0AECB1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xD9B71952F78A2640(Hash doorHash, bool p1) /*0xD9B71952F78A2640*/ {
	uint64_t val;
	nativeInit(0xD9B71952F78A2640);
	*(Hash*)(&val) = doorHash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_DOES_PICKUP_OBJECT_EXIST(Object pickupObject) /*0xD9EFB6DBF7DAAEA3*/ {
	uint64_t val;
	nativeInit(0xD9EFB6DBF7DAAEA3);
	*(Object*)(&val) = pickupObject;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int* OBJECT_0xDB41D07A45A6D4B7(Hash pickupHash) /*0xDB41D07A45A6D4B7*/ {
	uint64_t val;
	nativeInit(0xDB41D07A45A6D4B7);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	return *(int**)(nativeCall());
}
inline bool OBJECT_0xDF97CDD4FC08FD34(Any p0) /*0xDF97CDD4FC08FD34*/ {
	uint64_t val;
	nativeInit(0xDF97CDD4FC08FD34);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Object OBJECT_GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, bool isMission, bool p6, bool p7) /*0xE143FA2249364369*/ {
	uint64_t val;
	nativeInit(0xE143FA2249364369);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(bool*)(&val) = isMission;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline void OBJECT_0xE7E4C198B0185900(Object p0, Any p1, bool p2) /*0xE7E4C198B0185900*/ {
	uint64_t val;
	nativeInit(0xE7E4C198B0185900);
	*(Object*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xEB6F1A9B5510A5D2(Any p0, bool p1) /*0xEB6F1A9B5510A5D2*/ {
	uint64_t val;
	nativeInit(0xEB6F1A9B5510A5D2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, bool* locked, float* heading) /*0xEDC1A5B84AEF33FF*/ {
	uint64_t val;
	nativeInit(0xEDC1A5B84AEF33FF);
	*(Hash*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool**)(&val) = locked;
	nativePush(val);
	*(float**)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT_0xF0EED5A6BC7B237A(Any p0, Entity entity, int p2) /*0xF0EED5A6BC7B237A*/ {
	uint64_t val;
	nativeInit(0xF0EED5A6BC7B237A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void OBJECT_0xF2E1A7133DD356A6(Hash hash, bool toggle) /*0xF2E1A7133DD356A6*/ {
	uint64_t val;
	nativeInit(0xF2E1A7133DD356A6);
	*(Hash*)(&val) = hash;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_SET_FORCE_OBJECT_THIS_FRAME(Any p0, Any p1, Any p2, Any p3) /*0xF538081986E49E9D*/ {
	uint64_t val;
	nativeInit(0xF538081986E49E9D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_SET_OBJECT_PHYSICS_PARAMS(Object object, float mass, float gravityFactor, float dampingLinearC, float dampingLinearV, float dampingLinearV2, float dampingAngularC, float dampingAngularV, float dampingAngularV2, float margin, float default2Pi, float buoyancyFactor) /*0xF6DF6E90DE7DF90F*/ {
	uint64_t val;
	nativeInit(0xF6DF6E90DE7DF90F);
	*(Object*)(&val) = object;
	nativePush(val);
	*(float*)(&val) = mass;
	nativePush(val);
	*(float*)(&val) = gravityFactor;
	nativePush(val);
	*(float*)(&val) = dampingLinearC;
	nativePush(val);
	*(float*)(&val) = dampingLinearV;
	nativePush(val);
	*(float*)(&val) = dampingLinearV2;
	nativePush(val);
	*(float*)(&val) = dampingAngularC;
	nativePush(val);
	*(float*)(&val) = dampingAngularV;
	nativePush(val);
	*(float*)(&val) = dampingAngularV2;
	nativePush(val);
	*(float*)(&val) = margin;
	nativePush(val);
	*(float*)(&val) = default2Pi;
	nativePush(val);
	*(float*)(&val) = buoyancyFactor;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, bool locked, float heading, bool p6) /*0xF82D8F1926A02C3D*/ {
	uint64_t val;
	nativeInit(0xF82D8F1926A02C3D);
	*(Hash*)(&val) = type;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = locked;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xF92099527DB8E2A7(Any p0, Any p1) /*0xF92099527DB8E2A7*/ {
	uint64_t val;
	nativeInit(0xF92099527DB8E2A7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void OBJECT_0xF9C1681347C8BD15(Object object) /*0xF9C1681347C8BD15*/ {
	uint64_t val;
	nativeInit(0xF9C1681347C8BD15);
	*(Object*)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline bool OBJECT__IS_PICKUP_WITHIN_RADIUS(Hash pickupHash, float x, float y, float z, float radius) /*0xF9C36251F6E48E33*/ {
	uint64_t val;
	nativeInit(0xF9C36251F6E48E33);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Pickup OBJECT_CREATE_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, bool p6, Hash modelHash) /*0xFBA08C503DD5FA58*/ {
	uint64_t val;
	nativeInit(0xFBA08C503DD5FA58);
	*(Hash*)(&val) = pickupHash;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline void PATHFIND_SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float p6) /*0x0027501B9F3B407E*/ {
	uint64_t val;
	nativeInit(0x0027501B9F3B407E);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline Any PATHFIND_0x01708E8DD3FF8C65(float p0, float p1, float p2, float p3, float p4, float p5) /*0x01708E8DD3FF8C65*/ {
	uint64_t val;
	nativeInit(0x01708E8DD3FF8C65);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PATHFIND_GET_VEHICLE_NODE_PROPERTIES(float x, float y, float z, int* density, int* flags) /*0x0568566ACBB5DEDC*/ {
	uint64_t val;
	nativeInit(0x0568566ACBB5DEDC);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int**)(&val) = density;
	nativePush(val);
	*(int**)(&val) = flags;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND_0x07FB139B592FA687(float p0, float p1, float p2, float p3) /*0x07FB139B592FA687*/ {
	uint64_t val;
	nativeInit(0x07FB139B592FA687);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_0x0B919E1FB47CC4E0(float p0) /*0x0B919E1FB47CC4E0*/ {
	uint64_t val;
	nativeInit(0x0B919E1FB47CC4E0);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_DOES_NAVMESH_BLOCKING_OBJECT_EXIST(Any p0) /*0x0EAEB0DB4B132399*/ {
	uint64_t val;
	nativeInit(0x0EAEB0DB4B132399);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_UPDATE_NAVMESH_BLOCKING_OBJECT(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8) /*0x109E99373F290687*/ {
	uint64_t val;
	nativeInit(0x109E99373F290687);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_IS_POINT_ON_ROAD(float x, float y, float z, Vehicle vehicle) /*0x125BF4ABFC536B09*/ {
	uint64_t val;
	nativeInit(0x125BF4ABFC536B09);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PATHFIND_GET_CLOSEST_ROAD(float posX, float posY, float posZ, float p3, int p4, Vector3* p5, Vector3* p6, int* p7, int* p8, float* p9, int p10) /*0x132F52BBA570FE92*/ {
	uint64_t val;
	nativeInit(0x132F52BBA570FE92);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(Vector3**)(&val) = p5;
	nativePush(val);
	*(Vector3**)(&val) = p6;
	nativePush(val);
	*(int**)(&val) = p7;
	nativePush(val);
	*(int**)(&val) = p8;
	nativePush(val);
	*(float**)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any PATHFIND_0x16F46FB18C8009E4(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x16F46FB18C8009E4*/ {
	uint64_t val;
	nativeInit(0x16F46FB18C8009E4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PATHFIND_SET_ROADS_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float angle, bool unknown1, bool unknown2, bool unknown3) /*0x1A5AA1208AF5DB59*/ {
	uint64_t val;
	nativeInit(0x1A5AA1208AF5DB59);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	*(bool*)(&val) = unknown1;
	nativePush(val);
	*(bool*)(&val) = unknown2;
	nativePush(val);
	*(bool*)(&val) = unknown3;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_IS_VEHICLE_NODE_ID_VALID(int vehicleNodeId) /*0x1EAF30FCFBF5AF74*/ {
	uint64_t val;
	nativeInit(0x1EAF30FCFBF5AF74);
	*(int*)(&val) = vehicleNodeId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_SET_ROADS_BACK_TO_ORIGINAL(float p0, float p1, float p2, float p3, float p4, float p5) /*0x1EE7063B80FFC77C*/ {
	uint64_t val;
	nativeInit(0x1EE7063B80FFC77C);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Any PATHFIND_0x1FC289A0C3FF470F(bool p0) /*0x1FC289A0C3FF470F*/ {
	uint64_t val;
	nativeInit(0x1FC289A0C3FF470F);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PATHFIND_0x228E5C6AD4D74BFD(bool p0) /*0x228E5C6AD4D74BFD*/ {
	uint64_t val;
	nativeInit(0x228E5C6AD4D74BFD);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int PATHFIND_GET_NTH_CLOSEST_VEHICLE_NODE_ID(float x, float y, float z, int nth, int nodetype, float p5, float p6) /*0x22D7275A79FE8215*/ {
	uint64_t val;
	nativeInit(0x22D7275A79FE8215);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = nth;
	nativePush(val);
	*(int*)(&val) = nodetype;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PATHFIND_GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, int nodeType, float p5, float p6) /*0x240A18690AE96513*/ {
	uint64_t val;
	nativeInit(0x240A18690AE96513);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(int*)(&val) = nodeType;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_0x2801D0012266DF07(Any p0) /*0x2801D0012266DF07*/ {
	uint64_t val;
	nativeInit(0x2801D0012266DF07);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline float PATHFIND_0x29C24BFBED8AB8FB(float p0, float p1) /*0x29C24BFBED8AB8FB*/ {
	uint64_t val;
	nativeInit(0x29C24BFBED8AB8FB);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PATHFIND_GET_CLOSEST_MAJOR_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, float p5, int p6) /*0x2EABE3B06F58C1BE*/ {
	uint64_t val;
	nativeInit(0x2EABE3B06F58C1BE);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_GET_STREET_NAME_AT_COORD(float x, float y, float z, Hash* streetName, Hash* crossingRoad) /*0x2EB41072B4C1E4C0*/ {
	uint64_t val;
	nativeInit(0x2EB41072B4C1E4C0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Hash**)(&val) = streetName;
	nativePush(val);
	*(Hash**)(&val) = crossingRoad;
	nativePush(val);
	nativeCall();
}
inline float PATHFIND_0x336511A34F2E5185(float left, float right) /*0x336511A34F2E5185*/ {
	uint64_t val;
	nativeInit(0x336511A34F2E5185);
	*(float*)(&val) = left;
	nativePush(val);
	*(float*)(&val) = right;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PATHFIND_SET_PED_PATHS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool unknown) /*0x34F060F4BF92E018*/ {
	uint64_t val;
	nativeInit(0x34F060F4BF92E018);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = unknown;
	nativePush(val);
	nativeCall();
}
inline float PATHFIND_0x3599D741C9AC6310(float p0, float p1, float p2, float p3) /*0x3599D741C9AC6310*/ {
	uint64_t val;
	nativeInit(0x3599D741C9AC6310);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PATHFIND_ADD_NAVMESH_REQUIRED_REGION(float x, float y, float radius) /*0x387EAD7EE42F6685*/ {
	uint64_t val;
	nativeInit(0x387EAD7EE42F6685);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodetype, Any p10, Any p11) /*0x45905BE8654AE067*/ {
	uint64_t val;
	nativeInit(0x45905BE8654AE067);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = desiredX;
	nativePush(val);
	*(float*)(&val) = desiredY;
	nativePush(val);
	*(float*)(&val) = desiredZ;
	nativePush(val);
	*(int*)(&val) = nthClosest;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float**)(&val) = outHeading;
	nativePush(val);
	*(int*)(&val) = nodetype;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = p11;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_REMOVE_NAVMESH_BLOCKING_OBJECT(Any p0) /*0x46399A7895957C0E*/ {
	uint64_t val;
	nativeInit(0x46399A7895957C0E);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PATHFIND_DISABLE_NAVMESH_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool disable) /*0x4C8872D8CDBE1B8B*/ {
	uint64_t val;
	nativeInit(0x4C8872D8CDBE1B8B);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = disable;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND__GET_IS_SLOW_ROAD_FLAG(int nodeID) /*0x4F5070AA58F69279*/ {
	uint64_t val;
	nativeInit(0x4F5070AA58F69279);
	*(int*)(&val) = nodeID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PATHFIND_GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int nodeType, float p7, float p8) /*0x6448050E9C2A7207*/ {
	uint64_t val;
	nativeInit(0x6448050E9C2A7207);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = nthClosest;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float**)(&val) = outHeading;
	nativePush(val);
	*(int*)(&val) = nodeType;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PATHFIND_GET_VEHICLE_NODE_POSITION(int nodeId, Vector3* outPosition) /*0x703123E5E7D429C2*/ {
	uint64_t val;
	nativeInit(0x703123E5E7D429C2);
	*(int*)(&val) = nodeId;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	nativeCall();
}
inline void PATHFIND_SET_IGNORE_NO_GPS_FLAG(bool ignore) /*0x72751156E7678833*/ {
	uint64_t val;
	nativeInit(0x72751156E7678833);
	*(bool*)(&val) = ignore;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, int* outInt, int p6, float p7, float p8) /*0x80CA6A8B6C094CC4*/ {
	uint64_t val;
	nativeInit(0x80CA6A8B6C094CC4);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = nthClosest;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float**)(&val) = outHeading;
	nativePush(val);
	*(int**)(&val) = outInt;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND_LOAD_ALL_PATH_NODES(bool keepInMemory) /*0x80E4A6EDDB0BE8D9*/ {
	uint64_t val;
	nativeInit(0x80E4A6EDDB0BE8D9);
	*(bool*)(&val) = keepInMemory;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND_ARE_ALL_NAVMESH_REGIONS_LOADED() /*0x8415D95B194A3AEA*/ {
	nativeInit(0x8415D95B194A3AEA); return *(bool*)(nativeCall());
}
inline Any PATHFIND_0x869DAACBBE9FA006() /*0x869DAACBBE9FA006*/ {
	nativeInit(0x869DAACBBE9FA006); return *(Any*)(nativeCall());
}
inline float PATHFIND_0x8ABE8608576D9CE3(float p0, float p1, float p2, float p3) /*0x8ABE8608576D9CE3*/ {
	uint64_t val;
	nativeInit(0x8ABE8608576D9CE3);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PATHFIND_REMOVE_NAVMESH_REQUIRED_REGIONS() /*0x916F0A3CDEC3445E*/ {
	nativeInit(0x916F0A3CDEC3445E);
	nativeCall();
}
inline bool PATHFIND_GET_RANDOM_VEHICLE_NODE(float x, float y, float z, float radius, bool p4, bool p5, bool p6, Vector3* outPosition, int* nodeId) /*0x93E0DB8440B73A7D*/ {
	uint64_t val;
	nativeInit(0x93E0DB8440B73A7D);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(int**)(&val) = nodeId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND__GET_SUPPORTS_GPS_ROUTE_FLAG(int nodeID) /*0xA2AE5C478B96E3B6*/ {
	uint64_t val;
	nativeInit(0xA2AE5C478B96E3B6);
	*(int*)(&val) = nodeID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PATHFIND_0xAA76052DDA9BFC3E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) /*0xAA76052DDA9BFC3E*/ {
	uint64_t val;
	nativeInit(0xAA76052DDA9BFC3E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline float PATHFIND_CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(float x1, float y1, float z1, float x2, float y2, float z2) /*0xADD95C7005C4A197*/ {
	uint64_t val;
	nativeInit(0xADD95C7005C4A197);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PATHFIND_GET_SAFE_COORD_FOR_PED(float x, float y, float z, bool onGround, Vector3* outPosition, int flags) /*0xB61C8E878A4199CA*/ {
	uint64_t val;
	nativeInit(0xB61C8E878A4199CA);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = onGround;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PATHFIND_0xBBB45C3CF5C8AA85() /*0xBBB45C3CF5C8AA85*/ {
	nativeInit(0xBBB45C3CF5C8AA85); return *(Any*)(nativeCall());
}
inline void PATHFIND_SET_ROADS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool unknown1, bool unknown2) /*0xBF1A602B5BA52FEE*/ {
	uint64_t val;
	nativeInit(0xBF1A602B5BA52FEE);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = unknown1;
	nativePush(val);
	*(bool*)(&val) = unknown2;
	nativePush(val);
	nativeCall();
}
inline void PATHFIND_0xD0BC1C6FB18EE154(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) /*0xD0BC1C6FB18EE154*/ {
	uint64_t val;
	nativeInit(0xD0BC1C6FB18EE154);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline Any PATHFIND_0xD3A6A0EF48823A8C() /*0xD3A6A0EF48823A8C*/ {
	nativeInit(0xD3A6A0EF48823A8C); return *(Any*)(nativeCall());
}
inline void PATHFIND_SET_GPS_DISABLED_ZONE(float x1, float y1, float z1, float x2, float y2, float z2) /*0xDC20483CD3DD5201*/ {
	uint64_t val;
	nativeInit(0xDC20483CD3DD5201);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	nativeCall();
}
inline void PATHFIND_SET_PED_PATHS_BACK_TO_ORIGINAL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) /*0xE04B48F2CC926253*/ {
	uint64_t val;
	nativeInit(0xE04B48F2CC926253);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool PATHFIND_GET_NTH_CLOSEST_VEHICLE_NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, bool p6, float p7, float p8) /*0xE50E52416CCF948B*/ {
	uint64_t val;
	nativeInit(0xE50E52416CCF948B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(int*)(&val) = nthClosest;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND_0xF7B79A50B905A30D(float p0, float p1, float p2, float p3) /*0xF7B79A50B905A30D*/ {
	uint64_t val;
	nativeInit(0xF7B79A50B905A30D);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PATHFIND_IS_NAVMESH_LOADED_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) /*0xF813C7E63F9062A5*/ {
	uint64_t val;
	nativeInit(0xF813C7E63F9062A5);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PATHFIND_GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, bool p3, float* direction, float* vehicle, float* distToNxJunction) /*0xF90125F1F79ECDF8*/ {
	uint64_t val;
	nativeInit(0xF90125F1F79ECDF8);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(float**)(&val) = direction;
	nativePush(val);
	*(float**)(&val) = vehicle;
	nativePush(val);
	*(float**)(&val) = distToNxJunction;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any PATHFIND_ADD_NAVMESH_BLOCKING_OBJECT(float p0, float p1, float p2, float p3, float p4, float p5, float p6, bool p7, Any p8) /*0xFCD5C8E06E502F5A*/ {
	uint64_t val;
	nativeInit(0xFCD5C8E06E502F5A);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PATHFIND_GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, int p7) /*0xFF071FB798B803B0*/ {
	uint64_t val;
	nativeInit(0xFF071FB798B803B0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Vector3**)(&val) = outPosition;
	nativePush(val);
	*(float**)(&val) = outHeading;
	nativePush(val);
	*(int*)(&val) = nodeType;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_USING_ACTION_MODE(Ped ped) /*0x00E73468D085F745*/ {
	uint64_t val;
	nativeInit(0x00E73468D085F745);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__GET_LIPSTICK_COLOR(int colorID, int* R, int* G, Any* B) /*0x013E5CFC38CD5387*/ {
	uint64_t val;
	nativeInit(0x013E5CFC38CD5387);
	*(int*)(&val) = colorID;
	nativePush(val);
	*(int**)(&val) = R;
	nativePush(val);
	*(int**)(&val) = G;
	nativePush(val);
	*(Any**)(&val) = B;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MIN_MOVE_BLEND_RATIO(Ped ped, float value) /*0x01A898D26E2333DD*/ {
	uint64_t val;
	nativeInit(0x01A898D26E2333DD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RAGDOLL_FORCE_FALL(Ped ped) /*0x01F6594B923B9251*/ {
	uint64_t val;
	nativeInit(0x01F6594B923B9251);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_ON_FOOT(Ped ped) /*0x01FEE67DB37F59B2*/ {
	uint64_t val;
	nativeInit(0x01FEE67DB37F59B2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_AS_ENEMY(Ped ped, bool toggle) /*0x02A0C9720B854BFA*/ {
	uint64_t val;
	nativeInit(0x02A0C9720B854BFA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DUCKING(Ped ped, bool toggle) /*0x030983CA930B692D*/ {
	uint64_t val;
	nativeInit(0x030983CA930B692D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x03EA03AF85A85CB7(Ped ped, bool p1, bool p2, bool p3, bool p4, bool p5, bool p6, bool p7, Any p8) /*0x03EA03AF85A85CB7*/ {
	uint64_t val;
	nativeInit(0x03EA03AF85A85CB7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_TEXTURE_VARIATION(Ped ped, int componentId) /*0x04A355E041E004E6*/ {
	uint64_t val;
	nativeInit(0x04A355E041E004E6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED__IS_PED_LIPSTICK_COLOR_VALID(int colorID) /*0x0525A2C2562F3CD4*/ {
	uint64_t val;
	nativeInit(0x0525A2C2562F3CD4);
	*(int*)(&val) = colorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0x06087579E7AA85A9(Any p0, Any p1, float p2, float p3, float p4, float p5) /*0x06087579E7AA85A9*/ {
	uint64_t val;
	nativeInit(0x06087579E7AA85A9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x061CB768363D6424(Any p0, bool p1) /*0x061CB768363D6424*/ {
	uint64_t val;
	nativeInit(0x061CB768363D6424);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_TARGET_LOSS_RESPONSE(Ped ped, int responseType) /*0x0703B9079823DA4A*/ {
	uint64_t val;
	nativeInit(0x0703B9079823DA4A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = responseType;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_ANY_PED_NEAR_POINT(float x, float y, float z, float radius) /*0x083961498679DC9F*/ {
	uint64_t val;
	nativeInit(0x083961498679DC9F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_MOVE_RATE_OVERRIDE(Ped ped, float value) /*0x085BF80FA50A39D1*/ {
	uint64_t val;
	nativeInit(0x085BF80FA50A39D1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_PROP(Ped ped, int propId) /*0x0943E5B8E078E76E*/ {
	uint64_t val;
	nativeInit(0x0943E5B8E078E76E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = propId;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MOTION_BLUR(Ped ped, bool toggle) /*0x0A986918B102B448*/ {
	uint64_t val;
	nativeInit(0x0A986918B102B448);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_ANY_POLICE_VEHICLE(Ped ped) /*0x0BD04E29640C9C12*/ {
	uint64_t val;
	nativeInit(0x0BD04E29640C9C12);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_GROUP_MEMBER_PASSENGER_INDEX(Ped ped, int index) /*0x0BDDB8D9EC6BCF3C*/ {
	uint64_t val;
	nativeInit(0x0BDDB8D9EC6BCF3C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_DECORATIONS(Ped ped) /*0x0E5173C163976E38*/ {
	uint64_t val;
	nativeInit(0x0E5173C163976E38);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(Ped ped, bool toggle) /*0x0EB0585D15254740*/ {
	uint64_t val;
	nativeInit(0x0EB0585D15254740);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_CREATE_RANDOM_COPS(bool toggle) /*0x102E68B2024D536D*/ {
	uint64_t val;
	nativeInit(0x102E68B2024D536D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0x110F526AB784111F(Ped ped, float p1) /*0x110F526AB784111F*/ {
	uint64_t val;
	nativeInit(0x110F526AB784111F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_TO_INFORM_RESPECTED_FRIENDS(Ped ped, float radius, int maxFriends) /*0x112942C6E708F70B*/ {
	uint64_t val;
	nativeInit(0x112942C6E708F70B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = maxFriends;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_VAULTING(Ped ped) /*0x117C70D1F5730B5E*/ {
	uint64_t val;
	nativeInit(0x117C70D1F5730B5E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_WAS_PED_SKELETON_UPDATED(Ped ped) /*0x11B499C1E0FF8559*/ {
	uint64_t val;
	nativeInit(0x11B499C1E0FF8559);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x1216E0BFA72CC703(Any p0, Any p1) /*0x1216E0BFA72CC703*/ {
	uint64_t val;
	nativeInit(0x1216E0BFA72CC703);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_A_PLAYER(Ped ped) /*0x12534C348C6CB68B*/ {
	uint64_t val;
	nativeInit(0x12534C348C6CB68B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x1280804F7CFD2D6C(Any p0) /*0x1280804F7CFD2D6C*/ {
	uint64_t val;
	nativeInit(0x1280804F7CFD2D6C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED_CAN_PED_RAGDOLL(Ped ped) /*0x128F79EDCECE4FD5*/ {
	uint64_t val;
	nativeInit(0x128F79EDCECE4FD5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x129466ED55140F8D(Ped ped, bool toggle) /*0x129466ED55140F8D*/ {
	uint64_t val;
	nativeInit(0x129466ED55140F8D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_BLEND_FROM_PARENTS(Ped ped, Ped father, Ped mother, float fathersSide, float mothersSide) /*0x137BBD05230DB22D*/ {
	uint64_t val;
	nativeInit(0x137BBD05230DB22D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = father;
	nativePush(val);
	*(Ped*)(&val) = mother;
	nativePush(val);
	*(float*)(&val) = fathersSide;
	nativePush(val);
	*(float*)(&val) = mothersSide;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_ACTION_MODE_ASSET(const char* asset) /*0x13E940F88470FA51*/ {
	uint64_t val;
	nativeInit(0x13E940F88470FA51);
	*(const char**)(&val) = asset;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x14590DDBEDB1EC85(Ped ped) /*0x14590DDBEDB1EC85*/ {
	uint64_t val;
	nativeInit(0x14590DDBEDB1EC85);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(bool value) /*0x14F19A8782C8071E*/ {
	uint64_t val;
	nativeInit(0x14F19A8782C8071E);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_STEERS_AROUND_OBJECTS(Ped ped, bool toggle) /*0x1509C089ADC208BF*/ {
	uint64_t val;
	nativeInit(0x1509C089ADC208BF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_FORCE_PED_TO_OPEN_PARACHUTE(Ped ped) /*0x16E42E800B472221*/ {
	uint64_t val;
	nativeInit(0x16E42E800B472221);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_COP_PED_IN_AREA_3D(float x1, float y1, float z1, float x2, float y2, float z2) /*0x16EC4839969F9F5E*/ {
	uint64_t val;
	nativeInit(0x16EC4839969F9F5E);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash PED_GET_PED_CAUSE_OF_DEATH(Ped ped) /*0x16FFE42AB2D2DC59*/ {
	uint64_t val;
	nativeInit(0x16FFE42AB2D2DC59);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline Vector3 PED_GET_PED_BONE_COORDS(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ) /*0x17C07FC640E86B4E*/ {
	uint64_t val;
	nativeInit(0x17C07FC640E86B4E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneId;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Ped PED_GET_MELEE_TARGET_FOR_PED(Ped ped) /*0x18A3E9EE1297FD39*/ {
	uint64_t val;
	nativeInit(0x18A3E9EE1297FD39);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void PED_SET_PED_CONFIG_FLAG(Ped ped, int flagId, bool value) /*0x1913FE4CBF41C463*/ {
	uint64_t val;
	nativeInit(0x1913FE4CBF41C463);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flagId;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_0x1A330D297AAC6BC1(Ped ped, int p1) /*0x1A330D297AAC6BC1*/ {
	uint64_t val;
	nativeInit(0x1A330D297AAC6BC1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_AI_WEAPON_DAMAGE_MODIFIER(float value) /*0x1B1E2A40A65B8521*/ {
	uint64_t val;
	nativeInit(0x1B1E2A40A65B8521);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int PED_ADD_SCENARIO_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool p6, bool p7, bool p8, bool p9) /*0x1B5C85C612E5256E*/ {
	uint64_t val;
	nativeInit(0x1B5C85C612E5256E);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_IS_PED_USING_SCENARIO(Ped ped, const char* scenario) /*0x1BF094736DD62C2E*/ {
	uint64_t val;
	nativeInit(0x1BF094736DD62C2E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = scenario;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_HANGING_ON_TO_VEHICLE(Ped ped) /*0x1C86D8AEF8254B78*/ {
	uint64_t val;
	nativeInit(0x1C86D8AEF8254B78);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_SMASH_GLASS(Ped ped, bool p1, bool p2) /*0x1CCE141467FF42A2*/ {
	uint64_t val;
	nativeInit(0x1CCE141467FF42A2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_GROUP_FORMATION_SPACING(int groupId, float p1, float p2, float p3) /*0x1D9D45004C28C916*/ {
	uint64_t val;
	nativeInit(0x1D9D45004C28C916);
	*(int*)(&val) = groupId;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any PED_0x1E77FA7A62EE6C4C(Any p0) /*0x1E77FA7A62EE6C4C*/ {
	uint64_t val;
	nativeInit(0x1E77FA7A62EE6C4C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int PED_0x1E98817B311AE98A(Ped ped) /*0x1E98817B311AE98A*/ {
	uint64_t val;
	nativeInit(0x1E98817B311AE98A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_0x2016C603D6B8987C(Any p0, bool p1) /*0x2016C603D6B8987C*/ {
	uint64_t val;
	nativeInit(0x2016C603D6B8987C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_PED_STRAFE_CLIPSET(Ped ped) /*0x20510814175EA477*/ {
	uint64_t val;
	nativeInit(0x20510814175EA477);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_RAGDOLL_BONE_INDEX(Ped ped, int bone) /*0x2057EF813397A772*/ {
	uint64_t val;
	nativeInit(0x2057EF813397A772);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = bone;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_0x2208438012482A1A(Ped ped, bool p1, bool p2) /*0x2208438012482A1A*/ {
	uint64_t val;
	nativeInit(0x2208438012482A1A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_PED_IN_VEHICLE_CONTEXT(Ped ped) /*0x22EF8FF8778030EB*/ {
	uint64_t val;
	nativeInit(0x22EF8FF8778030EB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_NEARBY_PEDS(Ped ped, int* sizeAndPeds, int ignore) /*0x23F8F5FC7E8C4A6B*/ {
	uint64_t val;
	nativeInit(0x23F8F5FC7E8C4A6B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int**)(&val) = sizeAndPeds;
	nativePush(val);
	*(int*)(&val) = ignore;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_IS_PED_RELOADING(Ped ped) /*0x24B100C68C645951*/ {
	uint64_t val;
	nativeInit(0x24B100C68C645951);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_0x25361A96E0F7E419(Any p0, Any p1, Any p2, Any p3) /*0x25361A96E0F7E419*/ {
	uint64_t val;
	nativeInit(0x25361A96E0F7E419);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PED_IS_SYNCHRONIZED_SCENE_RUNNING(int sceneId) /*0x25D39B935A038A26*/ {
	uint64_t val;
	nativeInit(0x25D39B935A038A26);
	*(int*)(&val) = sceneId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped, const char* clipSet) /*0x2622E35B77D3ACA2*/ {
	uint64_t val;
	nativeInit(0x2622E35B77D3ACA2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_COMPONENT_VARIATION(Ped ped, int componentId, int drawableId, int textureId, int paletteId) /*0x262B14F48D29DE80*/ {
	uint64_t val;
	nativeInit(0x262B14F48D29DE80);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	*(int*)(&val) = textureId;
	nativePush(val);
	*(int*)(&val) = paletteId;
	nativePush(val);
	nativeCall();
}
inline void PED__SET_PED_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags) /*0x26695EC767728D84*/ {
	uint64_t val;
	nativeInit(0x26695EC767728D84);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x26AF0E8E30BD2A2C(Ped ped) /*0x26AF0E8E30BD2A2C*/ {
	uint64_t val;
	nativeInit(0x26AF0E8E30BD2A2C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_HELMET_PROP_INDEX(Ped ped, int propIndex) /*0x26D83693ED99291C*/ {
	uint64_t val;
	nativeInit(0x26D83693ED99291C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = propIndex;
	nativePush(val);
	nativeCall();
}
inline void PED_ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int sceneID, Entity entity, int boneIndex) /*0x272E4723B56A3B96*/ {
	uint64_t val;
	nativeInit(0x272E4723B56A3B96);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	nativeCall();
}
inline void PED_0x2735233A786B1BEF(Ped ped, float p1) /*0x2735233A786B1BEF*/ {
	uint64_t val;
	nativeInit(0x2735233A786B1BEF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED__GET_PED_HEAD_BLEND_DATA(Ped ped, Any* headBlendData) /*0x2746BD9D88C5C5D0*/ {
	uint64_t val;
	nativeInit(0x2746BD9D88C5C5D0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any**)(&val) = headBlendData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(Ped SC, int sc) /*0x27561561732A7842*/ {
	uint64_t val;
	nativeInit(0x27561561732A7842);
	*(Ped*)(&val) = SC;
	nativePush(val);
	*(int*)(&val) = sc;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_SWEAT(Ped ped, float sweat) /*0x27B0405F59637D1F*/ {
	uint64_t val;
	nativeInit(0x27B0405F59637D1F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = sweat;
	nativePush(val);
	nativeCall();
}
inline void PED_0x280C7E3AC7F56E90(Any p0, Any* p1, Any* p2, Any* p3) /*0x280C7E3AC7F56E90*/ {
	uint64_t val;
	nativeInit(0x280C7E3AC7F56E90);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(float x, float y, float z, float range, int p4) /*0x28157D43CF600981*/ {
	uint64_t val;
	nativeInit(0x28157D43CF600981);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void PED_0x288DF530C92DAD6F(Any p0, float p1) /*0x288DF530C92DAD6F*/ {
	uint64_t val;
	nativeInit(0x288DF530C92DAD6F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_REQUEST_ACTION_MODE_ASSET(const char* asset) /*0x290E2780BB7AA598*/ {
	uint64_t val;
	nativeInit(0x290E2780BB7AA598);
	*(const char**)(&val) = asset;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_ANY_HELI(Ped ped) /*0x298B91AE825E5705*/ {
	uint64_t val;
	nativeInit(0x298B91AE825E5705);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_STRAFE_CLIPSET(Ped ped, const char* clipSet) /*0x29A28F3F8CF6D854*/ {
	uint64_t val;
	nativeInit(0x29A28F3F8CF6D854);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	nativeCall();
}
inline void PED_REQUEST_STEALTH_MODE_ASSET(const char* asset) /*0x2A0A62FCDEE16D4F*/ {
	uint64_t val;
	nativeInit(0x2A0A62FCDEE16D4F);
	*(const char**)(&val) = asset;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DIES_IN_VEHICLE(Ped ped, bool toggle) /*0x2A30922C90C9B42C*/ {
	uint64_t val;
	nativeInit(0x2A30922C90C9B42C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_AS_GROUP_LEADER(Ped ped, int groupId) /*0x2A7819605465FBCE*/ {
	uint64_t val;
	nativeInit(0x2A7819605465FBCE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = groupId;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_RUNNING_MOBILE_PHONE_TASK(Ped ped) /*0x2AFE52F782F25775*/ {
	uint64_t val;
	nativeInit(0x2AFE52F782F25775);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED__IS_PED_PROP_VALID(Ped ped, int componentId, int drawableId, int TextureId) /*0x2B16A3BFF1FBCE49*/ {
	uint64_t val;
	nativeInit(0x2B16A3BFF1FBCE49);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	*(int*)(&val) = TextureId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x2B5AA717A181FB4C(Ped ped, bool p1) /*0x2B5AA717A181FB4C*/ {
	uint64_t val;
	nativeInit(0x2B5AA717A181FB4C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0x2B694AFCF64E6994(Ped ped, bool p1) /*0x2B694AFCF64E6994*/ {
	uint64_t val;
	nativeInit(0x2B694AFCF64E6994);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_GET_PED_FLOOD_INVINCIBILITY(Ped ped, bool p1) /*0x2BC338A7B21F4608*/ {
	uint64_t val;
	nativeInit(0x2BC338A7B21F4608);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_EXPLODE_PED_HEAD(Ped ped, Hash weaponHash) /*0x2D05CED3A38D0F3A*/ {
	uint64_t val;
	nativeInit(0x2D05CED3A38D0F3A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_VISUAL_FIELD_MIN_ANGLE(Ped ped, float value) /*0x2DB492222FB21E26*/ {
	uint64_t val;
	nativeInit(0x2DB492222FB21E26);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_0x2DF9038C90AD5264(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration) /*0x2DF9038C90AD5264*/ {
	uint64_t val;
	nativeInit(0x2DF9038C90AD5264);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = interiorFlags;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_NON_CREATION_AREA() /*0x2E05208086BA0651*/ {
	nativeInit(0x2E05208086BA0651);
	nativeCall();
}
inline bool PED_IS_PED_IN_ANY_BOAT(Ped ped) /*0x2E0E1C2B4F6CB339*/ {
	uint64_t val;
	nativeInit(0x2E0E1C2B4F6CB339);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(Ped pedHandle, int groupHandle, bool toggle) /*0x2E2F4240B3F24647*/ {
	uint64_t val;
	nativeInit(0x2E2F4240B3F24647);
	*(Ped*)(&val) = pedHandle;
	nativePush(val);
	*(int*)(&val) = groupHandle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_REGISTER_TARGET(Ped ped, Ped target) /*0x2F25D9AEFA34FBA2*/ {
	uint64_t val;
	nativeInit(0x2F25D9AEFA34FBA2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	nativeCall();
}
inline void PED_0x2F3C3D9F50681DE4(Any p0, bool p1) /*0x2F3C3D9F50681DE4*/ {
	uint64_t val;
	nativeInit(0x2F3C3D9F50681DE4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_SCENARIO_BLOCKING_AREA(int areaHandle, bool p1) /*0x31D16B74C6E29D66*/ {
	uint64_t val;
	nativeInit(0x31D16B74C6E29D66);
	*(int*)(&val) = areaHandle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_APPLY_PED_BLOOD_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any* p4) /*0x3311E47B91EDCBBC*/ {
	uint64_t val;
	nativeInit(0x3311E47B91EDCBBC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_DEAD_OR_DYING(Ped ped, bool p1) /*0x3317DEDB88C95038*/ {
	uint64_t val;
	nativeInit(0x3317DEDB88C95038);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_TO_LOAD_COVER(Ped ped, bool toggle) /*0x332B562EEDA62399*/ {
	uint64_t val;
	nativeInit(0x332B562EEDA62399);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_PARACHUTE_TINT_INDEX(Ped ped, int tintIndex) /*0x333FC8DB079B7186*/ {
	uint64_t val;
	nativeInit(0x333FC8DB079B7186);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline bool PED__IS_ENEMY_IN_RANGE(Ped ped, float x, float y, float z, float range) /*0x336B3D200AB007CB*/ {
	uint64_t val;
	nativeInit(0x336B3D200AB007CB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__SET_PED_CAN_PLAY_INJURED_ANIMS(Ped ped, bool p1) /*0x33A60D8BDD6E508C*/ {
	uint64_t val;
	nativeInit(0x33A60D8BDD6E508C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_HEARING_RANGE(Ped ped, float value) /*0x33A8F7F7D5F7F33C*/ {
	uint64_t val;
	nativeInit(0x33A8F7F7D5F7F33C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_SHOOTING(Ped ped) /*0x34616828CD07F1A1*/ {
	uint64_t val;
	nativeInit(0x34616828CD07F1A1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAPSULE(Ped ped, float value) /*0x364DF566EC833DE2*/ {
	uint64_t val;
	nativeInit(0x364DF566EC833DE2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline Any PED_0x36B77BB84687C318(Ped ped, Any p1) /*0x36B77BB84687C318*/ {
	uint64_t val;
	nativeInit(0x36B77BB84687C318);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_0x36C6984C3ED0C911(Any p0) /*0x36C6984C3ED0C911*/ {
	uint64_t val;
	nativeInit(0x36C6984C3ED0C911);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_ACCURACY(Ped ped) /*0x37F4AD56ECBC0CD6*/ {
	uint64_t val;
	nativeInit(0x37F4AD56ECBC0CD6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED__SET_SYNCHRONIZED_SCENE_OCCLUSION_PORTAL(int sceneID, bool p1) /*0x394B9CD12435C981*/ {
	uint64_t val;
	nativeInit(0x394B9CD12435C981);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_APPLY_PED_DAMAGE_DECAL(Ped ped, int p1, float p2, float p3, float p4, float p5, float p6, int p7, bool p8, const char* p9) /*0x397C38AA7B4A5F83*/ {
	uint64_t val;
	nativeInit(0x397C38AA7B4A5F83);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(const char**)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_AIMING_FROM_COVER(Ped ped) /*0x3998B1276A3300E5*/ {
	uint64_t val;
	nativeInit(0x3998B1276A3300E5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_0x39D55A620FCB6A3A(Ped ped, int slot, int drawableId, int textureId) /*0x39D55A620FCB6A3A*/ {
	uint64_t val;
	nativeInit(0x39D55A620FCB6A3A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	*(int*)(&val) = textureId;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any PED_RESET_PED_VISIBLE_DAMAGE(Ped ped) /*0x3AC1F7B898F30C05*/ {
	uint64_t val;
	nativeInit(0x3AC1F7B898F30C05);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped, float angle) /*0x3B6405E8AB34A907*/ {
	uint64_t val;
	nativeInit(0x3B6405E8AB34A907);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ALLOW_VEHICLES_OVERRIDE(Ped ped, bool toggle) /*0x3C028C636A414ED9*/ {
	uint64_t val;
	nativeInit(0x3C028C636A414ED9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Vector3 PED_GET_PED_DEFENSIVE_AREA_POSITION(Ped ped, bool p1) /*0x3C06B8786DD94CD1*/ {
	uint64_t val;
	nativeInit(0x3C06B8786DD94CD1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void PED_SET_PED_COMBAT_RANGE(Ped ped, int p1) /*0x3C606747B23E497B*/ {
	uint64_t val;
	nativeInit(0x3C606747B23E497B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any PED_0x3C67506996001F5E() /*0x3C67506996001F5E*/ {
	nativeInit(0x3C67506996001F5E); return *(Any*)(nativeCall());
}
inline void PED_SET_PED_NEVER_LEAVES_GROUP(Ped ped, bool toggle) /*0x3DBFC55D5C9BB447*/ {
	uint64_t val;
	nativeInit(0x3DBFC55D5C9BB447);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x3E802F11FBE27674(Any p0) /*0x3E802F11FBE27674*/ {
	uint64_t val;
	nativeInit(0x3E802F11FBE27674);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_CAN_CREATE_RANDOM_PED(bool unk) /*0x3E8349C08E4B82E4*/ {
	uint64_t val;
	nativeInit(0x3E8349C08E4B82E4);
	*(bool*)(&val) = unk;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_BONE_INDEX(Ped ped, int boneId) /*0x3F428D08BE5AAE31*/ {
	uint64_t val;
	nativeInit(0x3F428D08BE5AAE31);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int PED_GET_PED_MONEY(Ped ped) /*0x3F69145BBA87BAE7*/ {
	uint64_t val;
	nativeInit(0x3F69145BBA87BAE7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_GROUP_SEPARATION_RANGE(int groupHandle, float separationRange) /*0x4102C7858CFEE4E4*/ {
	uint64_t val;
	nativeInit(0x4102C7858CFEE4E4);
	*(int*)(&val) = groupHandle;
	nativePush(val);
	*(float*)(&val) = separationRange;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DEFENSIVE_AREA_DIRECTION(Ped ped, float p1, float p2, float p3, bool p4) /*0x413C6C763A4AFFAD*/ {
	uint64_t val;
	nativeInit(0x413C6C763A4AFFAD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_EVASIVE_DIVING(Ped ped, Entity* evadingEntity) /*0x414641C26E105898*/ {
	uint64_t val;
	nativeInit(0x414641C26E105898);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity**)(&val) = evadingEntity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_CREATE_NM_MESSAGE(bool startImmediately, int messageId) /*0x418EF2A1BCE56685*/ {
	uint64_t val;
	nativeInit(0x418EF2A1BCE56685);
	*(bool*)(&val) = startImmediately;
	nativePush(val);
	*(int*)(&val) = messageId;
	nativePush(val);
	nativeCall();
}
inline void PED_0x425AECF167663F48(Ped ped, bool p1) /*0x425AECF167663F48*/ {
	uint64_t val;
	nativeInit(0x425AECF167663F48);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Hash PED_GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped) /*0x42FDD0F017B1E38E*/ {
	uint64_t val;
	nativeInit(0x42FDD0F017B1E38E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void PED_SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(Ped ped, bool toggle) /*0x4328652AE5769C71*/ {
	uint64_t val;
	nativeInit(0x4328652AE5769C71);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MAX_MOVE_BLEND_RATIO(Ped ped, float value) /*0x433083750C5E064A*/ {
	uint64_t val;
	nativeInit(0x433083750C5E064A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_JUMPING_OUT_OF_VEHICLE(Ped ped) /*0x433DDFFE2044B636*/ {
	uint64_t val;
	nativeInit(0x433DDFFE2044B636);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_MAX_TIME_IN_WATER(Ped ped, float value) /*0x43C851690662113D*/ {
	uint64_t val;
	nativeInit(0x43C851690662113D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_CREATE_RANDOM_COPS_ON_SCENARIOS(bool toggle) /*0x444CB7D7DBE6973D*/ {
	uint64_t val;
	nativeInit(0x444CB7D7DBE6973D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PED_REGISTER_PEDHEADSHOT(Ped ped) /*0x4462658788425076*/ {
	uint64_t val;
	nativeInit(0x4462658788425076);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_WETNESS_HEIGHT(Ped ped, float height) /*0x44CB6447D2571AA0*/ {
	uint64_t val;
	nativeInit(0x44CB6447D2571AA0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(Ped ped) /*0x44D28D5DDFE5F68C*/ {
	uint64_t val;
	nativeInit(0x44D28D5DDFE5F68C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0x451294E859ECC018(int p0) /*0x451294E859ECC018*/ {
	uint64_t val;
	nativeInit(0x451294E859ECC018);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_KNOCK_PED_OFF_VEHICLE(Ped ped) /*0x45BBCBA77C29A841*/ {
	uint64_t val;
	nativeInit(0x45BBCBA77C29A841);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DEFAULT_COMPONENT_VARIATION(Ped ped) /*0x45EEE61580806D63*/ {
	uint64_t val;
	nativeInit(0x45EEE61580806D63);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_ON_MOUNT(Ped ped) /*0x460BC76A0E10655E*/ {
	uint64_t val;
	nativeInit(0x460BC76A0E10655E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x4668D80430D6C299(Ped ped) /*0x4668D80430D6C299*/ {
	uint64_t val;
	nativeInit(0x4668D80430D6C299);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x46B05BCAE43856B0(Ped ped, int flag) /*0x46B05BCAE43856B0*/ {
	uint64_t val;
	nativeInit(0x46B05BCAE43856B0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_APPLY_PED_DAMAGE_PACK(Ped ped, const char* damagePack, float damage, float mult) /*0x46DF918788CB093F*/ {
	uint64_t val;
	nativeInit(0x46DF918788CB093F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = damagePack;
	nativePush(val);
	*(float*)(&val) = damage;
	nativePush(val);
	*(float*)(&val) = mult;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER() /*0x46E56A7CD1D63C3F*/ {
	nativeInit(0x46E56A7CD1D63C3F);
	nativeCall();
}
inline void PED_SET_PED_STEERS_AROUND_PEDS(Ped ped, bool toggle) /*0x46F2193B3AD1D891*/ {
	uint64_t val;
	nativeInit(0x46F2193B3AD1D891);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_MAX_HEALTH(Ped ped) /*0x4700A416E8324EF3*/ {
	uint64_t val;
	nativeInit(0x4700A416E8324EF3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_0x4759CC730F947C81() /*0x4759CC730F947C81*/ {
	nativeInit(0x4759CC730F947C81);
	nativeCall();
}
inline bool PED_IS_PED_RAGDOLL(Ped ped) /*0x47E4E977581C5B55*/ {
	uint64_t val;
	nativeInit(0x47E4E977581C5B55);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__GET_HAIR_COLOR(int colorID, int* R, int* G, int* B) /*0x4852FC386E2E1BB5*/ {
	uint64_t val;
	nativeInit(0x4852FC386E2E1BB5);
	*(int*)(&val) = colorID;
	nativePush(val);
	*(int**)(&val) = R;
	nativePush(val);
	*(int**)(&val) = G;
	nativePush(val);
	*(int**)(&val) = B;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_COMBAT(Ped ped, Ped target) /*0x4859F1FC66A6278E*/ {
	uint64_t val;
	nativeInit(0x4859F1FC66A6278E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_HEAD_OVERLAY(Ped ped, int overlayID, int index, float opacity) /*0x48F44967FA05CC1E*/ {
	uint64_t val;
	nativeInit(0x48F44967FA05CC1E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = overlayID;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	*(float*)(&val) = opacity;
	nativePush(val);
	nativeCall();
}
inline void PED__SET_PED_HEAD_OVERLAY_COLOR(Ped ped, int overlayID, int colorType, int colorID, int secondColorID) /*0x497BF74A7B9CB952*/ {
	uint64_t val;
	nativeInit(0x497BF74A7B9CB952);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = overlayID;
	nativePush(val);
	*(int*)(&val) = colorType;
	nativePush(val);
	*(int*)(&val) = colorID;
	nativePush(val);
	*(int*)(&val) = secondColorID;
	nativePush(val);
	nativeCall();
}
inline void PED_0x49E50BDB8BA4DAB2(Ped ped, bool p1) /*0x49E50BDB8BA4DAB2*/ {
	uint64_t val;
	nativeInit(0x49E50BDB8BA4DAB2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_JACKING(Ped ped) /*0x4AE4FF911DFB61DA*/ {
	uint64_t val;
	nativeInit(0x4AE4FF911DFB61DA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped) /*0x4AFE3690D7E0B5AC*/ {
	uint64_t val;
	nativeInit(0x4AFE3690D7E0B5AC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline Vector3 PED_GET_ANIM_INITIAL_OFFSET_ROTATION(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) /*0x4B805E6046EE9E47*/ {
	uint64_t val;
	nativeInit(0x4B805E6046EE9E47);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool PED_IS_PED_TRACKED(Ped ped) /*0x4C5E1F087CD10BB7*/ {
	uint64_t val;
	nativeInit(0x4C5E1F087CD10BB7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__SET_PED_HAIR_COLOR(Ped ped, int colorID, int highlightColorID) /*0x4CFFC65454C93A49*/ {
	uint64_t val;
	nativeInit(0x4CFFC65454C93A49);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = colorID;
	nativePush(val);
	*(int*)(&val) = highlightColorID;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_COMBAT_MOVEMENT(Ped ped, int combatMovement) /*0x4D9CA1009AFBD057*/ {
	uint64_t val;
	nativeInit(0x4D9CA1009AFBD057);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = combatMovement;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_MELEE_COMBAT(Ped ped) /*0x4E209B2C1EAD5159*/ {
	uint64_t val;
	nativeInit(0x4E209B2C1EAD5159);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, bool p9, bool p10) /*0x4EF47FE21698A8B6*/ {
	uint64_t val;
	nativeInit(0x4EF47FE21698A8B6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = attachPed;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_BOUNDS_ORIENTATION(Ped ped, float p1, float p2, float p3, float p4, float p5) /*0x4F5F651ACCC9C4CF*/ {
	uint64_t val;
	nativeInit(0x4F5F651ACCC9C4CF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_BEING_STUNNED(Ped ped, int p1) /*0x4FBACCE3B4138EE8*/ {
	uint64_t val;
	nativeInit(0x4FBACCE3B4138EE8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(float x, float y, float z) /*0x5086C7843552CF85*/ {
	uint64_t val;
	nativeInit(0x5086C7843552CF85);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void PED__SET_PED_EYE_COLOR(Ped ped, int index) /*0x50B56988B170AFDF*/ {
	uint64_t val;
	nativeInit(0x50B56988B170AFDF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline Any PED_0x511F1A683387C7E2(Any p0) /*0x511F1A683387C7E2*/ {
	uint64_t val;
	nativeInit(0x511F1A683387C7E2);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Ped PED_GET_PED_AS_GROUP_MEMBER(int groupID, int memberNumber) /*0x51455483CF23ED97*/ {
	uint64_t val;
	nativeInit(0x51455483CF23ED97);
	*(int*)(&val) = groupID;
	nativePush(val);
	*(int*)(&val) = memberNumber;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool PED_CAN_KNOCK_PED_OFF_VEHICLE(Ped ped) /*0x51AC07A44D4F5B8A*/ {
	uint64_t val;
	nativeInit(0x51AC07A44D4F5B8A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_CLEAR_PED_DAMAGE_DECAL_BY_ZONE(Ped ped, int p1, const char* p2) /*0x523C79AEEFCC4A2A*/ {
	uint64_t val;
	nativeInit(0x523C79AEEFCC4A2A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_0x52D59AB61DDC05DD(Ped ped, bool p1) /*0x52D59AB61DDC05DD*/ {
	uint64_t val;
	nativeInit(0x52D59AB61DDC05DD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float PED_GET_COMBAT_FLOAT(Ped ped, int p1) /*0x52DFF8A10508090A*/ {
	uint64_t val;
	nativeInit(0x52DFF8A10508090A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PED_SET_PED_IN_VEHICLE_CONTEXT(Ped ped, Hash context) /*0x530071295899A8C6*/ {
	uint64_t val;
	nativeInit(0x530071295899A8C6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = context;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_STOPPED(Ped ped) /*0x530944F6F4B8A214*/ {
	uint64_t val;
	nativeInit(0x530944F6F4B8A214);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_CLIMBING(Ped ped) /*0x53E8CB4F48BFE623*/ {
	uint64_t val;
	nativeInit(0x53E8CB4F48BFE623);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_0x5407B7288D0478B7(Any p0) /*0x5407B7288D0478B7*/ {
	uint64_t val;
	nativeInit(0x5407B7288D0478B7);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Ped PED_GET_JACK_TARGET(Ped ped) /*0x5486A79D9FBD342D*/ {
	uint64_t val;
	nativeInit(0x5486A79D9FBD342D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void PED_GIVE_PED_HELMET(Ped ped, bool cannotRemove, int helmetFlag, int textureIndex) /*0x54C7C4A94367717E*/ {
	uint64_t val;
	nativeInit(0x54C7C4A94367717E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = cannotRemove;
	nativePush(val);
	*(int*)(&val) = helmetFlag;
	nativePush(val);
	*(int*)(&val) = textureIndex;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_DIVING(Ped ped) /*0x5527B8246FEF9B11*/ {
	uint64_t val;
	nativeInit(0x5527B8246FEF9B11);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_HELMET(Ped ped, bool canWearHelmet) /*0x560A43136EB58105*/ {
	uint64_t val;
	nativeInit(0x560A43136EB58105);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = canWearHelmet;
	nativePush(val);
	nativeCall();
}
inline void PED__SET_PED_FACIAL_DECORATION(Ped ped, Hash collection, Hash overlay) /*0x5619BFA07CFD7833*/ {
	uint64_t val;
	nativeInit(0x5619BFA07CFD7833);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = collection;
	nativePush(val);
	*(Hash*)(&val) = overlay;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DIES_IN_WATER(Ped ped, bool toggle) /*0x56CEF0AC79073BDE*/ {
	uint64_t val;
	nativeInit(0x56CEF0AC79073BDE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, int p1) /*0x56E3B78C5408D9F4*/ {
	uint64_t val;
	nativeInit(0x56E3B78C5408D9F4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0x570389D1C3DE3C6B(Any p0) /*0x570389D1C3DE3C6B*/ {
	uint64_t val;
	nativeInit(0x570389D1C3DE3C6B);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_0x576594E8D64375E2(Any p0, bool p1) /*0x576594E8D64375E2*/ {
	uint64_t val;
	nativeInit(0x576594E8D64375E2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_USING_ANY_SCENARIO(Ped ped) /*0x57AB4A3080F85143*/ {
	uint64_t val;
	nativeInit(0x57AB4A3080F85143);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_IN_GROUP(Ped ped) /*0x5891CAC5D4ACFF74*/ {
	uint64_t val;
	nativeInit(0x5891CAC5D4ACFF74);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_SCRIPTED_ANIM_SEAT_OFFSET(Ped ped, float p1) /*0x5917BBA32D06C230*/ {
	uint64_t val;
	nativeInit(0x5917BBA32D06C230);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_HURT(Ped ped) /*0x5983BB449D7FDB12*/ {
	uint64_t val;
	nativeInit(0x5983BB449D7FDB12);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x5A7F62FDA59759BD() /*0x5A7F62FDA59759BD*/ {
	nativeInit(0x5A7F62FDA59759BD);
	nativeCall();
}
inline void PED_0x5AAB586FFEC0FD96(Any p0) /*0x5AAB586FFEC0FD96*/ {
	uint64_t val;
	nativeInit(0x5AAB586FFEC0FD96);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_0x5B6010B3CBC29095(Any p0, bool p1) /*0x5B6010B3CBC29095*/ {
	uint64_t val;
	nativeInit(0x5B6010B3CBC29095);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_ADD_ARMOUR_TO_PED(Ped ped, int amount) /*0x5BA652A0CD14DF2F*/ {
	uint64_t val;
	nativeInit(0x5BA652A0CD14DF2F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline Any PED_SET_PED_DIES_WHEN_INJURED(Ped ped, bool toggle) /*0x5BA7919BED300023*/ {
	uint64_t val;
	nativeInit(0x5BA7919BED300023);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Ped PED__GET_PED_AS_GROUP_LEADER(int groupID) /*0x5CCE68DBD5FE93EC*/ {
	uint64_t val;
	nativeInit(0x5CCE68DBD5FE93EC);
	*(int*)(&val) = groupID;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool PED_IS_PED_HEADTRACKING_PED(Ped ped1, Ped ped2) /*0x5CD3CB88A7F8850D*/ {
	uint64_t val;
	nativeInit(0x5CD3CB88A7F8850D);
	*(Ped*)(&val) = ped1;
	nativePush(val);
	*(Ped*)(&val) = ped2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x5D517B27CF6ECD04(Any p0) /*0x5D517B27CF6ECD04*/ {
	uint64_t val;
	nativeInit(0x5D517B27CF6ECD04);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) /*0x5E29243FB56FC6D4*/ {
	uint64_t val;
	nativeInit(0x5E29243FB56FC6D4);
	*(int*)(&val) = relationship;
	nativePush(val);
	*(Hash*)(&val) = group1;
	nativePush(val);
	*(Hash*)(&val) = group2;
	nativePush(val);
	nativeCall();
}
inline bool PED_CAN_CREATE_RANDOM_COPS() /*0x5EE2CAFF7F17770D*/ {
	nativeInit(0x5EE2CAFF7F17770D); return *(bool*)(nativeCall());
}
inline int PED__GET_NUM_PARENT_PEDS_OF_TYPE(int type) /*0x5EF37013A6539C9D*/ {
	uint64_t val;
	nativeInit(0x5EF37013A6539C9D);
	*(int*)(&val) = type;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED__SET_PED_DECORATION(Ped ped, Hash collection, Hash overlay) /*0x5F5D1665E352A839*/ {
	uint64_t val;
	nativeInit(0x5F5D1665E352A839);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = collection;
	nativePush(val);
	*(Hash*)(&val) = overlay;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(Ped ped, int propId) /*0x5FAF9754E789FB47*/ {
	uint64_t val;
	nativeInit(0x5FAF9754E789FB47);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = propId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_IS_PED_IN_ANY_PLANE(Ped ped) /*0x5FFF4CFC74D8FB80*/ {
	uint64_t val;
	nativeInit(0x5FFF4CFC74D8FB80);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x600048C60D5C2C51(Any p0) /*0x600048C60D5C2C51*/ {
	uint64_t val;
	nativeInit(0x600048C60D5C2C51);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED__IS_PED_BLUSH_COLOR_VALID(int colorID) /*0x604E810189EE3A59*/ {
	uint64_t val;
	nativeInit(0x604E810189EE3A59);
	*(int*)(&val) = colorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle PED_GET_VEHICLE_PED_IS_USING(Ped ped) /*0x6094AD011A2EA87D*/ {
	uint64_t val;
	nativeInit(0x6094AD011A2EA87D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline bool PED_IS_PED_IN_COVER(Ped ped, bool exceptUseWeapon) /*0x60DFD0691A170B88*/ {
	uint64_t val;
	nativeInit(0x60DFD0691A170B88);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = exceptUseWeapon;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_SHOOT_RATE(Ped ped, int shootRate) /*0x614DA022990752DC*/ {
	uint64_t val;
	nativeInit(0x614DA022990752DC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = shootRate;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x61767F73EACEED21(Ped ped) /*0x61767F73EACEED21*/ {
	uint64_t val;
	nativeInit(0x61767F73EACEED21);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_SYNCHRONIZED_SCENE_LOOPED(int sceneID) /*0x62522002E0C391BA*/ {
	uint64_t val;
	nativeInit(0x62522002E0C391BA);
	*(int*)(&val) = sceneID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_RESPONDING_TO_EVENT(Ped ped, Any event) /*0x625B774D75C87068*/ {
	uint64_t val;
	nativeInit(0x625B774D75C87068);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = event;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_HIDE_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, bool p2) /*0x62AB793144DE75DC*/ {
	uint64_t val;
	nativeInit(0x62AB793144DE75DC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int PED__CREATE_SYNCHRONIZED_SCENE_2(float x, float y, float z, float radius, Hash object) /*0x62EC273D00187DCA*/ {
	uint64_t val;
	nativeInit(0x62EC273D00187DCA);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = object;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_CAN_PLAY_AMBIENT_ANIMS(Ped ped, bool toggle) /*0x6373D1349925A70E*/ {
	uint64_t val;
	nativeInit(0x6373D1349925A70E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_BE_TARGETED_WHEN_INJURED(Ped ped, bool toggle) /*0x638C03B0F9878F57*/ {
	uint64_t val;
	nativeInit(0x638C03B0F9878F57);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_GROUP_FORMATION_DEFAULT_SPACING(int groupId) /*0x63DAB4CCB3273205*/ {
	uint64_t val;
	nativeInit(0x63DAB4CCB3273205);
	*(int*)(&val) = groupId;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_BE_TARGETTED(Ped ped, bool toggle) /*0x63F58F7C80513AAD*/ {
	uint64_t val;
	nativeInit(0x63F58F7C80513AAD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_HAS_PED_HEAD_BLEND_FINISHED(Ped ped) /*0x654CD0A825161131*/ {
	uint64_t val;
	nativeInit(0x654CD0A825161131);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_0x6585D955A68452A5(Ped ped) /*0x6585D955A68452A5*/ {
	uint64_t val;
	nativeInit(0x6585D955A68452A5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(float modifier) /*0x66460DEDDD417254*/ {
	uint64_t val;
	nativeInit(0x66460DEDDD417254);
	*(float*)(&val) = modifier;
	nativePush(val);
	nativeCall();
}
inline void PED_0x6647C5F6F5792496(Ped ped, bool p1) /*0x6647C5F6F5792496*/ {
	uint64_t val;
	nativeInit(0x6647C5F6F5792496);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x66680A92700F43DF(Ped p0) /*0x66680A92700F43DF*/ {
	uint64_t val;
	nativeInit(0x66680A92700F43DF);
	*(Ped*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_BE_TARGETTED_BY_PLAYER(Ped ped, Player player, bool toggle) /*0x66B57B72E0836A76*/ {
	uint64_t val;
	nativeInit(0x66B57B72E0836A76);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_ON_VEHICLE(Ped ped) /*0x67722AEB798E5FAB*/ {
	uint64_t val;
	nativeInit(0x67722AEB798E5FAB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_DRAWABLE_VARIATION(Ped ped, int componentId) /*0x67F3780DD425D4FC*/ {
	uint64_t val;
	nativeInit(0x67F3780DD425D4FC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_0x68772DB2B2526F9F(Ped ped, float x, float y, float z, float range) /*0x68772DB2B2526F9F*/ {
	uint64_t val;
	nativeInit(0x68772DB2B2526F9F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x687C0B594907D2E8(Ped ped) /*0x687C0B594907D2E8*/ {
	uint64_t val;
	nativeInit(0x687C0B594907D2E8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED__GET_FIRST_PARENT_ID_FOR_PED_TYPE(int type) /*0x68D353AB88B97E0C*/ {
	uint64_t val;
	nativeInit(0x68D353AB88B97E0C);
	*(int*)(&val) = type;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_APPLY_DAMAGE_TO_PED(Ped ped, int damageAmount, bool armorFirst) /*0x697157CED63F18D4*/ {
	uint64_t val;
	nativeInit(0x697157CED63F18D4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = damageAmount;
	nativePush(val);
	*(bool*)(&val) = armorFirst;
	nativePush(val);
	nativeCall();
}
inline bool PED__IS_PED_STANDING_IN_COVER(Ped ped) /*0x6A03BF943D767C93*/ {
	uint64_t val;
	nativeInit(0x6A03BF943D767C93);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Player PED_GET_PLAYER_PED_IS_FOLLOWING(Ped ped) /*0x6A3975DEA89F9A17*/ {
	uint64_t val;
	nativeInit(0x6A3975DEA89F9A17);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline void PED_SET_SYNCHRONIZED_SCENE_ORIGIN(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, int unk) /*0x6ACF6B7225801CD7*/ {
	uint64_t val;
	nativeInit(0x6ACF6B7225801CD7);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = roll;
	nativePush(val);
	*(float*)(&val) = pitch;
	nativePush(val);
	*(float*)(&val) = yaw;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline void PED_0x6B0E6172C9A4D902(bool p0) /*0x6B0E6172C9A4D902*/ {
	uint64_t val;
	nativeInit(0x6B0E6172C9A4D902);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_EVASIVE_DIVE(Ped ped, bool toggle) /*0x6B7A646C242A7059*/ {
	uint64_t val;
	nativeInit(0x6B7A646C242A7059);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MAX_TIME_UNDERWATER(Ped ped, float value) /*0x6BA428C528D9E522*/ {
	uint64_t val;
	nativeInit(0x6BA428C528D9E522);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_ARM_IK(Ped ped, bool toggle) /*0x6C3B4D6D13B4C841*/ {
	uint64_t val;
	nativeInit(0x6C3B4D6D13B4C841);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ALTERNATE_WALK_ANIM(Ped ped, const char* animDict, const char* animName, float p3, bool p4) /*0x6C60394CB4F75E9A*/ {
	uint64_t val;
	nativeInit(0x6C60394CB4F75E9A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool PED__CAN_PED_SEE_PED(Ped ped1, Ped ped2) /*0x6CD5A433374D4CFB*/ {
	uint64_t val;
	nativeInit(0x6CD5A433374D4CFB);
	*(Ped*)(&val) = ped1;
	nativePush(val);
	*(Ped*)(&val) = ped2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_DETACH_SYNCHRONIZED_SCENE(int sceneID) /*0x6D38F1F04CBB37EA*/ {
	uint64_t val;
	nativeInit(0x6D38F1F04CBB37EA);
	*(int*)(&val) = sceneID;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_MALE(Ped ped) /*0x6D9F5FAA7488BA46*/ {
	uint64_t val;
	nativeInit(0x6D9F5FAA7488BA46);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_IN_ANY_TAXI(Ped ped) /*0x6E575D6A898AB852*/ {
	uint64_t val;
	nativeInit(0x6E575D6A898AB852);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(Ped ped, const char* animDict, const char* anim) /*0x6EC47A344923E1ED*/ {
	uint64_t val;
	nativeInit(0x6EC47A344923E1ED);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = anim;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_SEAT_PED_IS_TRYING_TO_ENTER(Ped ped) /*0x6F4C85ACD641BCD2*/ {
	uint64_t val;
	nativeInit(0x6F4C85ACD641BCD2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_IS_PED_IN_ANY_TRAIN(Ped ped) /*0x6F972C1AB75A1ED0*/ {
	uint64_t val;
	nativeInit(0x6F972C1AB75A1ED0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_KNOCK_OFF_PED_PROP(Ped ped, bool p1, bool knockOff, bool p2, bool p3) /*0x6FD7816A36615F48*/ {
	uint64_t val;
	nativeInit(0x6FD7816A36615F48);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = knockOff;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_VISUAL_FIELD_MAX_ANGLE(Ped ped, float value) /*0x70793BDCA1E854D4*/ {
	uint64_t val;
	nativeInit(0x70793BDCA1E854D4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PEDHEADSHOT_READY(int handle) /*0x7085228842B13A67*/ {
	uint64_t val;
	nativeInit(0x7085228842B13A67);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_FLEE_ATTRIBUTES(Ped ped, int attributes, bool p2) /*0x70A2D1137C8ED7C9*/ {
	uint64_t val;
	nativeInit(0x70A2D1137C8ED7C9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = attributes;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED__SET_PED_FACE_FEATURE(Ped ped, int index, float scale) /*0x71A5C1DBA060049E*/ {
	uint64_t val;
	nativeInit(0x71A5C1DBA060049E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	nativeCall();
}
inline void PED_RESURRECT_PED(Ped ped) /*0x71BC8E838B9C6035*/ {
	uint64_t val;
	nativeInit(0x71BC8E838B9C6035);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_GET_PED_DECORATIONS_STATE(Ped ped) /*0x71EAB450D86954A1*/ {
	uint64_t val;
	nativeInit(0x71EAB450D86954A1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_UPDATE_PED_HEAD_BLEND_DATA(Ped ped, float shapeMix, float skinMix, float thirdMix) /*0x723538F61C647C5A*/ {
	uint64_t val;
	nativeInit(0x723538F61C647C5A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = shapeMix;
	nativePush(val);
	*(float*)(&val) = skinMix;
	nativePush(val);
	*(float*)(&val) = thirdMix;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped) /*0x726256CC1EEB182F*/ {
	uint64_t val;
	nativeInit(0x726256CC1EEB182F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_0x733C87D4CE22BEA2(Any p0) /*0x733C87D4CE22BEA2*/ {
	uint64_t val;
	nativeInit(0x733C87D4CE22BEA2);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_SYNCHRONIZED_SCENE_PHASE(int sceneID, float phase) /*0x734292F4F0ABF6D0*/ {
	uint64_t val;
	nativeInit(0x734292F4F0ABF6D0);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(float*)(&val) = phase;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x7350823473013C02(Ped ped) /*0x7350823473013C02*/ {
	uint64_t val;
	nativeInit(0x7350823473013C02);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_LEG_IK(Ped ped, bool toggle) /*0x73518ECE2485412B*/ {
	uint64_t val;
	nativeInit(0x73518ECE2485412B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_PED_DEFENSIVE_AREA(Ped ped, bool toggle) /*0x74D4E028107450A9*/ {
	uint64_t val;
	nativeInit(0x74D4E028107450A9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0x75BA1CB3B7D40CAF(Ped ped, bool p1) /*0x75BA1CB3B7D40CAF*/ {
	uint64_t val;
	nativeInit(0x75BA1CB3B7D40CAF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0x781DE8FA214E87D2(Ped ped, const char* p1) /*0x781DE8FA214E87D2*/ {
	uint64_t val;
	nativeInit(0x781DE8FA214E87D2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_0x784002A632822099(Ped ped) /*0x784002A632822099*/ {
	uint64_t val;
	nativeInit(0x784002A632822099);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x78C4E9961DB3EB5B(Any p0, Any p1) /*0x78C4E9961DB3EB5B*/ {
	uint64_t val;
	nativeInit(0x78C4E9961DB3EB5B);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(Ped ped, float angle) /*0x78D0B67629D75856*/ {
	uint64_t val;
	nativeInit(0x78D0B67629D75856);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_MODEL(Ped ped, Hash modelHash) /*0x796D90EFB19AA332*/ {
	uint64_t val;
	nativeInit(0x796D90EFB19AA332);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_PARACHUTE_STATE(Ped ped) /*0x79CFD9827CC979B6*/ {
	uint64_t val;
	nativeInit(0x79CFD9827CC979B6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(Ped ped, float angle) /*0x7A276EB2C224D70F*/ {
	uint64_t val;
	nativeInit(0x7A276EB2C224D70F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(float p0, float p1) /*0x7A556143A1C03898*/ {
	uint64_t val;
	nativeInit(0x7A556143A1C03898);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(Ped ped, int state) /*0x7A6535691B477C48*/ {
	uint64_t val;
	nativeInit(0x7A6535691B477C48);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline Any PED_SET_PED_ACCURACY(Ped ped, int accuracy) /*0x7AEFB85C1D49DEB6*/ {
	uint64_t val;
	nativeInit(0x7AEFB85C1D49DEB6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = accuracy;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PED_GET_PED_STEALTH_MOVEMENT(Ped ped) /*0x7C2AC9CA66575FBF*/ {
	uint64_t val;
	nativeInit(0x7C2AC9CA66575FBF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_DOES_GROUP_EXIST(int groupId) /*0x7C6B0C22F9F40BBE*/ {
	uint64_t val;
	nativeInit(0x7C6B0C22F9F40BBE);
	*(int*)(&val) = groupId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__TRACK_PED_VISIBILITY(Ped ped) /*0x7D7A2E43E74E2EB8*/ {
	uint64_t val;
	nativeInit(0x7D7A2E43E74E2EB8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline Hash PED_GET_PED_RELATIONSHIP_GROUP_HASH(Ped ped) /*0x7DBDD04862D95F04*/ {
	uint64_t val;
	nativeInit(0x7DBDD04862D95F04);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool PED_IS_PED_IN_PARACHUTE_FREE_FALL(Ped ped) /*0x7DCE8BDA0F1C1200*/ {
	uint64_t val;
	nativeInit(0x7DCE8BDA0F1C1200);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Ped PED_CREATE_PED_INSIDE_VEHICLE(Vehicle vehicle, int pedType, Hash modelHash, int seat, bool isNetwork, bool thisScriptCheck) /*0x7DD959874C1FD534*/ {
	uint64_t val;
	nativeInit(0x7DD959874C1FD534);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = pedType;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(int*)(&val) = seat;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool PED_IS_PED_SHOOTING_IN_AREA(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, bool p7, bool p8) /*0x7E9DFE24AC1E58EF*/ {
	uint64_t val;
	nativeInit(0x7E9DFE24AC1E58EF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_GET_PED_CONFIG_FLAG(Ped ped, int flagId, bool p2) /*0x7EE53118C892B513*/ {
	uint64_t val;
	nativeInit(0x7EE53118C892B513);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flagId;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_WAS_PED_KILLED_BY_TAKEDOWN(Ped ped) /*0x7F08E26039C7347C*/ {
	uint64_t val;
	nativeInit(0x7F08E26039C7347C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0x7F2F4F13AC5257EF(int SceneID) /*0x7F2F4F13AC5257EF*/ {
	uint64_t val;
	nativeInit(0x7F2F4F13AC5257EF);
	*(int*)(&val) = SceneID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_GENERATES_DEAD_BODY_EVENTS(Ped ped, bool toggle) /*0x7FB17BA2E7DECA5B*/ {
	uint64_t val;
	nativeInit(0x7FB17BA2E7DECA5B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0x80054D7FCC70EEC6(Any p0) /*0x80054D7FCC70EEC6*/ {
	uint64_t val;
	nativeInit(0x80054D7FCC70EEC6);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_HEADTRACKING_ENTITY(Ped ped, Entity entity) /*0x813A0A7C9D2E831F*/ {
	uint64_t val;
	nativeInit(0x813A0A7C9D2E831F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle PED_GET_VEHICLE_PED_IS_TRYING_TO_ENTER(Ped ped) /*0x814FA8BE5449445D*/ {
	uint64_t val;
	nativeInit(0x814FA8BE5449445D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void PED_APPLY_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any p4) /*0x816F6981C60BF53B*/ {
	uint64_t val;
	nativeInit(0x816F6981C60BF53B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_SITTING_IN_ANY_VEHICLE(Ped ped) /*0x826AA586EDB9FEF8*/ {
	uint64_t val;
	nativeInit(0x826AA586EDB9FEF8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CLOTH_PRONE(Any p0, Any p1) /*0x82A3D6D9CC2CB8E3*/ {
	uint64_t val;
	nativeInit(0x82A3D6D9CC2CB8E3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0x83A169EABCDB10A2(Any p0, Any p1) /*0x83A169EABCDB10A2*/ {
	uint64_t val;
	nativeInit(0x83A169EABCDB10A2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_APPLY_PED_BLOOD(Ped ped, int boneIndex, float xRot, float yRot, float zRot, const char* woundType) /*0x83F7E01C7B769A26*/ {
	uint64_t val;
	nativeInit(0x83F7E01C7B769A26);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = boneIndex;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(const char**)(&val) = woundType;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_PREFERRED_COVER_SET(Ped ped, Any itemSet) /*0x8421EB4DA7E391B9*/ {
	uint64_t val;
	nativeInit(0x8421EB4DA7E391B9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = itemSet;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_COVER_FACING_LEFT(Ped ped) /*0x845333B3150583AB*/ {
	uint64_t val;
	nativeInit(0x845333B3150583AB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_INJURED(Ped ped) /*0x84A2DD9AC37C35C1*/ {
	uint64_t val;
	nativeInit(0x84A2DD9AC37C35C1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_HAS_PED_RECEIVED_EVENT(Ped ped, Any p1) /*0x8507BCB710FA6DC0*/ {
	uint64_t val;
	nativeInit(0x8507BCB710FA6DC0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_BEING_STEALTH_KILLED(Ped ped) /*0x863B23EFDE9C5DF2*/ {
	uint64_t val;
	nativeInit(0x863B23EFDE9C5DF2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_COORDS_NO_GANG(Ped ped, float posX, float posY, float posZ) /*0x87052FE446E07247*/ {
	uint64_t val;
	nativeInit(0x87052FE446E07247);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline Ped PED_GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType) /*0x876046A8E3A4B71C*/ {
	uint64_t val;
	nativeInit(0x876046A8E3A4B71C);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRadius;
	nativePush(val);
	*(float*)(&val) = yRadius;
	nativePush(val);
	*(float*)(&val) = zRadius;
	nativePush(val);
	*(int*)(&val) = pedType;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline Any PED_0x876928DDDFCCC9CD() /*0x876928DDDFCCC9CD*/ {
	nativeInit(0x876928DDDFCCC9CD); return *(Any*)(nativeCall());
}
inline void PED_CLEAR_PED_ALTERNATE_WALK_ANIM(Ped ped, float p1) /*0x8844BBFCE30AA9E9*/ {
	uint64_t val;
	nativeInit(0x8844BBFCE30AA9E9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_STEALTH_MOVEMENT(Ped ped, bool p1, const char* action) /*0x88CBB5CEB96B7BD2*/ {
	uint64_t val;
	nativeInit(0x88CBB5CEB96B7BD2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = action;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_PROP_INDEX(Ped ped, int componentId) /*0x898CC20EA75BACD8*/ {
	uint64_t val;
	nativeInit(0x898CC20EA75BACD8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(bool toggle) /*0x8A4986851C4EF6E7*/ {
	uint64_t val;
	nativeInit(0x8A4986851C4EF6E7);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_PARACHUTE_LANDING_TYPE(Ped ped) /*0x8B9F1FC6AE8166C0*/ {
	uint64_t val;
	nativeInit(0x8B9F1FC6AE8166C0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int PED_CREATE_SYNCHRONIZED_SCENE(float posX, float posY, float posZ, float roll, float pitch, float yaw, int p6) /*0x8C18E0F9080ADD73*/ {
	uint64_t val;
	nativeInit(0x8C18E0F9080ADD73);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = roll;
	nativePush(val);
	*(float*)(&val) = pitch;
	nativePush(val);
	*(float*)(&val) = yaw;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Entity PED_0x8C4F3BF23B6237DB(Ped ped, bool p1, bool p2) /*0x8C4F3BF23B6237DB*/ {
	uint64_t val;
	nativeInit(0x8C4F3BF23B6237DB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void PED_REVIVE_INJURED_PED(Ped ped) /*0x8D8ACD8388CD99CE*/ {
	uint64_t val;
	nativeInit(0x8D8ACD8388CD99CE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_GET_GROUP_SIZE(int groupID, Any* unknown, int* sizeInMembers) /*0x8DE69FE35CA09A45*/ {
	uint64_t val;
	nativeInit(0x8DE69FE35CA09A45);
	*(int*)(&val) = groupID;
	nativePush(val);
	*(Any**)(&val) = unknown;
	nativePush(val);
	*(int**)(&val) = sizeInMembers;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_GROUP(int groupId) /*0x8EB2F69076AF7053*/ {
	uint64_t val;
	nativeInit(0x8EB2F69076AF7053);
	*(int*)(&val) = groupId;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_LAST_DAMAGE_BONE(Ped ped) /*0x8EF6B7AC68E2F01B*/ {
	uint64_t val;
	nativeInit(0x8EF6B7AC68E2F01B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(Ped mp_f_freemode_01, int Te, int DrawableID) /*0x8F7156A3142A6BAD*/ {
	uint64_t val;
	nativeInit(0x8F7156A3142A6BAD);
	*(Ped*)(&val) = mp_f_freemode_01;
	nativePush(val);
	*(int*)(&val) = Te;
	nativePush(val);
	*(int*)(&val) = DrawableID;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_CLEAR_PED_BLOOD_DAMAGE(Ped ped) /*0x8FE22675A5A45817*/ {
	uint64_t val;
	nativeInit(0x8FE22675A5A45817);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED_CREATE_GROUP(int unused) /*0x90370EBE0FEE1A3D*/ {
	uint64_t val;
	nativeInit(0x90370EBE0FEE1A3D);
	*(int*)(&val) = unused;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, const char* animDictionary, const char* animationName, float p4, bool p5) /*0x90A43CC281FFAB46*/ {
	uint64_t val;
	nativeInit(0x90A43CC281FFAB46);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = stance;
	nativePush(val);
	*(const char**)(&val) = animDictionary;
	nativePush(val);
	*(const char**)(&val) = animationName;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_FLYING_VEHICLE(Ped ped) /*0x9134873537FA419C*/ {
	uint64_t val;
	nativeInit(0x9134873537FA419C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_TRACKED_PED_VISIBLE(Ped ped) /*0x91C8E617F64188AC*/ {
	uint64_t val;
	nativeInit(0x91C8E617F64188AC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_REMOVE_STEALTH_MODE_ASSET(const char* asset) /*0x9219857D21F0E842*/ {
	uint64_t val;
	nativeInit(0x9219857D21F0E842);
	*(const char**)(&val) = asset;
	nativePush(val);
	nativeCall();
}
inline void PED_REGISTER_HATED_TARGETS_AROUND_PED(Ped ped, float radius) /*0x9222F300BF8354FE*/ {
	uint64_t val;
	nativeInit(0x9222F300BF8354FE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_PROP_INDEX(Ped ped, int componentId, int drawableId, int TextureId, bool isNetworkGame) /*0x93376B65A266EB5F*/ {
	uint64_t val;
	nativeInit(0x93376B65A266EB5F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	*(int*)(&val) = TextureId;
	nativePush(val);
	*(bool*)(&val) = isNetworkGame;
	nativePush(val);
	nativeCall();
}
inline Entity PED_GET_PED_SOURCE_OF_DEATH(Ped ped) /*0x93C8B64DEB84728C*/ {
	uint64_t val;
	nativeInit(0x93C8B64DEB84728C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void PED_SET_PED_HEAD_BLEND_DATA(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, bool isParent) /*0x9414E18B9434C2FE*/ {
	uint64_t val;
	nativeInit(0x9414E18B9434C2FE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = shapeFirstID;
	nativePush(val);
	*(int*)(&val) = shapeSecondID;
	nativePush(val);
	*(int*)(&val) = shapeThirdID;
	nativePush(val);
	*(int*)(&val) = skinFirstID;
	nativePush(val);
	*(int*)(&val) = skinSecondID;
	nativePush(val);
	*(int*)(&val) = skinThirdID;
	nativePush(val);
	*(float*)(&val) = shapeMix;
	nativePush(val);
	*(float*)(&val) = skinMix;
	nativePush(val);
	*(float*)(&val) = thirdMix;
	nativePush(val);
	*(bool*)(&val) = isParent;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_ON_ANY_BIKE(Ped ped) /*0x94495889E22C6479*/ {
	uint64_t val;
	nativeInit(0x94495889E22C6479);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_ARMOUR(Ped ped) /*0x9483AF821605B1D8*/ {
	uint64_t val;
	nativeInit(0x9483AF821605B1D8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(Ped ped, bool toggle) /*0x94D94BF1A75AED3D*/ {
	uint64_t val;
	nativeInit(0x94D94BF1A75AED3D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0x952F06BEECD775CC(Any p0, Any p1, Any p2, Any p3) /*0x952F06BEECD775CC*/ {
	uint64_t val;
	nativeInit(0x952F06BEECD775CC);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any PED_GET_QUADBIKE_DISPLAY_VARIATIONS(Any p0) /*0x953563CE563143AF*/ {
	uint64_t val;
	nativeInit(0x953563CE563143AF);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) /*0x95E3D6257B166CF2*/ {
	uint64_t val;
	nativeInit(0x95E3D6257B166CF2);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PED_DELETE_PED(Ped* ped) /*0x9614299DCB53E54B*/ {
	uint64_t val;
	nativeInit(0x9614299DCB53E54B);
	*(Ped**)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_SHOOTS_AT_COORD(Ped ped, float x, float y, float z, bool toggle) /*0x96A05E4FB321B1BA*/ {
	uint64_t val;
	nativeInit(0x96A05E4FB321B1BA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_UNREGISTER_PEDHEADSHOT(int handle) /*0x96B1361D9B24C2FF*/ {
	uint64_t val;
	nativeInit(0x96B1361D9B24C2FF);
	*(int*)(&val) = handle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_KEEP_TASK(Ped ped, bool toggle) /*0x971D38760FBC02EF*/ {
	uint64_t val;
	nativeInit(0x971D38760FBC02EF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any PED_SET_PED_ENABLE_WEAPON_BLOCKING(Ped ped, bool toggle) /*0x97A790315D3831FD*/ {
	uint64_t val;
	nativeInit(0x97A790315D3831FD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_RESET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped) /*0x97B0DB5B4AA74E77*/ {
	uint64_t val;
	nativeInit(0x97B0DB5B4AA74E77);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_NAME_DEBUG(Ped ped, const char* name) /*0x98EFA132A4117BE1*/ {
	uint64_t val;
	nativeInit(0x98EFA132A4117BE1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void PED_0x9911F4A24485F653(bool p0) /*0x9911F4A24485F653*/ {
	uint64_t val;
	nativeInit(0x9911F4A24485F653);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_ANY_VEHICLE(Ped ped, bool atGetIn) /*0x997ABD671D25CA0B*/ {
	uint64_t val;
	nativeInit(0x997ABD671D25CA0B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = atGetIn;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_BEING_JACKED(Ped ped) /*0x9A497FE2DF198913*/ {
	uint64_t val;
	nativeInit(0x9A497FE2DF198913);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0x9A77DFD295E29B09(Any p0, bool p1) /*0x9A77DFD295E29B09*/ {
	uint64_t val;
	nativeInit(0x9A77DFD295E29B09);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vehicle PED_GET_VEHICLE_PED_IS_IN(Ped ped, bool lastVehicle) /*0x9A9112A0FE9A4713*/ {
	uint64_t val;
	nativeInit(0x9A9112A0FE9A4713);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = lastVehicle;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void PED_SET_PED_FIRING_PATTERN(Ped ped, Hash patternHash) /*0x9AC577F5A12AD8A9*/ {
	uint64_t val;
	nativeInit(0x9AC577F5A12AD8A9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = patternHash;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_COORDS_KEEP_VEHICLE(Ped ped, float posX, float posY, float posZ) /*0x9AFEFF481A85AB2E*/ {
	uint64_t val;
	nativeInit(0x9AFEFF481A85AB2E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline Ped PED_GET_PEDS_JACKER(Ped ped) /*0x9B128DC36C1E04CF*/ {
	uint64_t val;
	nativeInit(0x9B128DC36C1E04CF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline Ped PED_CREATE_RANDOM_PED_AS_DRIVER(Vehicle vehicle, bool returnHandle) /*0x9B62392B474F44A0*/ {
	uint64_t val;
	nativeInit(0x9B62392B474F44A0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = returnHandle;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool PED_IS_PED_GROUP_MEMBER(Ped ped, int groupId) /*0x9BB01E3834671191*/ {
	uint64_t val;
	nativeInit(0x9BB01E3834671191);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = groupId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float PED_GET_PED_ENVEFF_SCALE(Ped ped) /*0x9C14D30395A51A3C*/ {
	uint64_t val;
	nativeInit(0x9C14D30395A51A3C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PED_0x9C6A6C19B6C0C496(Ped p0, Any* p1) /*0x9C6A6C19B6C0C496*/ {
	uint64_t val;
	nativeInit(0x9C6A6C19B6C0C496);
	*(Ped*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_CLEAR_PED_WETNESS(Ped ped) /*0x9C720776DAA43E7E*/ {
	uint64_t val;
	nativeInit(0x9C720776DAA43E7E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(Ped ped, float range) /*0x9C74B0BC831B753A*/ {
	uint64_t val;
	nativeInit(0x9C74B0BC831B753A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius, bool p5, bool p6) /*0x9D3151A373974804*/ {
	uint64_t val;
	nativeInit(0x9D3151A373974804);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline Any PED_0x9D728C1E12BF5518(Any p0) /*0x9D728C1E12BF5518*/ {
	uint64_t val;
	nativeInit(0x9D728C1E12BF5518);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED__SET_PED_COVER_CLIPSET_OVERRIDE(Ped ped, const char* clipset) /*0x9DBA107B4937F809*/ {
	uint64_t val;
	nativeInit(0x9DBA107B4937F809);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = clipset;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_SWIMMING(Ped ped) /*0x9DE327631295B4C2*/ {
	uint64_t val;
	nativeInit(0x9DE327631295B4C2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0x9E30E91FB03A2CAF(Any* p0, Any* p1) /*0x9E30E91FB03A2CAF*/ {
	uint64_t val;
	nativeInit(0x9E30E91FB03A2CAF);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_RELATIONSHIP_BETWEEN_GROUPS(Hash group1, Hash group2) /*0x9E6B70061662AE5C*/ {
	uint64_t val;
	nativeInit(0x9E6B70061662AE5C);
	*(Hash*)(&val) = group1;
	nativePush(val);
	*(Hash*)(&val) = group2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_MOVE_ANIMS_BLEND_OUT(Ped ped) /*0x9E8C908F41584ECD*/ {
	uint64_t val;
	nativeInit(0x9E8C908F41584ECD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_AS_GROUP_MEMBER(Ped ped, int groupId) /*0x9F3480FE65DB31B5*/ {
	uint64_t val;
	nativeInit(0x9F3480FE65DB31B5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = groupId;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_GOING_INTO_COVER(Ped ped) /*0x9F65DBC537E59AD5*/ {
	uint64_t val;
	nativeInit(0x9F65DBC537E59AD5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_COMBAT_ATTRIBUTES(Ped ped, int attributeIndex, bool enabled) /*0x9F7794730795E019*/ {
	uint64_t val;
	nativeInit(0x9F7794730795E019);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = attributeIndex;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, bool toggle) /*0x9F8AA94D6D97DBF4*/ {
	uint64_t val;
	nativeInit(0x9F8AA94D6D97DBF4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_PED_RAGDOLL_TIMER(Ped ped) /*0x9FA4664CF62E47E8*/ {
	uint64_t val;
	nativeInit(0x9FA4664CF62E47E8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline int PED__GET_TATTOO_ZONE(Hash collection, Hash overlay) /*0x9FD452BFBE7A7A8B*/ {
	uint64_t val;
	nativeInit(0x9FD452BFBE7A7A8B);
	*(Hash*)(&val) = collection;
	nativePush(val);
	*(Hash*)(&val) = overlay;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_GRAVITY(Ped ped, bool toggle) /*0x9FF447B6B6AD960A*/ {
	uint64_t val;
	nativeInit(0x9FF447B6B6AD960A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PEDHEADSHOT_VALID(int handle) /*0xA0A9668F158129A2*/ {
	uint64_t val;
	nativeInit(0xA0A9668F158129A2);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_ANY_PED_SHOOTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, bool p6, bool p7) /*0xA0D3D71EA1086C55*/ {
	uint64_t val;
	nativeInit(0xA0D3D71EA1086C55);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xA21C118553BBDF02(Ped ped) /*0xA21C118553BBDF02*/ {
	uint64_t val;
	nativeInit(0xA21C118553BBDF02);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_0xA3A9299C4F2ADB98(Any p0) /*0xA3A9299C4F2ADB98*/ {
	uint64_t val;
	nativeInit(0xA3A9299C4F2ADB98);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_IN_VEHICLE(Ped ped, Vehicle vehicle, bool atGetIn) /*0xA3EE4A07279BB9DB*/ {
	uint64_t val;
	nativeInit(0xA3EE4A07279BB9DB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = atGetIn;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0xA3F3564A5B3646C0(Ped ped) /*0xA3F3564A5B3646C0*/ {
	uint64_t val;
	nativeInit(0xA3F3564A5B3646C0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xA52D5247A4227E14(Any p0) /*0xA52D5247A4227E14*/ {
	uint64_t val;
	nativeInit(0xA52D5247A4227E14);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_COWER_HASH(Ped ped, const char* p1) /*0xA549131166868ED3*/ {
	uint64_t val;
	nativeInit(0xA549131166868ED3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xA586FBEB32A53DBB() /*0xA586FBEB32A53DBB*/ {
	nativeInit(0xA586FBEB32A53DBB); return *(Any*)(nativeCall());
}
inline int PED__GET_PED_HEAD_OVERLAY_VALUE(Ped ped, int overlayID) /*0xA60EF3B6461A4D43*/ {
	uint64_t val;
	nativeInit(0xA60EF3B6461A4D43);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = overlayID;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any PED_0xA635C11B8C44AFC2() /*0xA635C11B8C44AFC2*/ {
	nativeInit(0xA635C11B8C44AFC2); return *(Any*)(nativeCall());
}
inline void PED_0xA660FAF550EB37E5(Any p0, bool p1) /*0xA660FAF550EB37E5*/ {
	uint64_t val;
	nativeInit(0xA660FAF550EB37E5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(Ped ped, int propId, int drawableId) /*0xA6E7F1CEB523E171*/ {
	uint64_t val;
	nativeInit(0xA6E7F1CEB523E171);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = propId;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_DRIVER_AGGRESSIVENESS(Ped driver, float aggressiveness) /*0xA731F608CA104E3C*/ {
	uint64_t val;
	nativeInit(0xA731F608CA104E3C);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(float*)(&val) = aggressiveness;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_PED_HELMET(Ped ped, bool instantly) /*0xA7B2458D0AD6DED8*/ {
	uint64_t val;
	nativeInit(0xA7B2458D0AD6DED8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = instantly;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_SITTING_IN_VEHICLE(Ped ped, Vehicle vehicle) /*0xA808AA1D79230FC2*/ {
	uint64_t val;
	nativeInit(0xA808AA1D79230FC2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xA9B61A329BFDCBEA(Any p0, bool p1) /*0xA9B61A329BFDCBEA*/ {
	uint64_t val;
	nativeInit(0xA9B61A329BFDCBEA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MONEY(Ped ped, int amount) /*0xA9C8960E8684C1B5*/ {
	uint64_t val;
	nativeInit(0xA9C8960E8684C1B5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DESIRED_HEADING(Ped ped, float heading) /*0xAA5A7ECE2AA8FE70*/ {
	uint64_t val;
	nativeInit(0xAA5A7ECE2AA8FE70);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	nativeCall();
}
inline void PED_RESET_PED_MOVEMENT_CLIPSET(Ped ped, float p1) /*0xAA74EC0CB0AAEA2C*/ {
	uint64_t val;
	nativeInit(0xAA74EC0CB0AAEA2C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xAAA6A3698A69E048(Any p0) /*0xAAA6A3698A69E048*/ {
	uint64_t val;
	nativeInit(0xAAA6A3698A69E048);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any PED_SET_PED_PINNED_DOWN(Ped player, bool pinned, int p2) /*0xAAD6D1ACF08F4612*/ {
	uint64_t val;
	nativeInit(0xAAD6D1ACF08F4612);
	*(Ped*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = pinned;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_REMOVE_PED_ELEGANTLY(Ped* ped) /*0xAC6D445B994DF95E*/ {
	uint64_t val;
	nativeInit(0xAC6D445B994DF95E);
	*(Ped**)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped, Hash hash) /*0xADB3F206518799E8*/ {
	uint64_t val;
	nativeInit(0xADB3F206518799E8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = hash;
	nativePush(val);
	nativeCall();
}
inline bool PED_SET_PED_TO_RAGDOLL(Ped ped, int time1, int time2, int ragdollType, bool p4, bool p5, bool p6) /*0xAE99FB955581844A*/ {
	uint64_t val;
	nativeInit(0xAE99FB955581844A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = time1;
	nativePush(val);
	*(int*)(&val) = time2;
	nativePush(val);
	*(int*)(&val) = ragdollType;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_MOVEMENT_CLIPSET(Player* player, const char* clipSet, float blendTime) /*0xAF8A94EDE7712BEF*/ {
	uint64_t val;
	nativeInit(0xAF8A94EDE7712BEF);
	*(Player**)(&val) = player;
	nativePush(val);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	*(float*)(&val) = blendTime;
	nativePush(val);
	nativeCall();
}
inline bool PED_GET_PED_RESET_FLAG(Ped ped, int flagId) /*0xAF9E59B1B1FBF2A0*/ {
	uint64_t val;
	nativeInit(0xAF9E59B1B1FBF2A0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flagId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xAFC976FD0580C7B3(Ped ped, bool toggle) /*0xAFC976FD0580C7B3*/ {
	uint64_t val;
	nativeInit(0xAFC976FD0580C7B3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xAFF4710E2A0A6C12(Ped ped) /*0xAFF4710E2A0A6C12*/ {
	uint64_t val;
	nativeInit(0xAFF4710E2A0A6C12);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_RAGDOLL(Ped ped, bool toggle) /*0xB128377056A54E2A*/ {
	uint64_t val;
	nativeInit(0xB128377056A54E2A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_GIVE_PED_NM_MESSAGE(Ped ped) /*0xB158DFCCC56E5C5B*/ {
	uint64_t val;
	nativeInit(0xB158DFCCC56E5C5B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_DRIVER_ABILITY(Ped driver, float ability) /*0xB195FFA8042FC5C3*/ {
	uint64_t val;
	nativeInit(0xB195FFA8042FC5C3);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(float*)(&val) = ability;
	nativePush(val);
	nativeCall();
}
inline void PED_0xB2AFF10216DEFA2F(float x, float y, float z, float p3, float p4, float p5, float p6, int interiorFlags, float scale, int duration) /*0xB2AFF10216DEFA2F*/ {
	uint64_t val;
	nativeInit(0xB2AFF10216DEFA2F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(int*)(&val) = interiorFlags;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_DOING_DRIVEBY(Ped ped) /*0xB2C086CC1BF8F2BF*/ {
	uint64_t val;
	nativeInit(0xB2C086CC1BF8F2BF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_CAN_ATTACK_FRIENDLY(Ped ped, bool toggle, bool p2) /*0xB3B1CB349FF9C75D*/ {
	uint64_t val;
	nativeInit(0xB3B1CB349FF9C75D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_STOP_ANY_PED_MODEL_BEING_SUPPRESSED() /*0xB47BD05FA66B40CF*/ {
	nativeInit(0xB47BD05FA66B40CF);
	nativeCall();
}
inline Ped PED_CREATE_RANDOM_PED(float posX, float posY, float posZ) /*0xB4AC7D0CF06BFE8F*/ {
	uint64_t val;
	nativeInit(0xB4AC7D0CF06BFE8F);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void PED_0xB50EB4CCB29704AC(Any p0) /*0xB50EB4CCB29704AC*/ {
	uint64_t val;
	nativeInit(0xB50EB4CCB29704AC);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_WETNESS_ENABLED_THIS_FRAME(Ped ped) /*0xB5485E4907B53019*/ {
	uint64_t val;
	nativeInit(0xB5485E4907B53019);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_RELATIONSHIP_GROUP(Hash groupHash) /*0xB6BA2444AB393DA2*/ {
	uint64_t val;
	nativeInit(0xB6BA2444AB393DA2);
	*(Hash*)(&val) = groupHash;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_SYNCHRONIZED_SCENE_RATE(int sceneID, float rate) /*0xB6C49F8A5E295A5D*/ {
	uint64_t val;
	nativeInit(0xB6C49F8A5E295A5D);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(float*)(&val) = rate;
	nativePush(val);
	nativeCall();
}
inline void PED_0xB782F8238512BAD5(Any p0, Any* p1) /*0xB782F8238512BAD5*/ {
	uint64_t val;
	nativeInit(0xB782F8238512BAD5);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xB8B52E498014F5B0(Ped ped) /*0xB8B52E498014F5B0*/ {
	uint64_t val;
	nativeInit(0xB8B52E498014F5B0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_CAN_CREATE_RANDOM_DRIVER() /*0xB8EB95E5B4E56978*/ {
	nativeInit(0xB8EB95E5B4E56978); return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_HUMAN(Ped ped) /*0xB980061DA992779D*/ {
	uint64_t val;
	nativeInit(0xB980061DA992779D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0xBA63D9FE45412247(Ped ped, bool p1) /*0xBA63D9FE45412247*/ {
	uint64_t val;
	nativeInit(0xBA63D9FE45412247);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_PLAY_GESTURE_ANIMS(Ped ped, bool toggle) /*0xBAF20C5432058024*/ {
	uint64_t val;
	nativeInit(0xBAF20C5432058024);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_AS_COP(Ped ped, bool toggle) /*0xBB03C38DD3FB7FFD*/ {
	uint64_t val;
	nativeInit(0xBB03C38DD3FB7FFD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_GETTING_INTO_A_VEHICLE(Ped ped) /*0xBB062B2B5722478E*/ {
	uint64_t val;
	nativeInit(0xBB062B2B5722478E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_RESET_PED_LAST_VEHICLE(Ped ped) /*0xBB8DE8CF6A8DD8BB*/ {
	uint64_t val;
	nativeInit(0xBB8DE8CF6A8DD8BB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_FLEEING(Ped ped) /*0xBBCCE00B381F8482*/ {
	uint64_t val;
	nativeInit(0xBBCCE00B381F8482);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(Ped ped, bool toggle) /*0xBC0ED94165A48BC2*/ {
	uint64_t val;
	nativeInit(0xBC0ED94165A48BC2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Vector3 PED_GET_ANIM_INITIAL_OFFSET_POSITION(const char* animDict, const char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) /*0xBE22B26DD764C040*/ {
	uint64_t val;
	nativeInit(0xBE22B26DD764C040);
	*(const char**)(&val) = animDict;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = xRot;
	nativePush(val);
	*(float*)(&val) = yRot;
	nativePush(val);
	*(float*)(&val) = zRot;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void PED_SET_PED_CAN_BE_TARGETTED_BY_TEAM(Ped ped, int team, bool toggle) /*0xBF1CA77833E58F2C*/ {
	uint64_t val;
	nativeInit(0xBF1CA77833E58F2C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = team;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) /*0xBF25EB89375A37AD*/ {
	uint64_t val;
	nativeInit(0xBF25EB89375A37AD);
	*(int*)(&val) = relationship;
	nativePush(val);
	*(Hash*)(&val) = group1;
	nativePush(val);
	*(Hash*)(&val) = group2;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ENVEFF_SCALE(Ped ped, float value) /*0xBF29516833893561*/ {
	uint64_t val;
	nativeInit(0xBF29516833893561);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_SWIMMING_UNDER_WATER(Ped ped) /*0xC024869A53992F34*/ {
	uint64_t val;
	nativeInit(0xC024869A53992F34);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_HELMET_FLAG(Ped ped, int helmetFlag) /*0xC0E78D5C2CE3EB25*/ {
	uint64_t val;
	nativeInit(0xC0E78D5C2CE3EB25);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = helmetFlag;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_HEAD_IK(Ped ped, bool toggle) /*0xC11C18092C5530DC*/ {
	uint64_t val;
	nativeInit(0xC11C18092C5530DC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_STOP_PED_WEAPON_FIRING_WHEN_DROPPED(Ped ped) /*0xC158D28142A34608*/ {
	uint64_t val;
	nativeInit(0xC158D28142A34608);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_BE_DRAGGED_OUT(Ped ped, bool toggle) /*0xC1670E958EEE24E5*/ {
	uint64_t val;
	nativeInit(0xC1670E958EEE24E5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RESET_FLAG(Ped ped, int flagId, bool value) /*0xC1E8A365BF3B29F2*/ {
	uint64_t val;
	nativeInit(0xC1E8A365BF3B29F2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flagId;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_0xC1F6EBF9A3D55538(Any p0, Any p1) /*0xC1F6EBF9A3D55538*/ {
	uint64_t val;
	nativeInit(0xC1F6EBF9A3D55538);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0xC2EE020F5FB4DB53(Ped ped) /*0xC2EE020F5FB4DB53*/ {
	uint64_t val;
	nativeInit(0xC2EE020F5FB4DB53);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_IK_TARGET(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration) /*0xC32779C16FCEECD9*/ {
	uint64_t val;
	nativeInit(0xC32779C16FCEECD9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = ikIndex;
	nativePush(val);
	*(Entity*)(&val) = entityLookAt;
	nativePush(val);
	*(int*)(&val) = boneLookAt;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = blendInDuration;
	nativePush(val);
	*(int*)(&val) = blendOutDuration;
	nativePush(val);
	nativeCall();
}
inline bool PED_GET_CLOSEST_PED(float x, float y, float z, float radius, bool p4, bool p5, Ped* outPed, bool p7, bool p8, int pedType) /*0xC33AB876A77F8164*/ {
	uint64_t val;
	nativeInit(0xC33AB876A77F8164);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(Ped**)(&val) = outPed;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = pedType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_LEG_IK_MODE(Ped ped, int mode) /*0xC396F5B86FF9FEBD*/ {
	uint64_t val;
	nativeInit(0xC396F5B86FF9FEBD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = mode;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RANDOM_PROPS(Ped ped) /*0xC44AA05345C992C6*/ {
	uint64_t val;
	nativeInit(0xC44AA05345C992C6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_PEEK_IN_COVER(Ped player, bool aim) /*0xC514825C507E3736*/ {
	uint64_t val;
	nativeInit(0xC514825C507E3736);
	*(Ped*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = aim;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_ENABLE_BOUND_ANKLES(Ped ped, bool toggle) /*0xC52E0F855C58FC2E*/ {
	uint64_t val;
	nativeInit(0xC52E0F855C58FC2E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xC56FBF2F228E1DAC(Hash modelHash, Any p1, Any p2) /*0xC56FBF2F228E1DAC*/ {
	uint64_t val;
	nativeInit(0xC56FBF2F228E1DAC);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PED_IS_PED_PLANTING_BOMB(Ped ped) /*0xC70B5FAE151982D8*/ {
	uint64_t val;
	nativeInit(0xC70B5FAE151982D8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_COMBAT_ABILITY(Ped ped, int p1) /*0xC7622C0D36B2FDA8*/ {
	uint64_t val;
	nativeInit(0xC7622C0D36B2FDA8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED__CLEAR_PED_COVER_CLIPSET_OVERRIDE(Ped ped) /*0xC79196DCB36F6121*/ {
	uint64_t val;
	nativeInit(0xC79196DCB36F6121);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_BE_SHOT_IN_VEHICLE(Ped ped, bool toggle) /*0xC7EF1BA83230BA07*/ {
	uint64_t val;
	nativeInit(0xC7EF1BA83230BA07);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ANGLED_DEFENSIVE_AREA(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, bool p8, bool p9) /*0xC7F76DF27A5045A1*/ {
	uint64_t val;
	nativeInit(0xC7F76DF27A5045A1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RELATIONSHIP_GROUP_HASH(Ped ped, Hash hash) /*0xC80A74AC829DDD92*/ {
	uint64_t val;
	nativeInit(0xC80A74AC829DDD92);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = hash;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RANDOM_COMPONENT_VARIATION(Ped ped, bool p1) /*0xC8A9481A01E63C28*/ {
	uint64_t val;
	nativeInit(0xC8A9481A01E63C28);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_MODEL(Ped ped, Hash modelHash) /*0xC9D55B1A358A5BF7*/ {
	uint64_t val;
	nativeInit(0xC9D55B1A358A5BF7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_CAN_COWER_IN_COVER(Ped ped, bool toggle) /*0xCB7553CDCEF4A735*/ {
	uint64_t val;
	nativeInit(0xCB7553CDCEF4A735);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xCB968B53FC7F916D(Any p0, bool p1, Any p2, Any p3) /*0xCB968B53FC7F916D*/ {
	uint64_t val;
	nativeInit(0xCB968B53FC7F916D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void PED_0xCC9682B8951C5229(Ped ped, int r, int g, int b, int p4) /*0xCC9682B8951C5229*/ {
	uint64_t val;
	nativeInit(0xCC9682B8951C5229);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void PED_0xCD018C591F94CB43(Any p0, bool p1) /*0xCD018C591F94CB43*/ {
	uint64_t val;
	nativeInit(0xCD018C591F94CB43);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_PRIMARY_LOOKAT(Ped ped, Ped lookAt) /*0xCD17B554996A8D9E*/ {
	uint64_t val;
	nativeInit(0xCD17B554996A8D9E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = lookAt;
	nativePush(val);
	nativeCall();
}
inline Vector3 PED_GET_DEAD_PED_PICKUP_COORDS(Ped ped, float p1, float p2) /*0xCD5003B097200F36*/ {
	uint64_t val;
	nativeInit(0xCD5003B097200F36);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void PED_CLEAR_ALL_PED_PROPS(Ped ped) /*0xCD8A7537A9B52F06*/ {
	uint64_t val;
	nativeInit(0xCD8A7537A9B52F06);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED__DISPOSE_SYNCHRONIZED_SCENE(int scene) /*0xCD9CC7E200A52A6F*/ {
	uint64_t val;
	nativeInit(0xCD9CC7E200A52A6F);
	*(int*)(&val) = scene;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_GROUP_FORMATION(int groupId, int formationType) /*0xCE2F5FC3AF7E8C1E*/ {
	uint64_t val;
	nativeInit(0xCE2F5FC3AF7E8C1E);
	*(int*)(&val) = groupId;
	nativePush(val);
	*(int*)(&val) = formationType;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ARMOUR(Ped ped, int amount) /*0xCEA04D83135264CC*/ {
	uint64_t val;
	nativeInit(0xCEA04D83135264CC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	nativeCall();
}
inline void PED_0xCEDA60A74219D064(Any p0, bool p1) /*0xCEDA60A74219D064*/ {
	uint64_t val;
	nativeInit(0xCEDA60A74219D064);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_JUMPING(Ped ped) /*0xCEDABC5900A0BF97*/ {
	uint64_t val;
	nativeInit(0xCEDABC5900A0BF97);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED__GET_NUM_HEAD_OVERLAY_VALUES(int overlayID) /*0xCF1CE768BB43480E*/ {
	uint64_t val;
	nativeInit(0xCF1CE768BB43480E);
	*(int*)(&val) = overlayID;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int PED_GET_PED_NEARBY_VEHICLES(Ped ped, int* sizeAndVehs) /*0xCFF869CBFA210D82*/ {
	uint64_t val;
	nativeInit(0xCFF869CBFA210D82);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int**)(&val) = sizeAndVehs;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_IS_PED_DUCKING(Ped ped) /*0xD125AE748725C6BC*/ {
	uint64_t val;
	nativeInit(0xD125AE748725C6BC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0xD1871251F3B5ACD7(Ped ped) /*0xD1871251F3B5ACD7*/ {
	uint64_t val;
	nativeInit(0xD1871251F3B5ACD7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED__GET_NUM_MAKEUP_COLORS() /*0xD1F7CA1535D22818*/ {
	nativeInit(0xD1F7CA1535D22818); return *(int*)(nativeCall());
}
inline void PED_SET_ENABLE_PED_ENVEFF_SCALE(Ped ped, bool toggle) /*0xD2C5AA0C0E8D0F1E*/ {
	uint64_t val;
	nativeInit(0xD2C5AA0C0E8D0F1E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xD33DAA36272177C4(Ped ped) /*0xD33DAA36272177C4*/ {
	uint64_t val;
	nativeInit(0xD33DAA36272177C4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_REMOVE_SCENARIO_BLOCKING_AREAS() /*0xD37401D78A929A49*/ {
	nativeInit(0xD37401D78A929A49);
	nativeCall();
}
inline Ped PED_CREATE_PED(int pedType, Hash modelHash, float x, float y, float z, float heading, bool isNetwork, bool thisScriptCheck) /*0xD49F9B0955C367DE*/ {
	uint64_t val;
	nativeInit(0xD49F9B0955C367DE);
	*(int*)(&val) = pedType;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void PED_0xD69411AA0CEBF9E9(Ped ped, int p1, int p2, int p3) /*0xD69411AA0CEBF9E9*/ {
	uint64_t val;
	nativeInit(0xD69411AA0CEBF9E9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_PRONE(Ped ped) /*0xD6A86331A537A7B9*/ {
	uint64_t val;
	nativeInit(0xD6A86331A537A7B9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_FACING_PED(Ped ped, Ped otherPed, float angle) /*0xD71649DB0A545AA3*/ {
	uint64_t val;
	nativeInit(0xD71649DB0A545AA3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = otherPed;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_DIES_IN_SINKING_VEHICLE(Ped ped, bool toggle) /*0xD718A22995E2B4BC*/ {
	uint64_t val;
	nativeInit(0xD718A22995E2B4BC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_GET_PED_LAST_DAMAGE_BONE(Ped ped, int* outBone) /*0xD75960F6BD9EA49C*/ {
	uint64_t val;
	nativeInit(0xD75960F6BD9EA49C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int**)(&val) = outBone;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_USING_ACTION_MODE(Ped ped, bool p1, Any p2, const char* action) /*0xD75ACCF5E0FB5367*/ {
	uint64_t val;
	nativeInit(0xD75ACCF5E0FB5367);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(const char**)(&val) = action;
	nativePush(val);
	nativeCall();
}
inline bool PED_SET_PED_TO_RAGDOLL_WITH_FALL(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float p7, float p8, float p9, float p10, float p11, float p12, float p13) /*0xD76632D99E4966C8*/ {
	uint64_t val;
	nativeInit(0xD76632D99E4966C8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = time;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = ragdollType;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	*(float*)(&val) = p12;
	nativePush(val);
	*(float*)(&val) = p13;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float PED_GET_SYNCHRONIZED_SCENE_RATE(int sceneID) /*0xD80932D577274D40*/ {
	uint64_t val;
	nativeInit(0xD80932D577274D40);
	*(int*)(&val) = sceneID;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PED_IS_PED_FATALLY_INJURED(Ped ped) /*0xD839450756ED5A80*/ {
	uint64_t val;
	nativeInit(0xD839450756ED5A80);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED__RESET_PED_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags) /*0xD86D101FCFD00A4B*/ {
	uint64_t val;
	nativeInit(0xD86D101FCFD00A4B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void PED_0xD8C3BE3EE94CAF2D(Any p0, Any p1, Any p2, Any p3, Any p4) /*0xD8C3BE3EE94CAF2D*/ {
	uint64_t val;
	nativeInit(0xD8C3BE3EE94CAF2D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void PED_CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, float p2) /*0xD8D19675ED5FBDCE*/ {
	uint64_t val;
	nativeInit(0xD8D19675ED5FBDCE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = stance;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_SYNCHRONIZED_SCENE_LOOPED(int sceneID, bool toggle) /*0xD9A897A4C6C2974F*/ {
	uint64_t val;
	nativeInit(0xD9A897A4C6C2974F);
	*(int*)(&val) = sceneID;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_ALLOWED_TO_DUCK(Ped ped, bool toggle) /*0xDA1F1B7BE1A8766F*/ {
	uint64_t val;
	nativeInit(0xDA1F1B7BE1A8766F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline const char* PED_GET_PEDHEADSHOT_TXD_STRING(int handle) /*0xDB4EACD4AD0A5D6B*/ {
	uint64_t val;
	nativeInit(0xDB4EACD4AD0A5D6B);
	*(int*)(&val) = handle;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void PED_SET_PED_ALERTNESS(Ped ped, int value) /*0xDBA71115ED9941A6*/ {
	uint64_t val;
	nativeInit(0xDBA71115ED9941A6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_LOD_MULTIPLIER(Ped ped, float multiplier) /*0xDC2C5C242AAC342B*/ {
	uint64_t val;
	nativeInit(0xDC2C5C242AAC342B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xDCCA191DF9980FD7(Ped ped) /*0xDCCA191DF9980FD7*/ {
	uint64_t val;
	nativeInit(0xDCCA191DF9980FD7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_GESTURE_GROUP(Ped ped, const char* animGroupGesture) /*0xDDF803377F94AAA8*/ {
	uint64_t val;
	nativeInit(0xDDF803377F94AAA8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animGroupGesture;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_COMBAT_MOVEMENT(Ped ped) /*0xDEA92412FCAEB3F5*/ {
	uint64_t val;
	nativeInit(0xDEA92412FCAEB3F5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_DRIVER_RACING_MODIFIER(Ped driver, float racingModifier) /*0xDED5AF5A0EA4B297*/ {
	uint64_t val;
	nativeInit(0xDED5AF5A0EA4B297);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(float*)(&val) = racingModifier;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_ENABLE_HANDCUFFS(Ped ped, bool toggle) /*0xDF1AF8B5D56542FA*/ {
	uint64_t val;
	nativeInit(0xDF1AF8B5D56542FA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(Ped ped, bool toggle) /*0xDF993EE5E90ABA25*/ {
	uint64_t val;
	nativeInit(0xDF993EE5E90ABA25);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_CONVERSATION_PED_DEAD(Ped ped) /*0xE0A0AEC214B1FABA*/ {
	uint64_t val;
	nativeInit(0xE0A0AEC214B1FABA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 PED_GET_PED_EXTRACTED_DISPLACEMENT(Ped ped, bool worldSpace) /*0xE0AF41401ADF87E3*/ {
	uint64_t val;
	nativeInit(0xE0AF41401ADF87E3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = worldSpace;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool PED__IS_PED_HAIR_COLOR_VALID(int colorID) /*0xE0D36E5D9E99CC21*/ {
	uint64_t val;
	nativeInit(0xE0D36E5D9E99CC21);
	*(int*)(&val) = colorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_PROP_TEXTURE_INDEX(Ped ped, int componentId) /*0xE131A28626F81AB2*/ {
	uint64_t val;
	nativeInit(0xE131A28626F81AB2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_MODEL_IS_SUPPRESSED(Ped ped, bool toggle) /*0xE163A4BCE4DE6F11*/ {
	uint64_t val;
	nativeInit(0xE163A4BCE4DE6F11);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_PLAY_FACIAL_ANIM(Ped ped, const char* animName, const char* animDict) /*0xE1E65CA8AC9C00ED*/ {
	uint64_t val;
	nativeInit(0xE1E65CA8AC9C00ED);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	nativeCall();
}
inline void PED__CLEAR_PED_FACIAL_DECORATIONS(Ped ped) /*0xE3B27E70CEAB9F0C*/ {
	uint64_t val;
	nativeInit(0xE3B27E70CEAB9F0C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_RUNNING_RAGDOLL_TASK(Ped ped) /*0xE3B6097CC25AA69E*/ {
	uint64_t val;
	nativeInit(0xE3B6097CC25AA69E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_PALETTE_VARIATION(Ped ped, int componentId) /*0xE3DD5F2A84B42281*/ {
	uint64_t val;
	nativeInit(0xE3DD5F2A84B42281);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_0xE43A13C9E4CCCBCF(Ped ped, bool p1) /*0xE43A13C9E4CCCBCF*/ {
	uint64_t val;
	nativeInit(0xE43A13C9E4CCCBCF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_0xE4723DB6E736CCFF(Ped ped, Any p1, float p2, float p3, float p4, float p5, bool p6) /*0xE4723DB6E736CCFF*/ {
	uint64_t val;
	nativeInit(0xE4723DB6E736CCFF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline float PED_GET_SYNCHRONIZED_SCENE_PHASE(int sceneID) /*0xE4A310B1D7FA73CC*/ {
	uint64_t val;
	nativeInit(0xE4A310B1D7FA73CC);
	*(int*)(&val) = sceneID;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PED_HAS_ACTION_MODE_ASSET_LOADED(const char* asset) /*0xE4B5F4BF2CB24E65*/ {
	uint64_t val;
	nativeInit(0xE4B5F4BF2CB24E65);
	*(const char**)(&val) = asset;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED__GET_NUM_HAIR_COLORS() /*0xE5C0CF872C2AD150*/ {
	nativeInit(0xE5C0CF872C2AD150); return *(int*)(nativeCall());
}
inline void PED_0xE6CA85E7259CE16B(Any p0) /*0xE6CA85E7259CE16B*/ {
	uint64_t val;
	nativeInit(0xE6CA85E7259CE16B);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Ped PED_GET_MOUNT(Ped ped) /*0xE7E11B8DCBED1058*/ {
	uint64_t val;
	nativeInit(0xE7E11B8DCBED1058);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline bool PED_IS_PED_COMPONENT_VARIATION_VALID(Ped ped, int componentId, int drawableId, int textureId) /*0xE825F6B6CEA7671D*/ {
	uint64_t val;
	nativeInit(0xE825F6B6CEA7671D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = componentId;
	nativePush(val);
	*(int*)(&val) = drawableId;
	nativePush(val);
	*(int*)(&val) = textureId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xE861D0B05C7662B8(Pickup p0, Any p1, Blip* p2) /*0xE861D0B05C7662B8*/ {
	uint64_t val;
	nativeInit(0xE861D0B05C7662B8);
	*(Pickup*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Blip**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_RESERVE_PARACHUTE_TINT_INDEX(Ped ped, Any p1) /*0xE88DA0751C22A2AD*/ {
	uint64_t val;
	nativeInit(0xE88DA0751C22A2AD);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xE8A169E666CBC541() /*0xE8A169E666CBC541*/ {
	nativeInit(0xE8A169E666CBC541); return *(Any*)(nativeCall());
}
inline void PED_CLONE_PED_TO_TARGET(Ped ped, Ped targetPed) /*0xE952D6431689AD9A*/ {
	uint64_t val;
	nativeInit(0xE952D6431689AD9A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = targetPed;
	nativePush(val);
	nativeCall();
}
inline bool PED_HAS_STEALTH_MODE_ASSET_LOADED(const char* asset) /*0xE977FC5B08AF3441*/ {
	uint64_t val;
	nativeInit(0xE977FC5B08AF3441);
	*(const char**)(&val) = asset;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_RESET_AI_WEAPON_DAMAGE_MODIFIER() /*0xEA16670E7BA4743C*/ {
	nativeInit(0xEA16670E7BA4743C);
	nativeCall();
}
inline int PED_0xEA9960D07DADCF10(Any p0) /*0xEA9960D07DADCF10*/ {
	uint64_t val;
	nativeInit(0xEA9960D07DADCF10);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PED_CAN_CREATE_RANDOM_BIKE_RIDER() /*0xEACEEDA81751915C*/ {
	nativeInit(0xEACEEDA81751915C); return *(bool*)(nativeCall());
}
inline bool PED_CAN_PED_IN_COMBAT_SEE_TARGET(Ped ped, Ped target) /*0xEAD42DE3610D0721*/ {
	uint64_t val;
	nativeInit(0xEAD42DE3610D0721);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_GET_PED_PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex) /*0xEAF5F7E5AE7C6C9D*/ {
	uint64_t val;
	nativeInit(0xEAF5F7E5AE7C6C9D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int**)(&val) = outTintIndex;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_STEERS_AROUND_VEHICLES(Ped ped, bool toggle) /*0xEB6FB9D48DDE23EC*/ {
	uint64_t val;
	nativeInit(0xEB6FB9D48DDE23EC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_RELATIONSHIP_BETWEEN_PEDS(Ped ped1, Ped ped2) /*0xEBA5AD3A0EAF7121*/ {
	uint64_t val;
	nativeInit(0xEBA5AD3A0EAF7121);
	*(Ped*)(&val) = ped1;
	nativePush(val);
	*(Ped*)(&val) = ped2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any PED_0xEBB376779A760AA8() /*0xEBB376779A760AA8*/ {
	nativeInit(0xEBB376779A760AA8); return *(Any*)(nativeCall());
}
inline bool PED_0xEBD0EDBA5BE957CF(Ped ped) /*0xEBD0EDBA5BE957CF*/ {
	uint64_t val;
	nativeInit(0xEBD0EDBA5BE957CF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_SUFFERS_CRITICAL_HITS(Ped ped, bool toggle) /*0xEBD76F2359F190AC*/ {
	uint64_t val;
	nativeInit(0xEBD76F2359F190AC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(Ped ped, bool toggle) /*0xEC4686EC06434678*/ {
	uint64_t val;
	nativeInit(0xEC4686EC06434678);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xEC4B4B3B9908052A(Ped ped, float unk) /*0xEC4B4B3B9908052A*/ {
	uint64_t val;
	nativeInit(0xEC4B4B3B9908052A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_ON_SPECIFIC_VEHICLE(Ped ped, Vehicle vehicle) /*0xEC5F66E459AF3BB2*/ {
	uint64_t val;
	nativeInit(0xEC5F66E459AF3BB2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_0xEC6935EBE0847B90(Any p0, Any p1, Any p2, Any p3) /*0xEC6935EBE0847B90*/ {
	uint64_t val;
	nativeInit(0xEC6935EBE0847B90);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped, const char* clipset) /*0xED34AB6C5CB36520*/ {
	uint64_t val;
	nativeInit(0xED34AB6C5CB36520);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = clipset;
	nativePush(val);
	nativeCall();
}
inline void PED_0xED3C76ADFA6D07C4(Ped ped) /*0xED3C76ADFA6D07C4*/ {
	uint64_t val;
	nativeInit(0xED3C76ADFA6D07C4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xED6D8E27A43B8CDE(int ColorID) /*0xED6D8E27A43B8CDE*/ {
	uint64_t val;
	nativeInit(0xED6D8E27A43B8CDE);
	*(int*)(&val) = ColorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_REMOVE_PED_FROM_GROUP(Ped ped) /*0xED74007FFB146BC2*/ {
	uint64_t val;
	nativeInit(0xED74007FFB146BC2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_SWITCH_WEAPON(Ped ped, bool toggle) /*0xED7F7EFE9FABF340*/ {
	uint64_t val;
	nativeInit(0xED7F7EFE9FABF340);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(Ped ped, bool toggle) /*0xEDF4079F9D54C9A1*/ {
	uint64_t val;
	nativeInit(0xEDF4079F9D54C9A1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_NON_CREATION_AREA(float x1, float y1, float z1, float x2, float y2, float z2) /*0xEE01041D559983EA*/ {
	uint64_t val;
	nativeInit(0xEE01041D559983EA);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DIES_INSTANTLY_IN_WATER(Ped ped, bool toggle) /*0xEEB64139BA29A7CF*/ {
	uint64_t val;
	nativeInit(0xEEB64139BA29A7CF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xEEED8FAFEC331A70(Any p0, Any p1, Any p2, Any p3) /*0xEEED8FAFEC331A70*/ {
	uint64_t val;
	nativeInit(0xEEED8FAFEC331A70);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_APPLY_PED_BLOOD_SPECIFIC(Ped ped, Any p1, float xOffset, float yOffset, float zOffset, float scale, Any p6, float p7, const char* bloodType) /*0xEF0D582CBF2D9B0F*/ {
	uint64_t val;
	nativeInit(0xEF0D582CBF2D9B0F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(const char**)(&val) = bloodType;
	nativePush(val);
	nativeCall();
}
inline Ped PED_CLONE_PED(Ped ped, float heading, bool isNetwork, bool thisScriptCheck) /*0xEF29A16337FACADB*/ {
	uint64_t val;
	nativeInit(0xEF29A16337FACADB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline Any PED_0xF033419D1B81FAE8(Any p0) /*0xF033419D1B81FAE8*/ {
	uint64_t val;
	nativeInit(0xF033419D1B81FAE8);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_PED_RAGDOLL_ON_COLLISION(Ped ped, bool toggle) /*0xF0A4F1BBF4FA7497*/ {
	uint64_t val;
	nativeInit(0xF0A4F1BBF4FA7497);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xF0DAEF2F545BEE25(int headshotHandle) /*0xF0DAEF2F545BEE25*/ {
	uint64_t val;
	nativeInit(0xF0DAEF2F545BEE25);
	*(int*)(&val) = headshotHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_ID_RANGE(Ped ped, float value) /*0xF107E836A70DCE05*/ {
	uint64_t val;
	nativeInit(0xF107E836A70DCE05);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_HELMET_TEXTURE_INDEX(Ped ped, int textureIndex) /*0xF1550C4BD22582E2*/ {
	uint64_t val;
	nativeInit(0xF1550C4BD22582E2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = textureIndex;
	nativePush(val);
	nativeCall();
}
inline int PED_GET_PED_GROUP_INDEX(Ped ped) /*0xF162E133B4E7A675*/ {
	uint64_t val;
	nativeInit(0xF162E133B4E7A675);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_0xF1C03A5352243A30(Any p0) /*0xF1C03A5352243A30*/ {
	uint64_t val;
	nativeInit(0xF1C03A5352243A30);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xF2385935BFFD4D92(Any p0) /*0xF2385935BFFD4D92*/ {
	uint64_t val;
	nativeInit(0xF2385935BFFD4D92);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_FORCE_PED_MOTION_STATE(Ped ped, Hash motionStateHash, bool p2, bool p3, bool p4) /*0xF28965D04F570DCA*/ {
	uint64_t val;
	nativeInit(0xF28965D04F570DCA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = motionStateHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_PED_SEEING_RANGE(Ped ped, float value) /*0xF29CF591C4BF6CEE*/ {
	uint64_t val;
	nativeInit(0xF29CF591C4BF6CEE);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_TORSO_IK(Ped ped, bool toggle) /*0xF2B7106D37947CE0*/ {
	uint64_t val;
	nativeInit(0xF2B7106D37947CE0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xF2BEBCDFAFDAA19E(bool toggle) /*0xF2BEBCDFAFDAA19E*/ {
	uint64_t val;
	nativeInit(0xF2BEBCDFAFDAA19E);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_WEARING_HELMET(Ped ped) /*0xF33BDFE19B309B19*/ {
	uint64_t val;
	nativeInit(0xF33BDFE19B309B19);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_ADD_RELATIONSHIP_GROUP(const char* name, Hash* groupHash) /*0xF372BC22FCB88606*/ {
	uint64_t val;
	nativeInit(0xF372BC22FCB88606);
	*(const char**)(&val) = name;
	nativePush(val);
	*(Hash**)(&val) = groupHash;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PED_0xF41B5D290C99A3D6(Any p0) /*0xF41B5D290C99A3D6*/ {
	uint64_t val;
	nativeInit(0xF41B5D290C99A3D6);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any PED_0xF445DE8DA80A1792() /*0xF445DE8DA80A1792*/ {
	nativeInit(0xF445DE8DA80A1792); return *(Any*)(nativeCall());
}
inline void PED_0xF5846EDB26A98A24(Ped ped, bool p1) /*0xF5846EDB26A98A24*/ {
	uint64_t val;
	nativeInit(0xF5846EDB26A98A24);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_MAX_HEALTH(Ped ped, int value) /*0xF5F6378C4F3419D3*/ {
	uint64_t val;
	nativeInit(0xF5F6378C4F3419D3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PED_0xF60165E1D2C5370B(Ped ped, Any* p1, Any* p2) /*0xF60165E1D2C5370B*/ {
	uint64_t val;
	nativeInit(0xF60165E1D2C5370B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PED_GET_PED_ALERTNESS(Ped ped) /*0xF6AA118530443FD2*/ {
	uint64_t val;
	nativeInit(0xF6AA118530443FD2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED_SET_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seatIndex) /*0xF75B0D629E1C063D*/ {
	uint64_t val;
	nativeInit(0xF75B0D629E1C063D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = seatIndex;
	nativePush(val);
	nativeCall();
}
inline void PED_0xF79F9DEF0AADE61A(Ped ped) /*0xF79F9DEF0AADE61A*/ {
	uint64_t val;
	nativeInit(0xF79F9DEF0AADE61A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_CAN_PLAY_VISEME_ANIMS(Ped ped, bool toggle, bool p2) /*0xF833DDBA3B104D43*/ {
	uint64_t val;
	nativeInit(0xF833DDBA3B104D43);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Vehicle PED_SET_EXCLUSIVE_PHONE_RELATIONSHIPS(Ped ped) /*0xF92691AED837A5FC*/ {
	uint64_t val;
	nativeInit(0xF92691AED837A5FC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline bool PED_WAS_PED_KILLED_BY_STEALTH(Ped ped) /*0xF9800AA1A771B000*/ {
	uint64_t val;
	nativeInit(0xF9800AA1A771B000);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_ENABLE_SCUBA(Ped ped, bool toggle) /*0xF99F62004024D506*/ {
	uint64_t val;
	nativeInit(0xF99F62004024D506);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PED_0xF9ACF4A08098EA25(Ped ped, bool p1) /*0xF9ACF4A08098EA25*/ {
	uint64_t val;
	nativeInit(0xF9ACF4A08098EA25);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, bool p6) /*0xF9B8F91AAD3B953E*/ {
	uint64_t val;
	nativeInit(0xF9B8F91AAD3B953E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Ped*)(&val) = target;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline Any PED_GET_PED_COMBAT_RANGE(Ped ped) /*0xF9D9F7F2DB8E2FA0*/ {
	uint64_t val;
	nativeInit(0xF9D9F7F2DB8E2FA0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PED_SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(Ped ped, int ms1000000) /*0xFA0675AB151073FA*/ {
	uint64_t val;
	nativeInit(0xFA0675AB151073FA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = ms1000000;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_FALLING(Ped ped) /*0xFB92A102F1C4DFA3*/ {
	uint64_t val;
	nativeInit(0xFB92A102F1C4DFA3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_IS_PED_IN_ANY_SUB(Ped ped) /*0xFBFC01CCFB35D99E*/ {
	uint64_t val;
	nativeInit(0xFBFC01CCFB35D99E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PED_0xFCF37A457CB96DC0(Any p0, float p1, float p2, float p3, float p4) /*0xFCF37A457CB96DC0*/ {
	uint64_t val;
	nativeInit(0xFCF37A457CB96DC0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_SET_TIME_EXCLUSIVE_DISPLAY_TEXTURE(Any p0, bool p1) /*0xFD325494792302D7*/ {
	uint64_t val;
	nativeInit(0xFD325494792302D7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PED_IS_PED_PERFORMING_STEALTH_KILL(Ped ped) /*0xFD4CCDBCC59941B7*/ {
	uint64_t val;
	nativeInit(0xFD4CCDBCC59941B7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_REMOVE_PED_PREFERRED_COVER_SET(Ped ped) /*0xFDDB234CF74073D9*/ {
	uint64_t val;
	nativeInit(0xFDDB234CF74073D9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline Any PED_0xFE07FF6495D52E2A(Any p0, Any p1, Any p2, Any p3) /*0xFE07FF6495D52E2A*/ {
	uint64_t val;
	nativeInit(0xFE07FF6495D52E2A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool PED_0xFEC9A3B1820F3331(Any p0) /*0xFEC9A3B1820F3331*/ {
	uint64_t val;
	nativeInit(0xFEC9A3B1820F3331);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PED_0xFEE4A5459472A9F8() /*0xFEE4A5459472A9F8*/ {
	nativeInit(0xFEE4A5459472A9F8);
	nativeCall();
}
inline int PED_GET_PED_TYPE(Ped ped) /*0xFF059E1E4C01E63C*/ {
	uint64_t val;
	nativeInit(0xFF059E1E4C01E63C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PED__FREEZE_PED_CAMERA_ROTATION(Ped ped) /*0xFF287323B0E2C69A*/ {
	uint64_t val;
	nativeInit(0xFF287323B0E2C69A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_COMBAT_FLOAT(Ped ped, int combatType, float p2) /*0xFF41B4B141ED981C*/ {
	uint64_t val;
	nativeInit(0xFF41B4B141ED981C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = combatType;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PED_0xFF4803BC019852D9(float p0, Any p1) /*0xFF4803BC019852D9*/ {
	uint64_t val;
	nativeInit(0xFF4803BC019852D9);
	*(float*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PED_SET_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped, const char* animName, const char* animDict) /*0xFFC24B988B938B38*/ {
	uint64_t val;
	nativeInit(0xFFC24B988B938B38);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = animName;
	nativePush(val);
	*(const char**)(&val) = animDict;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0x0032A6DBA562C518() /*0x0032A6DBA562C518*/ {
	nativeInit(0x0032A6DBA562C518);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_MODEL(Player player, Hash modelHash) /*0x00A1CADD00108836*/ {
	uint64_t val;
	nativeInit(0x00A1CADD00108836);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_WANTED_LEVEL_MULTIPLIER(float multiplier) /*0x020E5F00CDA207BA*/ {
	uint64_t val;
	nativeInit(0x020E5F00CDA207BA);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_TEAM(Player player, int team) /*0x0299FA38396A4940*/ {
	uint64_t val;
	nativeInit(0x0299FA38396A4940);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = team;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_TELEPORT_ACTIVE() /*0x02B15662D7F8886F*/ {
	nativeInit(0x02B15662D7F8886F); return *(bool*)(nativeCall());
}
inline void PLAYER_CHANGE_PLAYER_PED(Player player, Ped ped, bool p, bool p3) /*0x048189FAC643DEEE*/ {
	uint64_t val;
	nativeInit(0x048189FAC643DEEE);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_ALL_RANDOM_PEDS_FLEE(Player* player, Any toggle) /*0x056E0FE8534C2949*/ {
	uint64_t val;
	nativeInit(0x056E0FE8534C2949);
	*(Player**)(&val) = player;
	nativePush(val);
	*(Any*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_SPECIAL_ABILITY_METER_FULL(Player player) /*0x05A1FE504B7F2587*/ {
	uint64_t val;
	nativeInit(0x05A1FE504B7F2587);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_GET_WANTED_LEVEL_RADIUS(bool player) /*0x085DEB493BE80812*/ {
	uint64_t val;
	nativeInit(0x085DEB493BE80812);
	*(bool*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_ARE_PLAYER_STARS_GREYED_OUT(Player player) /*0x0A6EB355EE14A2DB*/ {
	uint64_t val;
	nativeInit(0x0A6EB355EE14A2DB);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 PLAYER_GET_PLAYER_WANTED_CENTRE_POSITION(Player player) /*0x0C92BA89F1AF26F8*/ {
	uint64_t val;
	nativeInit(0x0C92BA89F1AF26F8);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline int PLAYER_GET_PLAYER_GROUP(Player player) /*0x0D127585F77030AF*/ {
	uint64_t val;
	nativeInit(0x0D127585F77030AF);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player) /*0x0F4CC924CF8C7B21*/ {
	uint64_t val;
	nativeInit(0x0F4CC924CF8C7B21);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_FORCED_AIM(Player player, bool toggle) /*0x0FEE4F80AC44A726*/ {
	uint64_t val;
	nativeInit(0x0FEE4F80AC44A726);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player) /*0x10C54E4389C12B42*/ {
	uint64_t val;
	nativeInit(0x10C54E4389C12B42);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(Player player, int flags) /*0x11D5F725F0E780E0*/ {
	uint64_t val;
	nativeInit(0x11D5F725F0E780E0);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_GET_PLAYER_TARGET_ENTITY(Player player, Entity* entity) /*0x13EDE1A5DBF797C9*/ {
	uint64_t val;
	nativeInit(0x13EDE1A5DBF797C9);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Entity**)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_CLOTH_LOCK_COUNTER(int value) /*0x14D913B777DFF5DA*/ {
	uint64_t val;
	nativeInit(0x14D913B777DFF5DA);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_ENABLE_SPECIAL_ABILITY(Player* player, bool toggle) /*0x181EC197DAEFE121*/ {
	uint64_t val;
	nativeInit(0x181EC197DAEFE121);
	*(Player**)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float PLAYER_GET_PLAYER_SPRINT_TIME_REMAINING(Player player) /*0x1885BC9B108B4C99*/ {
	uint64_t val;
	nativeInit(0x1885BC9B108B4C99);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PLAYER_RESET_PLAYER_INPUT_GAIT(Player player) /*0x19531C47A2ABD691*/ {
	uint64_t val;
	nativeInit(0x19531C47A2ABD691);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline int PLAYER__GET_ACHIEVEMENT_PROGRESSION(int achId) /*0x1C186837D0619335*/ {
	uint64_t val;
	nativeInit(0x1C186837D0619335);
	*(int*)(&val) = achId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_DEPLETE_METER(Player player, bool p1) /*0x1D506DBBBC51E64B*/ {
	uint64_t val;
	nativeInit(0x1D506DBBBC51E64B);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_PLAYER_DETACH_VIRTUAL_BOUND() /*0x1DD5897E2FA6E7C9*/ {
	nativeInit(0x1DD5897E2FA6E7C9);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(Player* player) /*0x1DE37BBF9E9CC14A*/ {
	uint64_t val;
	nativeInit(0x1DE37BBF9E9CC14A);
	*(Player**)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(Player player) /*0x20CE80B0C2BF4ACC*/ {
	uint64_t val;
	nativeInit(0x20CE80B0C2BF4ACC);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_IS_PLAYER_WANTED_LEVEL_GREATER(Player player, int wantedLevel) /*0x238DB2A2C23EE9EF*/ {
	uint64_t val;
	nativeInit(0x238DB2A2C23EE9EF);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = wantedLevel;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_INVINCIBLE(Player player, bool toggle) /*0x239528EACDC3E7DE*/ {
	uint64_t val;
	nativeInit(0x239528EACDC3E7DE);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(Player player, Entity* entity) /*0x2975C866E6713290*/ {
	uint64_t val;
	nativeInit(0x2975C866E6713290);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Entity**)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_LOCKON_RANGE_OVERRIDE(Player player, float range) /*0x29961D490E5814FD*/ {
	uint64_t val;
	nativeInit(0x29961D490E5814FD);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = range;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_RESET_PLAYER_ARREST_STATE(Player player) /*0x2D03E13C460760D6*/ {
	uint64_t val;
	nativeInit(0x2D03E13C460760D6);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) /*0x2D83BC011CA14A3C*/ {
	uint64_t val;
	nativeInit(0x2D83BC011CA14A3C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = modifier;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_FREE_AIMING(Player player) /*0x2E397FD2ECD37C87*/ {
	uint64_t val;
	nativeInit(0x2E397FD2ECD37C87);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_SMALL(Player player, bool p1, bool p2) /*0x2E7B9B683481687D*/ {
	uint64_t val;
	nativeInit(0x2E7B9B683481687D);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_DISABLE_AMBIENT_MELEE_MOVE(Player player, bool toggle) /*0x2E8AABFA40A84F8C*/ {
	uint64_t val;
	nativeInit(0x2E8AABFA40A84F8C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float PLAYER_GET_PLAYER_CURRENT_STEALTH_NOISE(Player player) /*0x2F395D61F3A1F877*/ {
	uint64_t val;
	nativeInit(0x2F395D61F3A1F877);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PLAYER_0x2F7CEB6520288061(bool p0) /*0x2F7CEB6520288061*/ {
	uint64_t val;
	nativeInit(0x2F7CEB6520288061);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_POLICE_IGNORE_PLAYER(Player player, bool toggle) /*0x32C62AA929C2DA6A*/ {
	uint64_t val;
	nativeInit(0x32C62AA929C2DA6A);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_WANTED_LEVEL_NO_DROP(Player player, int wantedLevel, bool p2) /*0x340E61DE7F471565*/ {
	uint64_t val;
	nativeInit(0x340E61DE7F471565);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = wantedLevel;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0x36F1B38855F2A8DF(Player player) /*0x36F1B38855F2A8DF*/ {
	uint64_t val;
	nativeInit(0x36F1B38855F2A8DF);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_GET_PLAYER_TEAM(Player player) /*0x37039302F4E0A008*/ {
	uint64_t val;
	nativeInit(0x37039302F4E0A008);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_RESET(Player player) /*0x375F0E738F861A94*/ {
	uint64_t val;
	nativeInit(0x375F0E738F861A94);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_BEING_ARRESTED(Player player, bool atArresting) /*0x388A47C51ABDAC8E*/ {
	uint64_t val;
	nativeInit(0x388A47C51ABDAC8E);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = atArresting;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_0x38D28DA81E4E9BF9(Player player) /*0x38D28DA81E4E9BF9*/ {
	uint64_t val;
	nativeInit(0x38D28DA81E4E9BF9);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_WANTED_LEVEL(Player player, int wantedLevel, bool disableNoMission) /*0x39FF19C64EF7DA5B*/ {
	uint64_t val;
	nativeInit(0x39FF19C64EF7DA5B);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = wantedLevel;
	nativePush(val);
	*(bool*)(&val) = disableNoMission;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_FREE_AIMING_AT_ENTITY(Player player, Entity entity) /*0x3C06B5C839B38F7B*/ {
	uint64_t val;
	nativeInit(0x3C06B5C839B38F7B);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_GIVE_PLAYER_RAGDOLL_CONTROL(Player player, bool toggle) /*0x3C49C870E66F0A28*/ {
	uint64_t val;
	nativeInit(0x3C49C870E66F0A28);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_FILL_METER(Player player, bool p1) /*0x3DACA8DDC6FD4980*/ {
	uint64_t val;
	nativeInit(0x3DACA8DDC6FD4980);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_SPECIAL_ABILITY_ACTIVE(Ped player) /*0x3E5F7FC85D854E15*/ {
	uint64_t val;
	nativeInit(0x3E5F7FC85D854E15);
	*(Ped*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float PLAYER_GET_PLAYER_SPRINT_STAMINA_REMAINING(Player player) /*0x3F9F16F8E65A7ED7*/ {
	uint64_t val;
	nativeInit(0x3F9F16F8E65A7ED7);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool PLAYER_GET_NUMBER_OF_PLAYERS() /*0x407C7F91DDB46C16*/ {
	nativeInit(0x407C7F91DDB46C16); return *(bool*)(nativeCall());
}
inline Player PLAYER_INT_TO_PLAYERINDEX(int value) /*0x41BD2A6B006AF756*/ {
	uint64_t val;
	nativeInit(0x41BD2A6B006AF756);
	*(int*)(&val) = value;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline bool PLAYER_IS_PLAYER_DEAD(Player player) /*0x424D4687FA1E5652*/ {
	uint64_t val;
	nativeInit(0x424D4687FA1E5652);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_POLICE_RADAR_BLIPS(Player test) /*0x43286D561B72B8BF*/ {
	uint64_t val;
	nativeInit(0x43286D561B72B8BF);
	*(Player*)(&val) = test;
	nativePush(val);
	nativeCall();
}
inline Ped PLAYER_GET_PLAYER_PED(Player player) /*0x43A66C31C68491C0*/ {
	uint64_t val;
	nativeInit(0x43A66C31C68491C0);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline int PLAYER_GET_MAX_WANTED_LEVEL() /*0x462E0DB9B137DC5F*/ {
	nativeInit(0x462E0DB9B137DC5F); return *(int*)(nativeCall());
}
inline Any PLAYER_0x4669B3ED80F24B4E(Player player) /*0x4669B3ED80F24B4E*/ {
	uint64_t val;
	nativeInit(0x4669B3ED80F24B4E);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void PLAYER_SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) /*0x471D2FF42A94B4F2*/ {
	uint64_t val;
	nativeInit(0x471D2FF42A94B4F2);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SIMULATE_PLAYER_INPUT_GAIT(Player control, float amount, int gaitType, float speed, bool p4, bool p5) /*0x477D5D63E63ECA5D*/ {
	uint64_t val;
	nativeInit(0x477D5D63E63ECA5D);
	*(Player*)(&val) = control;
	nativePush(val);
	*(float*)(&val) = amount;
	nativePush(val);
	*(int*)(&val) = gaitType;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_CONTROL_ON(Player player) /*0x49C32D60007AFA47*/ {
	uint64_t val;
	nativeInit(0x49C32D60007AFA47);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(Player player, float modifier) /*0x4A3DC7ECCC321032*/ {
	uint64_t val;
	nativeInit(0x4A3DC7ECCC321032);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = modifier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) /*0x4AACB96203D11A31*/ {
	uint64_t val;
	nativeInit(0x4AACB96203D11A31);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(Player player, float modifier) /*0x4C60E6EFDAFF2462*/ {
	uint64_t val;
	nativeInit(0x4C60E6EFDAFF2462);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = modifier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(const char* name, int cleanupFlags) /*0x4C68DDDDF0097317*/ {
	uint64_t val;
	nativeInit(0x4C68DDDDF0097317);
	*(const char**)(&val) = name;
	nativePush(val);
	*(int*)(&val) = cleanupFlags;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(Player player, float value) /*0x4E9021C1FCDD507A*/ {
	uint64_t val;
	nativeInit(0x4E9021C1FCDD507A);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_RIDING_TRAIN(Player player) /*0x4EC12697209F2196*/ {
	uint64_t val;
	nativeInit(0x4EC12697209F2196);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Player PLAYER_PLAYER_ID() /*0x4F8644AF03D0E0D6*/ {
	nativeInit(0x4F8644AF03D0E0D6); return *(Player*)(nativeCall());
}
inline void PLAYER__EXPAND_WORLD_LIMITS(float x, float y, float z) /*0x5006D96C995A5827*/ {
	uint64_t val;
	nativeInit(0x5006D96C995A5827);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_GET_TIME_SINCE_LAST_ARREST() /*0x5063F92F07C2A316*/ {
	nativeInit(0x5063F92F07C2A316); return *(int*)(nativeCall());
}
inline Ped PLAYER_GET_PLAYER_PED_SCRIPT_INDEX(Player player) /*0x50FAC3A3E030A6E1*/ {
	uint64_t val;
	nativeInit(0x50FAC3A3E030A6E1);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_WANTED_CENTRE_POSITION(Player player, float x, float y, float z) /*0x520E541A97A13354*/ {
	uint64_t val;
	nativeInit(0x520E541A97A13354);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0x5501B7A5CDB79D37(Player player) /*0x5501B7A5CDB79D37*/ {
	uint64_t val;
	nativeInit(0x5501B7A5CDB79D37);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline Player PLAYER_0x56105E599CAB0EFA(int* p0) /*0x56105E599CAB0EFA*/ {
	uint64_t val;
	nativeInit(0x56105E599CAB0EFA);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline void PLAYER_0x5702B917B99DB1CD(int p0) /*0x5702B917B99DB1CD*/ {
	uint64_t val;
	nativeInit(0x5702B917B99DB1CD);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(Player player, bool toggle) /*0x596976B02B6B5700*/ {
	uint64_t val;
	nativeInit(0x596976B02B6B5700);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_LOCKON(Player player, bool toggle) /*0x5C8B2F450EE4328E*/ {
	uint64_t val;
	nativeInit(0x5C8B2F450EE4328E);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_GET_TIME_SINCE_PLAYER_HIT_VEHICLE(Player player) /*0x5D35ECF3A81A0EE0*/ {
	uint64_t val;
	nativeInit(0x5D35ECF3A81A0EE0);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PLAYER_IS_SYSTEM_UI_BEING_DISPLAYED() /*0x5D511E3867C87139*/ {
	nativeInit(0x5D511E3867C87139); return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(Player player, float regenRate) /*0x5DB660B38DD98A31*/ {
	uint64_t val;
	nativeInit(0x5DB660B38DD98A31);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = regenRate;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0x5DC40A8869C22141(bool p0, ScrHandle p1) /*0x5DC40A8869C22141*/ {
	uint64_t val;
	nativeInit(0x5DC40A8869C22141);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(ScrHandle*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_GET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) /*0x5DDFE2FF727F3CA3*/ {
	uint64_t val;
	nativeInit(0x5DDFE2FF727F3CA3);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_DISABLE_PLAYER_FIRING(Player player, bool toggle) /*0x5E6CC07646BBEAB8*/ {
	uint64_t val;
	nativeInit(0x5E6CC07646BBEAB8);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_PLAYING(Player player) /*0x5E9564D8246B909A*/ {
	uint64_t val;
	nativeInit(0x5E9564D8246B909A);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_0x5FC472C501CCADB3(Player player) /*0x5FC472C501CCADB3*/ {
	uint64_t val;
	nativeInit(0x5FC472C501CCADB3);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_0x65FAEE425DE637B0(Player player) /*0x65FAEE425DE637B0*/ {
	uint64_t val;
	nativeInit(0x65FAEE425DE637B0);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_0x690A61A6D13583F6(Ped p0) /*0x690A61A6D13583F6*/ {
	uint64_t val;
	nativeInit(0x690A61A6D13583F6);
	*(Ped*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_LOCK(Hash playerModel) /*0x6A09D0D590A47D13*/ {
	uint64_t val;
	nativeInit(0x6A09D0D590A47D13);
	*(Hash*)(&val) = playerModel;
	nativePush(val);
	nativeCall();
}
inline const char* PLAYER_GET_PLAYER_NAME(Player player) /*0x6D0DE6A7B5DA71F8*/ {
	uint64_t val;
	nativeInit(0x6D0DE6A7B5DA71F8);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void PLAYER_SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) /*0x6DB47AA77FD94E09*/ {
	uint64_t val;
	nativeInit(0x6DB47AA77FD94E09);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_CAN_DO_DRIVE_BY(Player player, bool toggle) /*0x6E8834B52EC20C77*/ {
	uint64_t val;
	nativeInit(0x6E8834B52EC20C77);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex) /*0x6E9C742F340CE5A2*/ {
	uint64_t val;
	nativeInit(0x6E9C742F340CE5A2);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_LOGGING_IN_NP() /*0x74556E1420867ECA*/ {
	nativeInit(0x74556E1420867ECA); return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_CLOTH_PIN_FRAMES(Player player, bool toggle) /*0x749FADDF97DFE930*/ {
	uint64_t val;
	nativeInit(0x749FADDF97DFE930);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_GET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int* tintIndex) /*0x75D3F7A1B0D9B145*/ {
	uint64_t val;
	nativeInit(0x75D3F7A1B0D9B145);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_FORCED_ZOOM(Player player, bool toggle) /*0x75E7D505F2B15902*/ {
	uint64_t val;
	nativeInit(0x75E7D505F2B15902);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_FORCE_SKIP_AIM_INTRO(Player player, bool toggle) /*0x7651BC64AE59E128*/ {
	uint64_t val;
	nativeInit(0x7651BC64AE59E128);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_MAX_ARMOUR(Player player, int value) /*0x77DFCCF5948B8C71*/ {
	uint64_t val;
	nativeInit(0x77DFCCF5948B8C71);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_TARGETTING_ANYTHING(Player player) /*0x78CFE51896B6B8A4*/ {
	uint64_t val;
	nativeInit(0x78CFE51896B6B8A4);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER_IS_PLAYER_TARGETTING_ENTITY(Player player, Entity entity) /*0x7912F7FC4F6264B6*/ {
	uint64_t val;
	nativeInit(0x7912F7FC4F6264B6);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool PLAYER__IS_PLAYER_CAM_CONTROL_DISABLED() /*0x7C814D2FB49F40C0*/ {
	nativeInit(0x7C814D2FB49F40C0); return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) /*0x7DDAB28D31FAC363*/ {
	uint64_t val;
	nativeInit(0x7DDAB28D31FAC363);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(Player player, Vehicle vehicle) /*0x8026FF78F208978A*/ {
	uint64_t val;
	nativeInit(0x8026FF78F208978A);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int r, int g, int b) /*0x8217FD371A4625CF*/ {
	uint64_t val;
	nativeInit(0x8217FD371A4625CF);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_ASSISTED_MOVEMENT_FLUSH_ROUTE() /*0x8621390F0CDCFE1F*/ {
	nativeInit(0x8621390F0CDCFE1F);
	nativeCall();
}
inline bool PLAYER_HAS_ACHIEVEMENT_BEEN_PASSED(int achievement) /*0x867365E111A3B6EB*/ {
	uint64_t val;
	nativeInit(0x867365E111A3B6EB);
	*(int*)(&val) = achievement;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) /*0x8753997EB5F6EE3F*/ {
	uint64_t val;
	nativeInit(0x8753997EB5F6EE3F);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_SCRIPT_CONTROL_ON(Player player) /*0x8A876A65283DD7D7*/ {
	uint64_t val;
	nativeInit(0x8A876A65283DD7D7);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_CONTROL(Player player, bool toggle, int flags) /*0x8D32347D6D4C40A2*/ {
	uint64_t val;
	nativeInit(0x8D32347D6D4C40A2);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_EVERYONE_IGNORE_PLAYER(Player player, bool toggle) /*0x8EEDA153AD141BA4*/ {
	uint64_t val;
	nativeInit(0x8EEDA153AD141BA4);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_READY_FOR_CUTSCENE(Player player) /*0x908CBECC2CAA3690*/ {
	uint64_t val;
	nativeInit(0x908CBECC2CAA3690);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PLAYER_GET_PLAYER_MAX_ARMOUR(Player player) /*0x92659B4CE1863CB3*/ {
	uint64_t val;
	nativeInit(0x92659B4CE1863CB3);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int tintIndex) /*0x93B0FB27C9A04060*/ {
	uint64_t val;
	nativeInit(0x93B0FB27C9A04060);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_DISPLAY_SYSTEM_SIGNIN_UI(bool unk) /*0x94DD7888C10A979E*/ {
	uint64_t val;
	nativeInit(0x94DD7888C10A979E);
	*(bool*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_CLIMBING(Player player) /*0x95E8F73DC65EFB9C*/ {
	uint64_t val;
	nativeInit(0x95E8F73DC65EFB9C);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) /*0x977DB4641F6FC3DB*/ {
	uint64_t val;
	nativeInit(0x977DB4641F6FC3DB);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline Vehicle* PLAYER_GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() /*0x9A41CF4674A12272*/ {
	nativeInit(0x9A41CF4674A12272); return *(Vehicle**)(nativeCall());
}
inline void PLAYER__SWITCH_CRIME_TYPE(Player player, int p1) /*0x9A987297ED8BD838*/ {
	uint64_t val;
	nativeInit(0x9A987297ED8BD838);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_WANTED_LEVEL_DIFFICULTY(Player player, float difficulty) /*0x9B0BB33B04405E7A*/ {
	uint64_t val;
	nativeInit(0x9B0BB33B04405E7A);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = difficulty;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_DEACTIVATE_FAST(Player player) /*0x9CB5CE07A3968D5A*/ {
	uint64_t val;
	nativeInit(0x9CB5CE07A3968D5A);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_INT_TO_PARTICIPANTINDEX(Player value) /*0x9EC6603812C24710*/ {
	uint64_t val;
	nativeInit(0x9EC6603812C24710);
	*(Player*)(&val) = value;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_0x9EDD76E87D5D51BA(Player player) /*0x9EDD76E87D5D51BA*/ {
	uint64_t val;
	nativeInit(0x9EDD76E87D5D51BA);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(Player player, bool toggle) /*0x9F343285A00B4BB6*/ {
	uint64_t val;
	nativeInit(0x9F343285A00B4BB6);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_CLOTH_PACKAGE_INDEX(int index) /*0x9F7BBA2EA6372500*/ {
	uint64_t val;
	nativeInit(0x9F7BBA2EA6372500);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_SPRINT(Player player, bool toggle) /*0xA01B8075D8B92DF4*/ {
	uint64_t val;
	nativeInit(0xA01B8075D8B92DF4);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_NORMALIZED(Player player, float normalizedValue, bool p2) /*0xA0696A65F009EE18*/ {
	uint64_t val;
	nativeInit(0xA0696A65F009EE18);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = normalizedValue;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline float PLAYER_GET_PLAYER_UNDERWATER_TIME_REMAINING(Player player) /*0xA1FCF8E6AF40B731*/ {
	uint64_t val;
	nativeInit(0xA1FCF8E6AF40B731);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void PLAYER_RESTORE_PLAYER_STAMINA(Player player, float p1) /*0xA352C1B864CAFD33*/ {
	uint64_t val;
	nativeInit(0xA352C1B864CAFD33);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_PARACHUTE_TINT_INDEX(Ped ped, Vehicle* vehicleindex) /*0xA3D0E54541D9A5E5*/ {
	uint64_t val;
	nativeInit(0xA3D0E54541D9A5E5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle**)(&val) = vehicleindex;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_SPECIAL_ABILITY_MULTIPLIER(float multiplier) /*0xA49C426ED0CA4AB7*/ {
	uint64_t val;
	nativeInit(0xA49C426ED0CA4AB7);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(Player player, float damageAmount) /*0xA50E117CDDF82F0C*/ {
	uint64_t val;
	nativeInit(0xA50E117CDDF82F0C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = damageAmount;
	nativePush(val);
	nativeCall();
}
inline Player PLAYER_GET_PLAYER_INDEX() /*0xA5EDC40EF369B48D*/ {
	nativeInit(0xA5EDC40EF369B48D); return *(Player*)(nativeCall());
}
inline void PLAYER_RESET_PLAYER_STAMINA(Player player) /*0xA6F312FCCE9C1DFE*/ {
	uint64_t val;
	nativeInit(0xA6F312FCCE9C1DFE);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_SWIM_MULTIPLIER_FOR_PLAYER(Ped player, float multiplier) /*0xA91C6F0FF7D16A13*/ {
	uint64_t val;
	nativeInit(0xA91C6F0FF7D16A13);
	*(Ped*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_MAX_WANTED_LEVEL(int maxWantedLevel) /*0xAA5F02DB48D704B9*/ {
	uint64_t val;
	nativeInit(0xAA5F02DB48D704B9);
	*(int*)(&val) = maxWantedLevel;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_START_PLAYER_TELEPORT(Player player, float x, float y, float z, float heading, Any keepVehicle, Any keepVelocity, Any p7) /*0xAD15F075A4DA0FDE*/ {
	uint64_t val;
	nativeInit(0xAD15F075A4DA0FDE);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(Any*)(&val) = keepVehicle;
	nativePush(val);
	*(Any*)(&val) = keepVelocity;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xAD73CE5A09E42D12(Player player) /*0xAD73CE5A09E42D12*/ {
	uint64_t val;
	nativeInit(0xAD73CE5A09E42D12);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) /*0xAE540335B4ABC4E2*/ {
	uint64_t val;
	nativeInit(0xAE540335B4ABC4E2);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = modifier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_ASSISTED_MOVEMENT_CLOSE_ROUTE() /*0xAEBF081FFC0A0E5E*/ {
	nativeInit(0xAEBF081FFC0A0E5E);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int index) /*0xAF04C87F5DC1DF38*/ {
	uint64_t val;
	nativeInit(0xAF04C87F5DC1DF38);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(Player player) /*0xAFAF86043E5874E9*/ {
	uint64_t val;
	nativeInit(0xAFAF86043E5874E9);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_TARGETING_MODE(int targetMode) /*0xB1906895227793F3*/ {
	uint64_t val;
	nativeInit(0xB1906895227793F3);
	*(int*)(&val) = targetMode;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_SPECIAL_ABILITY_ENABLED(Player player) /*0xB1D200FE26AEF3CB*/ {
	uint64_t val;
	nativeInit(0xB1D200FE26AEF3CB);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(Player player, float multiplier) /*0xB2C1A29588A9F47C*/ {
	uint64_t val;
	nativeInit(0xB2C1A29588A9F47C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_CLEAR_PLAYER_WANTED_LEVEL(Player player) /*0xB302540597885499*/ {
	uint64_t val;
	nativeInit(0xB302540597885499);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xB45EFF719D8427A6(float p0) /*0xB45EFF719D8427A6*/ {
	uint64_t val;
	nativeInit(0xB45EFF719D8427A6);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Vehicle PLAYER_GET_PLAYERS_LAST_VEHICLE() /*0xB6997A7EB3F5C8C0*/ {
	nativeInit(0xB6997A7EB3F5C8C0); return *(Vehicle*)(nativeCall());
}
inline bool PLAYER_GET_PLAYER_INVINCIBLE(Player player) /*0xB721981B2B939E07*/ {
	uint64_t val;
	nativeInit(0xB721981B2B939E07);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_ABSOLUTE(Player player, int p1, bool p2) /*0xB7B0870EB531D08D*/ {
	uint64_t val;
	nativeInit(0xB7B0870EB531D08D);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xB885852C39CC265D() /*0xB885852C39CC265D*/ {
	nativeInit(0xB885852C39CC265D);
	nativeCall();
}
inline bool PLAYER_0xB9CF1F793A9F1BF1() /*0xB9CF1F793A9F1BF1*/ {
	nativeInit(0xB9CF1F793A9F1BF1); return *(bool*)(nativeCall());
}
inline void PLAYER_RESET_WANTED_LEVEL_DIFFICULTY(Player player) /*0xB9D0DD990DC141DD*/ {
	uint64_t val;
	nativeInit(0xB9D0DD990DC141DD);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_0xBC0753C9CA14B506(Player player, int p1, bool p2) /*0xBC0753C9CA14B506*/ {
	uint64_t val;
	nativeInit(0xBC0753C9CA14B506);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_FORCE_CLEANUP(int cleanupFlags) /*0xBC8983F38F78ED51*/ {
	uint64_t val;
	nativeInit(0xBC8983F38F78ED51);
	*(int*)(&val) = cleanupFlags;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xBC9490CA15AEA8FB(Player player) /*0xBC9490CA15AEA8FB*/ {
	uint64_t val;
	nativeInit(0xBC9490CA15AEA8FB);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_GIVE_ACHIEVEMENT_TO_PLAYER(int achievement) /*0xBEC7076D64130195*/ {
	uint64_t val;
	nativeInit(0xBEC7076D64130195);
	*(int*)(&val) = achievement;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_START_FIRING_AMNESTY(int duration) /*0xBF9BD71691857E48*/ {
	uint64_t val;
	nativeInit(0xBF9BD71691857E48);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_DISABLE_PLAYER_VEHICLE_REWARDS(Player player) /*0xC142BE3BB9CE125F*/ {
	uint64_t val;
	nativeInit(0xC142BE3BB9CE125F);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER__SET_ACHIEVEMENT_PROGRESSION(int achId, int progression) /*0xC2AFFFDABBDC2C5C*/ {
	uint64_t val;
	nativeInit(0xC2AFFFDABBDC2C5C);
	*(int*)(&val) = achId;
	nativePush(val);
	*(int*)(&val) = progression;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_0xC3376F42B1FACCC6(Player player) /*0xC3376F42B1FACCC6*/ {
	uint64_t val;
	nativeInit(0xC3376F42B1FACCC6);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_STOP_PLAYER_TELEPORT() /*0xC449EDED9D73009C*/ {
	nativeInit(0xC449EDED9D73009C);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_SIMULATE_AIMING(Player player, bool toggle) /*0xC54C95DA968EC5B5*/ {
	uint64_t val;
	nativeInit(0xC54C95DA968EC5B5);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_SPECIAL_ABILITY_UNLOCKED(Hash playerModel) /*0xC6017F6A6CDFA694*/ {
	uint64_t val;
	nativeInit(0xC6017F6A6CDFA694);
	*(Hash*)(&val) = playerModel;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PLAYER_GET_TIME_SINCE_LAST_DEATH() /*0xC7034807558DDFCA*/ {
	nativeInit(0xC7034807558DDFCA); return *(int*)(nativeCall());
}
inline bool PLAYER_HAS_FORCE_CLEANUP_OCCURRED(int cleanupFlags) /*0xC968670BFACE42D9*/ {
	uint64_t val;
	nativeInit(0xC968670BFACE42D9);
	*(int*)(&val) = cleanupFlags;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_0xC9A763D8FE87436A(Player player) /*0xC9A763D8FE87436A*/ {
	uint64_t val;
	nativeInit(0xC9A763D8FE87436A);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(Player player, float multiplier) /*0xCA7DC8329F0A1E9E*/ {
	uint64_t val;
	nativeInit(0xCA7DC8329F0A1E9E);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xCAC57395B151135F(Player player, bool p1) /*0xCAC57395B151135F*/ {
	uint64_t val;
	nativeInit(0xCAC57395B151135F);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_WEAPON_DAMAGE_MODIFIER(Player player, Pickup* damageAmount) /*0xCE07B9F7817AADA3*/ {
	uint64_t val;
	nativeInit(0xCE07B9F7817AADA3);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Pickup**)(&val) = damageAmount;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xD2B315B6689D537D(Player player, bool p1) /*0xD2B315B6689D537D*/ {
	uint64_t val;
	nativeInit(0xD2B315B6689D537D);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any PLAYER_SET_PLAYER_CAN_USE_COVER(Player player, bool toggle) /*0xD465A8599DFF6814*/ {
	uint64_t val;
	nativeInit(0xD465A8599DFF6814);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int PLAYER_GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(Player player) /*0xD559D2BE9E37853B*/ {
	uint64_t val;
	nativeInit(0xD559D2BE9E37853B);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PLAYER_HAS_PLAYER_LEFT_THE_WORLD(Player player) /*0xD55DDFB47991A294*/ {
	uint64_t val;
	nativeInit(0xD55DDFB47991A294);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index) /*0xD5A016BC3C09CF40*/ {
	uint64_t val;
	nativeInit(0xD5A016BC3C09CF40);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(Player player, bool toggle) /*0xD5E460AD7020A246*/ {
	uint64_t val;
	nativeInit(0xD5E460AD7020A246);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_DEACTIVATE(Player player) /*0xD6A953C6D1492057*/ {
	uint64_t val;
	nativeInit(0xD6A953C6D1492057);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(Player player) /*0xD705740BB0A1CF4C*/ {
	uint64_t val;
	nativeInit(0xD705740BB0A1CF4C);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Ped PLAYER_PLAYER_PED_ID() /*0xD80958FC74E988A6*/ {
	nativeInit(0xD80958FC74E988A6); return *(Ped*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player, int p1, Any p2, Any p3, bool p4) /*0xD9284A8C0D48352C*/ {
	uint64_t val;
	nativeInit(0xD9284A8C0D48352C);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_DISPATCH_COPS_FOR_PLAYER(Player player, bool toggle) /*0xDB172424876553F4*/ {
	uint64_t val;
	nativeInit(0xDB172424876553F4);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(Player player) /*0xDB89591E290D9182*/ {
	uint64_t val;
	nativeInit(0xDB89591E290D9182);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_NOISE_MULTIPLIER(Player player, float multiplier) /*0xDB89EF50FF25FCE9*/ {
	uint64_t val;
	nativeInit(0xDB89EF50FF25FCE9);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xDC64D2C53493ED12(Player player) /*0xDC64D2C53493ED12*/ {
	uint64_t val;
	nativeInit(0xDC64D2C53493ED12);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player, Hash model) /*0xDC80A4C2F18A2B64*/ {
	uint64_t val;
	nativeInit(0xDC80A4C2F18A2B64);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline Player PLAYER_IS_PLAYER_FREE_FOR_AMBIENT_TASK(Player player) /*0xDCCFD3F106C36AB4*/ {
	uint64_t val;
	nativeInit(0xDCCFD3F106C36AB4);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(Player*)(nativeCall());
}
inline bool PLAYER__IS_PLAYER_WITHIN_TEST_CAPSULE(Player player, float p1) /*0xDD2620B7B9D16FF1*/ {
	uint64_t val;
	nativeInit(0xDD2620B7B9D16FF1);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_0xDE45D1A1EF45EE61(Player player, bool toggle) /*0xDE45D1A1EF45EE61*/ {
	uint64_t val;
	nativeInit(0xDE45D1A1EF45EE61);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_CAN_PLAYER_START_MISSION(Player player) /*0xDE7465A27D403C06*/ {
	uint64_t val;
	nativeInit(0xDE7465A27D403C06);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SET_PLAYER_WANTED_LEVEL_NOW(Player player, bool p1) /*0xE0A7D1E497FFCD6F*/ {
	uint64_t val;
	nativeInit(0xE0A7D1E497FFCD6F);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER__HAS_PLAYER_TELEPORT_FINISHED(Player player) /*0xE23D5873C2394C61*/ {
	uint64_t val;
	nativeInit(0xE23D5873C2394C61);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PLAYER_GET_PLAYER_WANTED_LEVEL(Player player) /*0xE28E54788CE8F12D*/ {
	uint64_t val;
	nativeInit(0xE28E54788CE8F12D);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int PLAYER_GET_TIME_SINCE_PLAYER_HIT_PED(Player player) /*0xE36A25322DC35F42*/ {
	uint64_t val;
	nativeInit(0xE36A25322DC35F42);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool PLAYER_HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) /*0xE4B90F367BD81752*/ {
	uint64_t val;
	nativeInit(0xE4B90F367BD81752);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_GET_PLAYER_RGB_COLOUR(Player player, int* r, int* g, int* b) /*0xE902EF951DCE178F*/ {
	uint64_t val;
	nativeInit(0xE902EF951DCE178F);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_REPORT_CRIME(Player player, int crimeType, int wantedLvlThresh) /*0xE9B09589827545E7*/ {
	uint64_t val;
	nativeInit(0xE9B09589827545E7);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = crimeType;
	nativePush(val);
	*(int*)(&val) = wantedLvlThresh;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_CONTINUOUS(Player player, Ped p2) /*0xED481732DFF7E997*/ {
	uint64_t val;
	nativeInit(0xED481732DFF7E997);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Ped*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_PLAYER_ATTACH_VIRTUAL_BOUND(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7) /*0xED51733DC73AED51*/ {
	uint64_t val;
	nativeInit(0xED51733DC73AED51);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline int PLAYER_NETWORK_PLAYER_ID_TO_INT() /*0xEE68096F9F37341E*/ {
	nativeInit(0xEE68096F9F37341E); return *(int*)(nativeCall());
}
inline void PLAYER_GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b) /*0xEF56DBABD3CD4887*/ {
	uint64_t val;
	nativeInit(0xEF56DBABD3CD4887);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(Player player) /*0xF0B67A4DE6AB5F98*/ {
	uint64_t val;
	nativeInit(0xF0B67A4DE6AB5F98);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_0xF10B44FD479D69F3(Player player, int p1) /*0xF10B44FD479D69F3*/ {
	uint64_t val;
	nativeInit(0xF10B44FD479D69F3);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_MEDIUM(Player player, Vehicle p1, Vehicle p2) /*0xF113E3AA9BC54613*/ {
	uint64_t val;
	nativeInit(0xF113E3AA9BC54613);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Vehicle*)(&val) = p1;
	nativePush(val);
	*(Vehicle*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_UNLOCK(Hash playerModel) /*0xF145F3BE2EFA9A3B*/ {
	uint64_t val;
	nativeInit(0xF145F3BE2EFA9A3B);
	*(Hash*)(&val) = playerModel;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_ONLINE() /*0xF25D331DC2627BBC*/ {
	nativeInit(0xF25D331DC2627BBC); return *(bool*)(nativeCall());
}
inline bool PLAYER_CAN_PED_HEAR_PLAYER(Player player, Ped ped) /*0xF297383AA91DCA29*/ {
	uint64_t val;
	nativeInit(0xF297383AA91DCA29);
	*(Player*)(&val) = player;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void PLAYER_REMOVE_PLAYER_HELMET(Player player, bool p2) /*0xF3AC26D3CC576528*/ {
	uint64_t val;
	nativeInit(0xF3AC26D3CC576528);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(Player player, bool enabled) /*0xF401B182DBA8AF53*/ {
	uint64_t val;
	nativeInit(0xF401B182DBA8AF53);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_SPECIAL_ABILITY_CHARGE_LARGE(Player player, int p1, Hash p2) /*0xF733F45FA4497D93*/ {
	uint64_t val;
	nativeInit(0xF733F45FA4497D93);
	*(Player*)(&val) = player;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(Hash*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(int id, int cleanupFlags) /*0xF745B37630DF176B*/ {
	uint64_t val;
	nativeInit(0xF745B37630DF176B);
	*(int*)(&val) = id;
	nativePush(val);
	*(int*)(&val) = cleanupFlags;
	nativePush(val);
	nativeCall();
}
inline bool PLAYER_IS_PLAYER_PRESSING_HORN(Player player) /*0xFA1E2BF8B10598F9*/ {
	uint64_t val;
	nativeInit(0xFA1E2BF8B10598F9);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int PLAYER_GET_WANTED_LEVEL_THRESHOLD(int wantedLevel) /*0xFDD179EAF45B556C*/ {
	uint64_t val;
	nativeInit(0xFDD179EAF45B556C);
	*(int*)(&val) = wantedLevel;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void PLAYER_0xFF300C7649724A0B(Player player, bool p1) /*0xFF300C7649724A0B*/ {
	uint64_t val;
	nativeInit(0xFF300C7649724A0B);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void PLAYER_0xFFEE8FA29AB9A18E(Player player) /*0xFFEE8FA29AB9A18E*/ {
	uint64_t val;
	nativeInit(0xFFEE8FA29AB9A18E);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void ROPE_SET_DISABLE_FRAG_DAMAGE(Object object, bool toggle) /*0x01BA3AED21C16CFB*/ {
	uint64_t val;
	nativeInit(0x01BA3AED21C16CFB);
	*(Object*)(&val) = object;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void ROPE_START_ROPE_WINDING(Object rope) /*0x1461C72C889E343E*/ {
	uint64_t val;
	nativeInit(0x1461C72C889E343E);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline Any ROPE_GET_ROPE_LAST_VERTEX_COORD(Object rope) /*0x21BB0FBD3E217C2D*/ {
	uint64_t val;
	nativeInit(0x21BB0FBD3E217C2D);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool ROPE_0x271C9D3ACA5D6409(Object rope) /*0x271C9D3ACA5D6409*/ {
	uint64_t val;
	nativeInit(0x271C9D3ACA5D6409);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ROPE_PIN_ROPE_VERTEX(Object rope, int vertex, float x, float y, float z) /*0x2B320CF14146B69A*/ {
	uint64_t val;
	nativeInit(0x2B320CF14146B69A);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(int*)(&val) = vertex;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void ROPE_BREAK_ENTITY_GLASS(Object object, float posX, float posY, float posZ, float p4, float offsetX, float offsetY, float offsetZ, float p8, int p9, bool p10) /*0x2E648D16F6E308F3*/ {
	uint64_t val;
	nativeInit(0x2E648D16F6E308F3);
	*(Object*)(&val) = object;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	nativeCall();
}
inline int ROPE_GET_ROPE_VERTEX_COUNT(Object rope) /*0x3655F544CD30F0B5*/ {
	uint64_t val;
	nativeInit(0x3655F544CD30F0B5);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ROPE_0x36CCB9BE67B970FD(Object rope, bool p1) /*0x36CCB9BE67B970FD*/ {
	uint64_t val;
	nativeInit(0x36CCB9BE67B970FD);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ATTACH_ENTITIES_TO_ROPE(Object rope, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, bool p10, bool p11, const char* boneName1, const char* boneName2) /*0x3D95EC8B6D940AC3*/ {
	uint64_t val;
	nativeInit(0x3D95EC8B6D940AC3);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(Entity*)(&val) = ent1;
	nativePush(val);
	*(Entity*)(&val) = ent2;
	nativePush(val);
	*(float*)(&val) = ent1_x;
	nativePush(val);
	*(float*)(&val) = ent1_y;
	nativePush(val);
	*(float*)(&val) = ent1_z;
	nativePush(val);
	*(float*)(&val) = ent2_x;
	nativePush(val);
	*(float*)(&val) = ent2_y;
	nativePush(val);
	*(float*)(&val) = ent2_z;
	nativePush(val);
	*(float*)(&val) = length;
	nativePush(val);
	*(bool*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(const char**)(&val) = boneName1;
	nativePush(val);
	*(const char**)(&val) = boneName2;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ATTACH_ROPE_TO_ENTITY(Object rope, Entity entity, float x, float y, float z, bool p5) /*0x4B490A6832559A65*/ {
	uint64_t val;
	nativeInit(0x4B490A6832559A65);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Any ROPE_UNPIN_ROPE_VERTEX(Object rope, int vertex) /*0x4B5AE2EEE4A8F180*/ {
	uint64_t val;
	nativeInit(0x4B5AE2EEE4A8F180);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(int*)(&val) = vertex;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ROPE_DELETE_ROPE(Object* rope) /*0x52B4829281364649*/ {
	uint64_t val;
	nativeInit(0x52B4829281364649);
	*(Object**)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ROPE_CONVERT_TO_SIMPLE(Object rope) /*0x5389D48EFA2F079A*/ {
	uint64_t val;
	nativeInit(0x5389D48EFA2F079A);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline void ROPE_START_ROPE_UNWINDING_FRONT(Object rope) /*0x538D1179EC1AA9A9*/ {
	uint64_t val;
	nativeInit(0x538D1179EC1AA9A9);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline Any ROPE_SET_DISABLE_BREAKING(Object rope, bool enabled) /*0x5CEC1A84620E7D5B*/ {
	uint64_t val;
	nativeInit(0x5CEC1A84620E7D5B);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any ROPE_ROPE_UNLOAD_TEXTURES() /*0x6CE36C35C1AC8163*/ {
	nativeInit(0x6CE36C35C1AC8163); return *(Any*)(nativeCall());
}
inline void ROPE_ACTIVATE_PHYSICS(Entity entity) /*0x710311ADF0E20730*/ {
	uint64_t val;
	nativeInit(0x710311ADF0E20730);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline float ROPE__GET_ROPE_LENGTH(Object rope) /*0x73040398DFF9A4A6*/ {
	uint64_t val;
	nativeInit(0x73040398DFF9A4A6);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline Vector3 ROPE_GET_CGOFFSET(Object rope) /*0x8214A4B5A7A33612*/ {
	uint64_t val;
	nativeInit(0x8214A4B5A7A33612);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool ROPE_0x84DE3B5FB3E666F0(Object rope) /*0x84DE3B5FB3E666F0*/ {
	uint64_t val;
	nativeInit(0x84DE3B5FB3E666F0);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any ROPE_ROPE_LOAD_TEXTURES() /*0x9B9039DBF2D258C1*/ {
	nativeInit(0x9B9039DBF2D258C1); return *(Any*)(nativeCall());
}
inline Any ROPE_DELETE_CHILD_ROPE(Object rope) /*0xAA5D6B1888E4DB20*/ {
	uint64_t val;
	nativeInit(0xAA5D6B1888E4DB20);
	*(Object*)(&val) = rope;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ROPE_0xB1B6216CA2E7B55E(Any p0, bool p1, bool p2) /*0xB1B6216CA2E7B55E*/ {
	uint64_t val;
	nativeInit(0xB1B6216CA2E7B55E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void ROPE_0xB743F735C03D7810(Any p0, Any p1) /*0xB743F735C03D7810*/ {
	uint64_t val;
	nativeInit(0xB743F735C03D7810);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void ROPE_0xBC0CE682D4D05650(Object rope, int unk, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float x4, float y4, float z4) /*0xBC0CE682D4D05650*/ {
	uint64_t val;
	nativeInit(0xBC0CE682D4D05650);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(int*)(&val) = unk;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = x3;
	nativePush(val);
	*(float*)(&val) = y3;
	nativePush(val);
	*(float*)(&val) = z3;
	nativePush(val);
	*(float*)(&val) = x4;
	nativePush(val);
	*(float*)(&val) = y4;
	nativePush(val);
	*(float*)(&val) = z4;
	nativePush(val);
	nativeCall();
}
inline void ROPE_DETACH_ROPE_FROM_ENTITY(Object rope, Entity entity) /*0xBCF3026912A8647D*/ {
	uint64_t val;
	nativeInit(0xBCF3026912A8647D);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void ROPE_SET_CG_AT_BOUNDCENTER(Object rope) /*0xBE520D9761FF811F*/ {
	uint64_t val;
	nativeInit(0xBE520D9761FF811F);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ROPE_RESET_LENGTH(Object rope, float length) /*0xC16DE94D9BEA14A0*/ {
	uint64_t val;
	nativeInit(0xC16DE94D9BEA14A0);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(float*)(&val) = length;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ROPE_SET_UPDATE_PINVERTS(Object rope) /*0xC8D667EE52114ABA*/ {
	uint64_t val;
	nativeInit(0xC8D667EE52114ABA);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline void ROPE_STOP_ROPE_WINDING(Object rope) /*0xCB2D4AB84A19AA7C*/ {
	uint64_t val;
	nativeInit(0xCB2D4AB84A19AA7C);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline Any ROPE_LOAD_ROPE_DATA(Object rope, const char* rope_preset) /*0xCBB203C04D1ABD27*/ {
	uint64_t val;
	nativeInit(0xCBB203C04D1ABD27);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(const char**)(&val) = rope_preset;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ROPE_0xCC6E963682533882(Object object) /*0xCC6E963682533882*/ {
	uint64_t val;
	nativeInit(0xCC6E963682533882);
	*(Object*)(&val) = object;
	nativePush(val);
	nativeCall();
}
inline Any ROPE_ROPE_FORCE_LENGTH(Object rope, float length) /*0xD009F759A723DB1B*/ {
	uint64_t val;
	nativeInit(0xD009F759A723DB1B);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(float*)(&val) = length;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ROPE_SET_CGOFFSET(Object rope, float x, float y, float z) /*0xD8FA3908D7B86904*/ {
	uint64_t val;
	nativeInit(0xD8FA3908D7B86904);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void ROPE__HIDE_ROPE(Object rope, int value) /*0xDC57A637A20006ED*/ {
	uint64_t val;
	nativeInit(0xDC57A637A20006ED);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void ROPE_APPLY_IMPULSE_TO_CLOTH(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse) /*0xE37F721824571784*/ {
	uint64_t val;
	nativeInit(0xE37F721824571784);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = vecX;
	nativePush(val);
	*(float*)(&val) = vecY;
	nativePush(val);
	*(float*)(&val) = vecZ;
	nativePush(val);
	*(float*)(&val) = impulse;
	nativePush(val);
	nativeCall();
}
inline Object ROPE_ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float p10, bool p11, bool p12, bool rigid, float p14, bool breakWhenShot, Any* unkPtr) /*0xE832D760399EB220*/ {
	uint64_t val;
	nativeInit(0xE832D760399EB220);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(float*)(&val) = length;
	nativePush(val);
	*(int*)(&val) = ropeType;
	nativePush(val);
	*(float*)(&val) = maxLength;
	nativePush(val);
	*(float*)(&val) = minLength;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(bool*)(&val) = p12;
	nativePush(val);
	*(bool*)(&val) = rigid;
	nativePush(val);
	*(float*)(&val) = p14;
	nativePush(val);
	*(bool*)(&val) = breakWhenShot;
	nativePush(val);
	*(Any**)(&val) = unkPtr;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline Any ROPE_GET_ROPE_VERTEX_COORD(Object rope, int vertex) /*0xEA61CA8E80F09E4D*/ {
	uint64_t val;
	nativeInit(0xEA61CA8E80F09E4D);
	*(Object*)(&val) = rope;
	nativePush(val);
	*(int*)(&val) = vertex;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void ROPE_SET_DAMPING(Object ropeorobject, int vertex, float value) /*0xEEA3B200A6FEB65B*/ {
	uint64_t val;
	nativeInit(0xEEA3B200A6FEB65B);
	*(Object*)(&val) = ropeorobject;
	nativePush(val);
	*(int*)(&val) = vertex;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void ROPE_ROPE_DRAW_SHADOW_ENABLED(Object* rope, bool toggle) /*0xF159A63806BB5BA8*/ {
	uint64_t val;
	nativeInit(0xF159A63806BB5BA8);
	*(Object**)(&val) = rope;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool ROPE_ROPE_ARE_TEXTURES_LOADED() /*0xF2D0E6A75CC05597*/ {
	nativeInit(0xF2D0E6A75CC05597); return *(bool*)(nativeCall());
}
inline bool ROPE_DOES_ROPE_EXIST(Object* rope) /*0xFD5448BE3111ED96*/ {
	uint64_t val;
	nativeInit(0xFD5448BE3111ED96);
	*(Object**)(&val) = rope;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void ROPE_STOP_ROPE_UNWINDING_FRONT(Object rope) /*0xFFF3A50779EFBBB3*/ {
	uint64_t val;
	nativeInit(0xFFF3A50779EFBBB3);
	*(Object*)(&val) = rope;
	nativePush(val);
	nativeCall();
}
inline const char* SCRIPT__GET_NAME_OF_THREAD(int threadId) /*0x05A42BA9FC8DA96B*/ {
	uint64_t val;
	nativeInit(0x05A42BA9FC8DA96B);
	*(int*)(&val) = threadId;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void SCRIPT_SHUTDOWN_LOADING_SCREEN() /*0x078EBE9809CCD637*/ {
	nativeInit(0x078EBE9809CCD637);
	nativeCall();
}
inline void SCRIPT_TERMINATE_THIS_THREAD() /*0x1090044AD1DA76FA*/ {
	nativeInit(0x1090044AD1DA76FA);
	nativeCall();
}
inline bool SCRIPT__GET_NO_LOADING_SCREEN() /*0x18C1270EA7F199BC*/ {
	nativeInit(0x18C1270EA7F199BC); return *(bool*)(nativeCall());
}
inline bool SCRIPT_GET_EVENT_DATA(int eventGroup, int eventIndex, int* argStruct, int argStructSize) /*0x2902843FCD2B2D79*/ {
	uint64_t val;
	nativeInit(0x2902843FCD2B2D79);
	*(int*)(&val) = eventGroup;
	nativePush(val);
	*(int*)(&val) = eventIndex;
	nativePush(val);
	*(int**)(&val) = argStruct;
	nativePush(val);
	*(int*)(&val) = argStructSize;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int SCRIPT__GET_NUMBER_OF_INSTANCES_OF_SCRIPT_WITH_NAME_HASH(Hash scriptHash) /*0x2C83A9DA6BFFC4F9*/ {
	uint64_t val;
	nativeInit(0x2C83A9DA6BFFC4F9);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SCRIPT__GET_ID_OF_NEXT_THREAD_IN_ENUMERATION() /*0x30B4FA1C82DD4B9F*/ {
	nativeInit(0x30B4FA1C82DD4B9F); return *(int*)(nativeCall());
}
inline const char* SCRIPT_GET_THIS_SCRIPT_NAME() /*0x442E0A7EDE4A738A*/ {
	nativeInit(0x442E0A7EDE4A738A); return *(const char**)(nativeCall());
}
inline bool SCRIPT_IS_THREAD_ACTIVE(int threadId) /*0x46E9AE36D8FA6417*/ {
	uint64_t val;
	nativeInit(0x46E9AE36D8FA6417);
	*(int*)(&val) = threadId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SCRIPT_SET_NO_LOADING_SCREEN(bool toggle) /*0x5262CC1995D07E09*/ {
	uint64_t val;
	nativeInit(0x5262CC1995D07E09);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void SCRIPT_TRIGGER_SCRIPT_EVENT(int eventGroup, Any* args, int argCount, Any bit) /*0x5AE99C571D5BBE5D*/ {
	uint64_t val;
	nativeInit(0x5AE99C571D5BBE5D);
	*(int*)(&val) = eventGroup;
	nativePush(val);
	*(Any**)(&val) = args;
	nativePush(val);
	*(int*)(&val) = argCount;
	nativePush(val);
	*(Any*)(&val) = bit;
	nativePush(val);
	nativeCall();
}
inline bool SCRIPT_HAS_SCRIPT_WITH_NAME_HASH_LOADED(Hash scriptHash) /*0x5F0F0C783EB16C04*/ {
	uint64_t val;
	nativeInit(0x5F0F0C783EB16C04);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int SCRIPT_GET_NUMBER_OF_EVENTS(int eventGroup) /*0x5F92A689A06620AA*/ {
	uint64_t val;
	nativeInit(0x5F92A689A06620AA);
	*(int*)(&val) = eventGroup;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void SCRIPT_REQUEST_SCRIPT(const char* scriptName) /*0x6EB5F71AA68F2E8E*/ {
	uint64_t val;
	nativeInit(0x6EB5F71AA68F2E8E);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	nativeCall();
}
inline Hash SCRIPT_GET_HASH_OF_THIS_SCRIPT_NAME() /*0x8A1C8B1738FFE87E*/ {
	nativeInit(0x8A1C8B1738FFE87E); return *(Hash*)(nativeCall());
}
inline bool SCRIPT_GET_EVENT_EXISTS(int eventGroup, int eventIndex) /*0x936E6168A9BCEDB5*/ {
	uint64_t val;
	nativeInit(0x936E6168A9BCEDB5);
	*(int*)(&val) = eventGroup;
	nativePush(val);
	*(int*)(&val) = eventIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SCRIPT_0xB1577667C3708F9B() /*0xB1577667C3708F9B*/ {
	nativeInit(0xB1577667C3708F9B);
	nativeCall();
}
inline int SCRIPT_GET_ID_OF_THIS_THREAD() /*0xC30338E8088E2E21*/ {
	nativeInit(0xC30338E8088E2E21); return *(int*)(nativeCall());
}
inline void SCRIPT_SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(Hash scriptHash) /*0xC5BC038960E9DB27*/ {
	uint64_t val;
	nativeInit(0xC5BC038960E9DB27);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	nativeCall();
}
inline void SCRIPT_TERMINATE_THREAD(int threadId) /*0xC8B189ED9138BCD4*/ {
	uint64_t val;
	nativeInit(0xC8B189ED9138BCD4);
	*(int*)(&val) = threadId;
	nativePush(val);
	nativeCall();
}
inline void SCRIPT_SET_SCRIPT_AS_NO_LONGER_NEEDED(const char* scriptName) /*0xC90D2DCACD56184C*/ {
	uint64_t val;
	nativeInit(0xC90D2DCACD56184C);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	nativeCall();
}
inline void SCRIPT_REQUEST_SCRIPT_WITH_NAME_HASH(Hash scriptHash) /*0xD62A67D26D9653E6*/ {
	uint64_t val;
	nativeInit(0xD62A67D26D9653E6);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	nativeCall();
}
inline int SCRIPT_GET_EVENT_AT_INDEX(int eventGroup, int eventIndex) /*0xD8F66A3A60C62153*/ {
	uint64_t val;
	nativeInit(0xD8F66A3A60C62153);
	*(int*)(&val) = eventGroup;
	nativePush(val);
	*(int*)(&val) = eventIndex;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void SCRIPT__BEGIN_ENUMERATING_THREADS() /*0xDADFADA5A20143A8*/ {
	nativeInit(0xDADFADA5A20143A8);
	nativeCall();
}
inline bool SCRIPT_HAS_SCRIPT_LOADED(const char* scriptName) /*0xE6CC9F3BA0FB9EF1*/ {
	uint64_t val;
	nativeInit(0xE6CC9F3BA0FB9EF1);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SCRIPT__DOES_SCRIPT_WITH_NAME_HASH_EXIST(Hash scriptHash) /*0xF86AA3C56BA31381*/ {
	uint64_t val;
	nativeInit(0xF86AA3C56BA31381);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SCRIPT_DOES_SCRIPT_EXIST(const char* scriptName) /*0xFC04745FBE67C19A*/ {
	uint64_t val;
	nativeInit(0xFC04745FBE67C19A);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int SOCIALCLUB__GET_TOTAL_SC_INBOX_IDS() /*0x03A93FF1A2CA0864*/ {
	nativeInit(0x03A93FF1A2CA0864); return *(int*)(nativeCall());
}
inline void SOCIALCLUB__SC_INBOX_GET_EMAILS(int offset, int limit) /*0x040ADDCBAFA1018A*/ {
	uint64_t val;
	nativeInit(0x040ADDCBAFA1018A);
	*(int*)(&val) = offset;
	nativePush(val);
	*(int*)(&val) = limit;
	nativePush(val);
	nativeCall();
}
inline Any SOCIALCLUB_0x07C61676E5BB52CD(Any p0) /*0x07C61676E5BB52CD*/ {
	uint64_t val;
	nativeInit(0x07C61676E5BB52CD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB_0x0F73393BAC7E6730(Any* p0, int* p1) /*0x0F73393BAC7E6730*/ {
	uint64_t val;
	nativeInit(0x0F73393BAC7E6730);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SOCIALCLUB_0x116FB94DC4B79F17(const char* p0) /*0x116FB94DC4B79F17*/ {
	uint64_t val;
	nativeInit(0x116FB94DC4B79F17);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any SOCIALCLUB_0x16DA8172459434AA() /*0x16DA8172459434AA*/ {
	nativeInit(0x16DA8172459434AA); return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB__SC_HAS_CHECK_STRING_TASK_COMPLETED(int taskHandle) /*0x1753344C770358AE*/ {
	uint64_t val;
	nativeInit(0x1753344C770358AE);
	*(int*)(&val) = taskHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x19853B5B17D77BCA(Any p0, Any* p1) /*0x19853B5B17D77BCA*/ {
	uint64_t val;
	nativeInit(0x19853B5B17D77BCA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x1989C6E6F67E76A8(Any* p0, Any* p1, Any* p2) /*0x1989C6E6F67E76A8*/ {
	uint64_t val;
	nativeInit(0x1989C6E6F67E76A8);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* SOCIALCLUB__SC_GET_NICKNAME() /*0x198D161F458ECC7F*/ {
	nativeInit(0x198D161F458ECC7F); return *(const char**)(nativeCall());
}
inline Any SOCIALCLUB_0x1D4446A62D35B0D0(Any p0, Any p1) /*0x1D4446A62D35B0D0*/ {
	uint64_t val;
	nativeInit(0x1D4446A62D35B0D0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB_0x1F1E9682483697C7(Any p0, Any p1) /*0x1F1E9682483697C7*/ {
	uint64_t val;
	nativeInit(0x1F1E9682483697C7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x225798743970412B(int* p0) /*0x225798743970412B*/ {
	uint64_t val;
	nativeInit(0x225798743970412B);
	*(int**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SOCIALCLUB_SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(Player* player) /*0x2330C12A7A605D16*/ {
	uint64_t val;
	nativeInit(0x2330C12A7A605D16);
	*(Player**)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline bool SOCIALCLUB_0x287F1F75D2803595(Any p0, Any* p1) /*0x287F1F75D2803595*/ {
	uint64_t val;
	nativeInit(0x287F1F75D2803595);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB__SC_INBOX_MESSAGE_POP(int p0) /*0x2C015348CF19CA1D*/ {
	uint64_t val;
	nativeInit(0x2C015348CF19CA1D);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x2E89990DDFF670C3(Any p0, Any p1) /*0x2E89990DDFF670C3*/ {
	uint64_t val;
	nativeInit(0x2E89990DDFF670C3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB_0x3001BEF2FECA3680() /*0x3001BEF2FECA3680*/ {
	nativeInit(0x3001BEF2FECA3680); return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x418DC16FAE452C1C(int p0) /*0x418DC16FAE452C1C*/ {
	uint64_t val;
	nativeInit(0x418DC16FAE452C1C);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SOCIALCLUB_0x44ACA259D67651DB(Any* p0, Any p1) /*0x44ACA259D67651DB*/ {
	uint64_t val;
	nativeInit(0x44ACA259D67651DB);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool SOCIALCLUB_0x4737980E8A283806(int p0, Any* p1) /*0x4737980E8A283806*/ {
	uint64_t val;
	nativeInit(0x4737980E8A283806);
	*(int*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x487912FD248EFDDF(Any p0, float p1) /*0x487912FD248EFDDF*/ {
	uint64_t val;
	nativeInit(0x487912FD248EFDDF);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x4A7D6E727F941747(Any* p0) /*0x4A7D6E727F941747*/ {
	uint64_t val;
	nativeInit(0x4A7D6E727F941747);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void SOCIALCLUB_SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST() /*0x55DF6DB45179236E*/ {
	nativeInit(0x55DF6DB45179236E);
	nativeCall();
}
inline Any SOCIALCLUB_0x5C4EBFFA98BDB41C(Any p0) /*0x5C4EBFFA98BDB41C*/ {
	uint64_t val;
	nativeInit(0x5C4EBFFA98BDB41C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void SOCIALCLUB_0x675721C9F644D161() /*0x675721C9F644D161*/ {
	nativeInit(0x675721C9F644D161);
	nativeCall();
}
inline bool SOCIALCLUB_0x699E4A5C8C893A18(int p0, const char* p1, Any* p2) /*0x699E4A5C8C893A18*/ {
	uint64_t val;
	nativeInit(0x699E4A5C8C893A18);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_SC_INBOX_MESSAGE_GET_UGCDATA(Any p0, Any* p1) /*0x69D82604A1A5A254*/ {
	uint64_t val;
	nativeInit(0x69D82604A1A5A254);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x6AFD2CD753FEEF83(const char* playerName) /*0x6AFD2CD753FEEF83*/ {
	uint64_t val;
	nativeInit(0x6AFD2CD753FEEF83);
	*(const char**)(&val) = playerName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x6BFB12CE158E3DD4(Any p0) /*0x6BFB12CE158E3DD4*/ {
	uint64_t val;
	nativeInit(0x6BFB12CE158E3DD4);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x700569DBA175A77C(Any p0) /*0x700569DBA175A77C*/ {
	uint64_t val;
	nativeInit(0x700569DBA175A77C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB__SC_START_CHECK_STRING_TASK(const char* string, int* taskHandle) /*0x75632C5ECD7ED843*/ {
	uint64_t val;
	nativeInit(0x75632C5ECD7ED843);
	*(const char**)(&val) = string;
	nativePush(val);
	*(int**)(&val) = taskHandle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, const char* context, const char* out) /*0x7572EF42FC6A9B6D*/ {
	uint64_t val;
	nativeInit(0x7572EF42FC6A9B6D);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = context;
	nativePush(val);
	*(const char**)(&val) = out;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x8147FFF6A718E1AD(Any p0) /*0x8147FFF6A718E1AD*/ {
	uint64_t val;
	nativeInit(0x8147FFF6A718E1AD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int SOCIALCLUB__SC_GET_CHECK_STRING_STATUS(int taskHandle) /*0x82E4A58BABC15AE7*/ {
	uint64_t val;
	nativeInit(0x82E4A58BABC15AE7);
	*(int*)(&val) = taskHandle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool SOCIALCLUB_0x8416FE4E4629D7D7(const char* p0) /*0x8416FE4E4629D7D7*/ {
	uint64_t val;
	nativeInit(0x8416FE4E4629D7D7);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x85535ACF97FC0969(Any p0) /*0x85535ACF97FC0969*/ {
	uint64_t val;
	nativeInit(0x85535ACF97FC0969);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB_0x87E0052F08BD64E6(Any p0, int* p1) /*0x87E0052F08BD64E6*/ {
	uint64_t val;
	nativeInit(0x87E0052F08BD64E6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0x8CC469AB4D349B7C(int p0, const char* p1, Any* p2) /*0x8CC469AB4D349B7C*/ {
	uint64_t val;
	nativeInit(0x8CC469AB4D349B7C);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0x9237E334F6E43156(Any p0) /*0x9237E334F6E43156*/ {
	uint64_t val;
	nativeInit(0x9237E334F6E43156);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB_0x92DA6E70EF249BD1(const char* p0, int* p1) /*0x92DA6E70EF249BD1*/ {
	uint64_t val;
	nativeInit(0x92DA6E70EF249BD1);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB__IS_SC_INBOX_VALID(int p0) /*0x93028F1DB42BFD08*/ {
	uint64_t val;
	nativeInit(0x93028F1DB42BFD08);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int SOCIALCLUB_0x930DE22F07B1CCE3(Any p0) /*0x930DE22F07B1CCE3*/ {
	uint64_t val;
	nativeInit(0x930DE22F07B1CCE3);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool SOCIALCLUB__SC_INBOX_MESSAGE_PUSH(int p0) /*0x9A2C8064B6C1E41A*/ {
	uint64_t val;
	nativeInit(0x9A2C8064B6C1E41A);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_SC_INBOX_MESSAGE_GET_DATA_INT(int p0, const char* context, int* out) /*0xA00EFE4082C4056E*/ {
	uint64_t val;
	nativeInit(0xA00EFE4082C4056E);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = context;
	nativePush(val);
	*(int**)(&val) = out;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void SOCIALCLUB_0xA68D3D229F4F3B06(const char* p0) /*0xA68D3D229F4F3B06*/ {
	uint64_t val;
	nativeInit(0xA68D3D229F4F3B06);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Hash SOCIALCLUB__SC_INBOX_MESSAGE_INIT(int p0) /*0xBB8EA16ECBC976C4*/ {
	uint64_t val;
	nativeInit(0xBB8EA16ECBC976C4);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool SOCIALCLUB_0xBC1CC91205EC8D6E() /*0xBC1CC91205EC8D6E*/ {
	nativeInit(0xBC1CC91205EC8D6E); return *(bool*)(nativeCall());
}
inline void SOCIALCLUB_0xBFA0A56A817C6C7D(bool p0) /*0xBFA0A56A817C6C7D*/ {
	uint64_t val;
	nativeInit(0xBFA0A56A817C6C7D);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool SOCIALCLUB_0xD0EE05FE193646EA(Any* p0, Any* p1, Any* p2) /*0xD0EE05FE193646EA*/ {
	uint64_t val;
	nativeInit(0xD0EE05FE193646EA);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0xD302E99EDF0449CF(Any p0) /*0xD302E99EDF0449CF*/ {
	uint64_t val;
	nativeInit(0xD302E99EDF0449CF);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any SOCIALCLUB_0xD8122C407663B995() /*0xD8122C407663B995*/ {
	nativeInit(0xD8122C407663B995); return *(Any*)(nativeCall());
}
inline void SOCIALCLUB_0xDA024BDBD600F44A(int* networkHandle) /*0xDA024BDBD600F44A*/ {
	uint64_t val;
	nativeInit(0xDA024BDBD600F44A);
	*(int**)(&val) = networkHandle;
	nativePush(val);
	nativeCall();
}
inline const char* SOCIALCLUB_0xDF649C4E9AFDD788() /*0xDF649C4E9AFDD788*/ {
	nativeInit(0xDF649C4E9AFDD788); return *(const char**)(nativeCall());
}
inline bool SOCIALCLUB_0xF22CA0FD74B80E7A(Any p0) /*0xF22CA0FD74B80E7A*/ {
	uint64_t val;
	nativeInit(0xF22CA0FD74B80E7A);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* SOCIALCLUB__SC_INBOX_MESSAGE_GET_STRING(int p0) /*0xF3E31D16CBDCB304*/ {
	uint64_t val;
	nativeInit(0xF3E31D16CBDCB304);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool SOCIALCLUB_0xF6BAAAF762E1BF40(const char* p0, int* p1) /*0xF6BAAAF762E1BF40*/ {
	uint64_t val;
	nativeInit(0xF6BAAAF762E1BF40);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool SOCIALCLUB_0xFE4C1D0D3B9CC17E(Any p0, Any p1) /*0xFE4C1D0D3B9CC17E*/ {
	uint64_t val;
	nativeInit(0xFE4C1D0D3B9CC17E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any SOCIALCLUB_0xFF8F3A92B75ED67A() /*0xFF8F3A92B75ED67A*/ {
	nativeInit(0xFF8F3A92B75ED67A); return *(Any*)(nativeCall());
}
inline bool SOCIALCLUB__SC_INBOX_MESSAGE_GET_DATA_bool(int p0, const char* p1) /*0xFFE5C16F402D851D*/ {
	uint64_t val;
	nativeInit(0xFFE5C16F402D851D);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x047CBED6F6F8B63C() /*0x047CBED6F6F8B63C*/ {
	nativeInit(0x047CBED6F6F8B63C);
	nativeCall();
}
inline void STATS_0x098760C7461724CD() /*0x098760C7461724CD*/ {
	nativeInit(0x098760C7461724CD);
	nativeCall();
}
inline void STATS_0x0BCA1D2C47B0D269(Any p0, Any p1, float p2) /*0x0BCA1D2C47B0D269*/ {
	uint64_t val;
	nativeInit(0x0BCA1D2C47B0D269);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void STATS_0x0D01D20616FC73FB(Any p0, Any p1) /*0x0D01D20616FC73FB*/ {
	uint64_t val;
	nativeInit(0x0D01D20616FC73FB);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SLOT_IS_LOADED(Any p0) /*0x0D0A9F0E7BD91E3C*/ {
	uint64_t val;
	nativeInit(0x0D0A9F0E7BD91E3C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_FRIEND_ACTIVITY(Any p0, Any p1) /*0x0F71DE29AB2258F1*/ {
	uint64_t val;
	nativeInit(0x0F71DE29AB2258F1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_GET_bool_MASKED(Hash statName, int mask, int p2) /*0x10FE3F1B79F9B071*/ {
	uint64_t val;
	nativeInit(0x10FE3F1B79F9B071);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(int*)(&val) = mask;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_LEADERBOARDS_GET_NUMBER_OF_COLUMNS(Any p0, Any p1) /*0x117B45156D7EFF2E*/ {
	uint64_t val;
	nativeInit(0x117B45156D7EFF2E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_STAT_GET_bool(Hash statHash, bool* outValue, Any p2) /*0x11B5E6D2AE73F48E*/ {
	uint64_t val;
	nativeInit(0x11B5E6D2AE73F48E);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(bool**)(&val) = outValue;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x11FF1C80276097ED(const char* p0, Any p1, Any p2) /*0x11FF1C80276097ED*/ {
	uint64_t val;
	nativeInit(0x11FF1C80276097ED);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_ROS_BET(int amount, int act, Player player, float cm) /*0x121FB4DDDC2D5291*/ {
	uint64_t val;
	nativeInit(0x121FB4DDDC2D5291);
	*(int*)(&val) = amount;
	nativePush(val);
	*(int*)(&val) = act;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(float*)(&val) = cm;
	nativePush(val);
	nativeCall();
}
inline void STATS_0x14E0B2D1AD1044E0(Any* p0, Any* p1, Any* p2, Any* p3) /*0x14E0B2D1AD1044E0*/ {
	uint64_t val;
	nativeInit(0x14E0B2D1AD1044E0);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_SHOP_ITEM(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x176852ACAAC173D1*/ {
	uint64_t val;
	nativeInit(0x176852ACAAC173D1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_GXT_LABEL(Hash statName, const char* value, bool save) /*0x17695002FD8B2AE0*/ {
	uint64_t val;
	nativeInit(0x17695002FD8B2AE0);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x1CAE5D2E3F9A07F0(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) /*0x1CAE5D2E3F9A07F0*/ {
	uint64_t val;
	nativeInit(0x1CAE5D2E3F9A07F0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline const char* STATS_STAT_GET_USER_ID(Any p0) /*0x2365C388E393BBE2*/ {
	uint64_t val;
	nativeInit(0x2365C388E393BBE2);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void STATS_0x26D7399B9587FE89(int p0) /*0x26D7399B9587FE89*/ {
	uint64_t val;
	nativeInit(0x26D7399B9587FE89);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Hash STATS__GET_NGSTAT_INT_HASH(int index, bool spStat, bool charStat, int character, const char* section) /*0x2B4CDCA6F07FF3DA*/ {
	uint64_t val;
	nativeInit(0x2B4CDCA6F07FF3DA);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	*(const char**)(&val) = section;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void STATS_0x2B69F5074C894811(Any p0, Any p1, Any p2, Any p3) /*0x2B69F5074C894811*/ {
	uint64_t val;
	nativeInit(0x2B69F5074C894811);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_DATE(Hash statName, Any* value, int numFields, bool save) /*0x2C29BFB64F4FCBE4*/ {
	uint64_t val;
	nativeInit(0x2C29BFB64F4FCBE4);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(Any**)(&val) = value;
	nativePush(val);
	*(int*)(&val) = numFields;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int STATS_STAT_GET_NUMBER_OF_SECONDS(Hash statName) /*0x2CE056FF3723F00B*/ {
	uint64_t val;
	nativeInit(0x2CE056FF3723F00B);
	*(Hash*)(&val) = statName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void STATS_0x2E65248609523599(Any p0, Any p1, Any p2) /*0x2E65248609523599*/ {
	uint64_t val;
	nativeInit(0x2E65248609523599);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_LEADERBOARDS_READ_SUCCESSFUL(Any p0, Any p1, Any p2) /*0x2FB19228983E832C*/ {
	uint64_t val;
	nativeInit(0x2FB19228983E832C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x30A6614C1F7799B8(Any p0, float p1, Any p2) /*0x30A6614C1F7799B8*/ {
	uint64_t val;
	nativeInit(0x30A6614C1F7799B8);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0x3270F67EED31FBC1(Any p0, Any* p1, Any* p2) /*0x3270F67EED31FBC1*/ {
	uint64_t val;
	nativeInit(0x3270F67EED31FBC1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_0x34770B9CE0E03B91(Any p0, Any* p1) /*0x34770B9CE0E03B91*/ {
	uint64_t val;
	nativeInit(0x34770B9CE0E03B91);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_CLOTH_CHANGE(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x34B973047A2268B9*/ {
	uint64_t val;
	nativeInit(0x34B973047A2268B9);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_GET_POS(Hash statHash, float* x, float* y, float* z, int p4) /*0x350F82CCB186AA1B*/ {
	uint64_t val;
	nativeInit(0x350F82CCB186AA1B);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(float**)(&val) = x;
	nativePush(val);
	*(float**)(&val) = y;
	nativePush(val);
	*(float**)(&val) = z;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float STATS_0x38491439B6BA7F7D(Any p0, Any p1) /*0x38491439B6BA7F7D*/ {
	uint64_t val;
	nativeInit(0x38491439B6BA7F7D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void STATS_0x38BAAA5DD4C9D19F(int value) /*0x38BAAA5DD4C9D19F*/ {
	uint64_t val;
	nativeInit(0x38BAAA5DD4C9D19F);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void STATS__LEADERBOARDS_DEATHS(Hash statName, float value) /*0x428EAF89E24F6C36*/ {
	uint64_t val;
	nativeInit(0x428EAF89E24F6C36);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void STATS_0x46326E13DA4E0546(Any* p0) /*0x46326E13DA4E0546*/ {
	uint64_t val;
	nativeInit(0x46326E13DA4E0546);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_AWARD_XP(int xp, Hash hash1, Hash hash2) /*0x46F917F6B4128FE4*/ {
	uint64_t val;
	nativeInit(0x46F917F6B4128FE4);
	*(int*)(&val) = xp;
	nativePush(val);
	*(Hash*)(&val) = hash1;
	nativePush(val);
	*(Hash*)(&val) = hash2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_FLOAT(Hash statName, float value, bool save) /*0x4851997F37FE9B3C*/ {
	uint64_t val;
	nativeInit(0x4851997F37FE9B3C);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_STAT_DELETE_SLOT(Any p0) /*0x49A49BED12794D70*/ {
	uint64_t val;
	nativeInit(0x49A49BED12794D70);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_STAT_SET_bool(Hash statName, bool value, bool save) /*0x4B33C4243DE0C432*/ {
	uint64_t val;
	nativeInit(0x4B33C4243DE0C432);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_0x4C89FE2BDEB3F169() /*0x4C89FE2BDEB3F169*/ {
	nativeInit(0x4C89FE2BDEB3F169); return *(Any*)(nativeCall());
}
inline Any STATS_0x4FEF53183C3C6414() /*0x4FEF53183C3C6414*/ {
	nativeInit(0x4FEF53183C3C6414); return *(Any*)(nativeCall());
}
inline void STATS_0x5009DFD741329729(const char* p0, Any p1) /*0x5009DFD741329729*/ {
	uint64_t val;
	nativeInit(0x5009DFD741329729);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline const char* STATS_STAT_GET_LICENSE_PLATE(Hash statName) /*0x5473D4195058B2E4*/ {
	uint64_t val;
	nativeInit(0x5473D4195058B2E4);
	*(Hash*)(&val) = statName;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void STATS_0x55384438FC55AD8E(int value) /*0x55384438FC55AD8E*/ {
	uint64_t val;
	nativeInit(0x55384438FC55AD8E);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline Any STATS_0x567384DFA67029E6() /*0x567384DFA67029E6*/ {
	nativeInit(0x567384DFA67029E6); return *(Any*)(nativeCall());
}
inline void STATS_0x5688585E6D563CD8(Any p0) /*0x5688585E6D563CD8*/ {
	uint64_t val;
	nativeInit(0x5688585E6D563CD8);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any STATS_0x58A651CD201D89AD(Any p0) /*0x58A651CD201D89AD*/ {
	uint64_t val;
	nativeInit(0x58A651CD201D89AD);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_0x5A556B229A169402() /*0x5A556B229A169402*/ {
	nativeInit(0x5A556B229A169402); return *(bool*)(nativeCall());
}
inline bool STATS_STAT_SET_bool_MASKED(Hash statName, bool value, int mask, bool save) /*0x5BC62EC1937B9E5B*/ {
	uint64_t val;
	nativeInit(0x5BC62EC1937B9E5B);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	*(int*)(&val) = mask;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_0x5BD5F255321C4AAF(Any p0) /*0x5BD5F255321C4AAF*/ {
	uint64_t val;
	nativeInit(0x5BD5F255321C4AAF);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2) /*0x5CE587FB5A42C8C4*/ {
	uint64_t val;
	nativeInit(0x5CE587FB5A42C8C4);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_IDLE_KICK(int time) /*0x5DA3A8DE8CB6226F*/ {
	uint64_t val;
	nativeInit(0x5DA3A8DE8CB6226F);
	*(int*)(&val) = time;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0x5EAD2BF6484852E4() /*0x5EAD2BF6484852E4*/ {
	nativeInit(0x5EAD2BF6484852E4); return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_CHEAT_APPLIED(const char* cheat) /*0x6058665D72302D3F*/ {
	uint64_t val;
	nativeInit(0x6058665D72302D3F);
	*(const char**)(&val) = cheat;
	nativePush(val);
	nativeCall();
}
inline Hash STATS__GET_PSTAT_INT_HASH(int index, bool spStat, bool charStat, int character) /*0x61E111E323419E07*/ {
	uint64_t val;
	nativeInit(0x61E111E323419E07);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void STATS_0x629526ABA383BCAA() /*0x629526ABA383BCAA*/ {
	nativeInit(0x629526ABA383BCAA);
	nativeCall();
}
inline void STATS_0x6483C25849031C4F(Any p0, Any p1, Any p2, Any* p3) /*0x6483C25849031C4F*/ {
	uint64_t val;
	nativeInit(0x6483C25849031C4F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_GET_MASKED_INT(Hash statHash, int* outValue, Any p2, Any p3, Any p4) /*0x655185A06D9EEAAB*/ {
	uint64_t val;
	nativeInit(0x655185A06D9EEAAB);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(int**)(&val) = outValue;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_STAT_SET_PROFILE_SETTING_VALUE(int profileSetting, int value) /*0x68F01422BE1D838F*/ {
	uint64_t val;
	nativeInit(0x68F01422BE1D838F);
	*(int*)(&val) = profileSetting;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_ODDJOB_DONE(Any p0, Any p1, Any p2) /*0x69DEA3E9DB727B4C*/ {
	uint64_t val;
	nativeInit(0x69DEA3E9DB727B4C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_LICENSE_PLATE(Hash statName, const char* str) /*0x69FF13266D7296DA*/ {
	uint64_t val;
	nativeInit(0x69FF13266D7296DA);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(const char**)(&val) = str;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_0x6DEE77AFF8C21BD1(Any* p0, Any* p1) /*0x6DEE77AFF8C21BD1*/ {
	uint64_t val;
	nativeInit(0x6DEE77AFF8C21BD1);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x6F361B8889A792A3() /*0x6F361B8889A792A3*/ {
	nativeInit(0x6F361B8889A792A3);
	nativeCall();
}
inline void STATS_PLAYSTATS_RANDOM_MISSION_DONE(const char* name, Any p1, Any p2, Any p3) /*0x71862B1D855F32E1*/ {
	uint64_t val;
	nativeInit(0x71862B1D855F32E1);
	*(const char**)(&val) = name;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void STATS_0x71B008056E5692D6() /*0x71B008056E5692D6*/ {
	nativeInit(0x71B008056E5692D6);
	nativeCall();
}
inline void STATS_0x723C1CE13FBFDB67(Any p0, Any p1) /*0x723C1CE13FBFDB67*/ {
	uint64_t val;
	nativeInit(0x723C1CE13FBFDB67);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int STATS_STAT_GET_NUMBER_OF_MINUTES(Hash statName) /*0x7583B4BE4C5A41B5*/ {
	uint64_t val;
	nativeInit(0x7583B4BE4C5A41B5);
	*(Hash*)(&val) = statName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool STATS_STAT_GET_INT(Hash statHash, int* outValue, int p2) /*0x767FBC2AC802EF3D*/ {
	uint64_t val;
	nativeInit(0x767FBC2AC802EF3D);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(int**)(&val) = outValue;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(Any p0) /*0x79AB33F0FBFAC40C*/ {
	uint64_t val;
	nativeInit(0x79AB33F0FBFAC40C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_MASKED_INT(Hash statName, Any p1, Any p2, int p3, bool save) /*0x7BBB1B54583ED410*/ {
	uint64_t val;
	nativeInit(0x7BBB1B54583ED410);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_MISSION_OVER(Any* p0, Any p1, Any p2, bool p3, bool p4, bool p5) /*0x7C4BB33A8CED7324*/ {
	uint64_t val;
	nativeInit(0x7C4BB33A8CED7324);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline Any STATS_LEADERBOARDS_READ_CLEAR(Any p0, Any p1, Any p2) /*0x7CCE5C737A665701*/ {
	uint64_t val;
	nativeInit(0x7CCE5C737A665701);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any STATS_STAT_SAVE_PENDING() /*0x7D3A583856F2C5AC*/ {
	nativeInit(0x7D3A583856F2C5AC); return *(Any*)(nativeCall());
}
inline bool STATS_0x7E6946F68A38B74F(Any p0) /*0x7E6946F68A38B74F*/ {
	uint64_t val;
	nativeInit(0x7E6946F68A38B74F);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x7EEC2A316C250073(Any p0, Any p1, Any p2) /*0x7EEC2A316C250073*/ {
	uint64_t val;
	nativeInit(0x7EEC2A316C250073);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2) /*0x7EEC7E4F6984A16A*/ {
	uint64_t val;
	nativeInit(0x7EEC7E4F6984A16A);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_0x7F2C4CDF2E82DF4C(Any p0) /*0x7F2C4CDF2E82DF4C*/ {
	uint64_t val;
	nativeInit(0x7F2C4CDF2E82DF4C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash STATS__GET_PSTAT_bool_HASH(int index, bool spStat, bool charStat, int character) /*0x80C75307B1C42837*/ {
	uint64_t val;
	nativeInit(0x80C75307B1C42837);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline Any STATS_0x88578F6EC36B4A3A(Any p0, Any p1) /*0x88578F6EC36B4A3A*/ {
	uint64_t val;
	nativeInit(0x88578F6EC36B4A3A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any STATS_0x886913BBEACA68C1(Any* p0) /*0x886913BBEACA68C1*/ {
	uint64_t val;
	nativeInit(0x886913BBEACA68C1);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_STAT_GET_DATE(Hash statHash, Any* p1, Any p2, Any p3) /*0x8B0FACEFC36C824B*/ {
	uint64_t val;
	nativeInit(0x8B0FACEFC36C824B);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_STAT_SET_USER_ID(Hash statName, const char* value, bool save) /*0x8CDDF1E452BABE11*/ {
	uint64_t val;
	nativeInit(0x8CDDF1E452BABE11);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0x8EC74CEB042E7CFF(Any p0) /*0x8EC74CEB042E7CFF*/ {
	uint64_t val;
	nativeInit(0x8EC74CEB042E7CFF);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_QUICKFIX_TOOL(int element, const char* item) /*0x90D0622866E80445*/ {
	uint64_t val;
	nativeInit(0x90D0622866E80445);
	*(int*)(&val) = element;
	nativePush(val);
	*(const char**)(&val) = item;
	nativePush(val);
	nativeCall();
}
inline bool STATS_LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2) /*0x9120E8DBA3D69273*/ {
	uint64_t val;
	nativeInit(0x9120E8DBA3D69273);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, bool p3, Any p4, Any p5) /*0x918B101666F9CB83*/ {
	uint64_t val;
	nativeInit(0x918B101666F9CB83);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_NPC_INVITE(Any* p0) /*0x93054C88E6AA7C44*/ {
	uint64_t val;
	nativeInit(0x93054C88E6AA7C44);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int STATS_0x94F12ABF9C79E339(int p0) /*0x94F12ABF9C79E339*/ {
	uint64_t val;
	nativeInit(0x94F12ABF9C79E339);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void STATS_0x98E2BC1CA26287C3() /*0x98E2BC1CA26287C3*/ {
	nativeInit(0x98E2BC1CA26287C3);
	nativeCall();
}
inline Any STATS_0x9A62EC95AE10E011() /*0x9A62EC95AE10E011*/ {
	nativeInit(0x9A62EC95AE10E011); return *(Any*)(nativeCall());
}
inline void STATS_0x9B4BD21D69B1E609() /*0x9B4BD21D69B1E609*/ {
	nativeInit(0x9B4BD21D69B1E609);
	nativeCall();
}
inline void STATS_STAT_INCREMENT(Hash statName, float value) /*0x9B5A68C6489E9909*/ {
	uint64_t val;
	nativeInit(0x9B5A68C6489E9909);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void STATS_PLAYSTATS_RACE_CHECKPOINT(Any p0, Any p1, Any p2, Any p3, Any p4) /*0x9C375C315099DDE4*/ {
	uint64_t val;
	nativeInit(0x9C375C315099DDE4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline bool STATS_LEADERBOARDS_GET_CACHE_EXISTS(Any p0) /*0x9C51349BE6CDFE2C*/ {
	uint64_t val;
	nativeInit(0x9C51349BE6CDFE2C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xA071E0ED98F91286(Any p0, Any p1) /*0xA071E0ED98F91286*/ {
	uint64_t val;
	nativeInit(0xA071E0ED98F91286);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0xA0F93D5465B3094D(Any* p0) /*0xA0F93D5465B3094D*/ {
	uint64_t val;
	nativeInit(0xA0F93D5465B3094D);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_STAT_LOAD_PENDING(Any p0) /*0xA1750FFAFA181661*/ {
	uint64_t val;
	nativeInit(0xA1750FFAFA181661);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_0xA31FD15197B192BD() /*0xA31FD15197B192BD*/ {
	nativeInit(0xA31FD15197B192BD); return *(Any*)(nativeCall());
}
inline Any STATS_LEADERBOARDS_READ_CLEAR_ALL() /*0xA34CB6E6F0DF4A0B*/ {
	nativeInit(0xA34CB6E6F0DF4A0B); return *(Any*)(nativeCall());
}
inline bool STATS_0xA5C80D8E768A9E66(Any* p0) /*0xA5C80D8E768A9E66*/ {
	uint64_t val;
	nativeInit(0xA5C80D8E768A9E66);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_STAT_LOAD(int p0) /*0xA651443F437B1CE6*/ {
	uint64_t val;
	nativeInit(0xA651443F437B1CE6);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xA736CF7FB7C5BFF4(Any* p0, Any* p1, Any* p2, Any* p3) /*0xA736CF7FB7C5BFF4*/ {
	uint64_t val;
	nativeInit(0xA736CF7FB7C5BFF4);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xA78B8FA58200DA56(int p0) /*0xA78B8FA58200DA56*/ {
	uint64_t val;
	nativeInit(0xA78B8FA58200DA56);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xA8733668D1047B51(Any p0) /*0xA8733668D1047B51*/ {
	uint64_t val;
	nativeInit(0xA8733668D1047B51);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_STRING(Hash statName, const char* value, bool save) /*0xA87B2335D12531D7*/ {
	uint64_t val;
	nativeInit(0xA87B2335D12531D7);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(const char**)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_BY_ROW(Any* p0, Any* p1, Any p2, Any* p3, Any p4, Any* p5, Any p6) /*0xA9CDB1E3F0A49883*/ {
	uint64_t val;
	nativeInit(0xA9CDB1E3F0A49883);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any**)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_LEADERBOARDS_READ_PENDING(Any p0, Any p1, Any p2) /*0xAC392C8483342AC2*/ {
	uint64_t val;
	nativeInit(0xAC392C8483342AC2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xADDD1C754E2E2914(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) /*0xADDD1C754E2E2914*/ {
	uint64_t val;
	nativeInit(0xADDD1C754E2E2914);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline bool STATS_LEADERBOARDS2_WRITE_DATA(Any* p0) /*0xAE2206545888AE49*/ {
	uint64_t val;
	nativeInit(0xAE2206545888AE49);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS__PLAYSTATS_AMBIENT_MISSION_CRATE_CREATED(float p0, float p1, float p2) /*0xAFC7E5E075A96F46*/ {
	uint64_t val;
	nativeInit(0xAFC7E5E075A96F46);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0xB1D2BB1E1631F5B1() /*0xB1D2BB1E1631F5B1*/ {
	nativeInit(0xB1D2BB1E1631F5B1); return *(bool*)(nativeCall());
}
inline bool STATS_STAT_SET_INT(Hash statName, int value, bool save) /*0xB3271D7AB655B441*/ {
	uint64_t val;
	nativeInit(0xB3271D7AB655B441);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(int*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_0xB3DA2606774A8E2D() /*0xB3DA2606774A8E2D*/ {
	nativeInit(0xB3DA2606774A8E2D); return *(Any*)(nativeCall());
}
inline void STATS_0xB475F27C6A994D65() /*0xB475F27C6A994D65*/ {
	nativeInit(0xB475F27C6A994D65);
	nativeCall();
}
inline bool STATS_LEADERBOARDS_CACHE_DATA_ROW(Any* p0) /*0xB9BB18E2C40142ED*/ {
	uint64_t val;
	nativeInit(0xB9BB18E2C40142ED);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2) /*0xBA2C7DB0C129449A*/ {
	uint64_t val;
	nativeInit(0xBA2C7DB0C129449A);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash STATS__GET_NGSTAT_bool_HASH(int index, bool spStat, bool charStat, int character, const char* section) /*0xBA52FF538ED2BC71*/ {
	uint64_t val;
	nativeInit(0xBA52FF538ED2BC71);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	*(const char**)(&val) = section;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void STATS_PLAYSTATS_PROP_CHANGE(Any p0, Any p1, Any p2, Any p3) /*0xBA739D6D5A05D6E7*/ {
	uint64_t val;
	nativeInit(0xBA739D6D5A05D6E7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any STATS_STAT_SAVE_PENDING_OR_REQUESTED() /*0xBBB6AD006F1BBEA3*/ {
	nativeInit(0xBBB6AD006F1BBEA3); return *(Any*)(nativeCall());
}
inline void STATS_PLAYSTATS_MATCH_STARTED(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) /*0xBC80E22DED931E3D*/ {
	uint64_t val;
	nativeInit(0xBC80E22DED931E3D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0xBED9F5693F34ED17(Hash statName, int p1, float* outValue) /*0xBED9F5693F34ED17*/ {
	uint64_t val;
	nativeInit(0xBED9F5693F34ED17);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(float**)(&val) = outValue;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_LEADERBOARDS_GET_COLUMN_TYPE(Any p0, Any p1, Any p2) /*0xBF4FEF46DB7894D3*/ {
	uint64_t val;
	nativeInit(0xBF4FEF46DB7894D3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any STATS_0xC0E0D686DDFC6EAE() /*0xC0E0D686DDFC6EAE*/ {
	nativeInit(0xC0E0D686DDFC6EAE); return *(Any*)(nativeCall());
}
inline void STATS_0xC141B8917E0017EC() /*0xC141B8917E0017EC*/ {
	nativeInit(0xC141B8917E0017EC);
	nativeCall();
}
inline void STATS_PLAYSTATS_MISSION_STARTED(Any* p0, Any p1, Any p2, bool p3) /*0xC19A2925C34D2231*/ {
	uint64_t val;
	nativeInit(0xC19A2925C34D2231);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_CURRENT_POSIX_TIME(Hash statName, bool p1) /*0xC2F84B7F9C4D0C61*/ {
	uint64_t val;
	nativeInit(0xC2F84B7F9C4D0C61);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1) /*0xC30713A383BFBF0E*/ {
	uint64_t val;
	nativeInit(0xC30713A383BFBF0E);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STATS_0xC38DC1E90D22547C(Any* p0, Any* p1, Any* p2) /*0xC38DC1E90D22547C*/ {
	uint64_t val;
	nativeInit(0xC38DC1E90D22547C);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STATS_LEADERBOARDS_GET_COLUMN_ID(Any p0, Any p1, Any p2) /*0xC4B5467A1886EA7E*/ {
	uint64_t val;
	nativeInit(0xC4B5467A1886EA7E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Hash STATS__GET_TUPSTAT_bool_HASH(int index, bool spStat, bool charStat, int character) /*0xC4BB08EE7907471E*/ {
	uint64_t val;
	nativeInit(0xC4BB08EE7907471E);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void STATS_0xC5BE134EC7BA96A0(Any p0, Any p1, Any p2, Any p3, Any p4) /*0xC5BE134EC7BA96A0*/ {
	uint64_t val;
	nativeInit(0xC5BE134EC7BA96A0);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline Any STATS_0xC6E0E2616A7576BB() /*0xC6E0E2616A7576BB*/ {
	nativeInit(0xC6E0E2616A7576BB); return *(Any*)(nativeCall());
}
inline Any STATS_0xC70DDCE56D0D3A99() /*0xC70DDCE56D0D3A99*/ {
	nativeInit(0xC70DDCE56D0D3A99); return *(Any*)(nativeCall());
}
inline void STATS_PLAYSTATS_RANK_UP(Player player) /*0xC7F2DE41D102BFB4*/ {
	uint64_t val;
	nativeInit(0xC7F2DE41D102BFB4);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xC847B43F369AC0B5() /*0xC847B43F369AC0B5*/ {
	nativeInit(0xC847B43F369AC0B5);
	nativeCall();
}
inline void STATS_PLAYSTATS_MISSION_CHECKPOINT(Any* p0, Any p1, Any p2, Any p3) /*0xC900596A63978C1D*/ {
	uint64_t val;
	nativeInit(0xC900596A63978C1D);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STATS__LEADERBOARDS2_WRITE_DATA_EX(Any* p0, Any* p1) /*0xC980E62E33DF1D5C*/ {
	uint64_t val;
	nativeInit(0xC980E62E33DF1D5C);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xCB00196B31C39EB1(Any p0, Any p1, Any p2, Any p3) /*0xCB00196B31C39EB1*/ {
	uint64_t val;
	nativeInit(0xCB00196B31C39EB1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline Any STATS_0xCE5AA445ABA8DEE0(Any* p0) /*0xCE5AA445ABA8DEE0*/ {
	uint64_t val;
	nativeInit(0xCE5AA445ABA8DEE0);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void STATS_0xD1032E482629049E(bool p0) /*0xD1032E482629049E*/ {
	uint64_t val;
	nativeInit(0xD1032E482629049E);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Hash STATS__GET_TUPSTAT_INT_HASH(int index, bool spStat, bool charStat, int character) /*0xD16C2AD6B8E32854*/ {
	uint64_t val;
	nativeInit(0xD16C2AD6B8E32854);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = spStat;
	nativePush(val);
	*(bool*)(&val) = charStat;
	nativePush(val);
	*(int*)(&val) = character;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void STATS_LEADERBOARDS_CLEAR_CACHE_DATA() /*0xD4B02A6B476E1FDC*/ {
	nativeInit(0xD4B02A6B476E1FDC);
	nativeCall();
}
inline bool STATS_STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2) /*0xD7AE6C9C9C6AC54C*/ {
	uint64_t val;
	nativeInit(0xD7AE6C9C9C6AC54C);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(float**)(&val) = outValue;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xDAC073C7901F9E15(Any p0) /*0xDAC073C7901F9E15*/ {
	uint64_t val;
	nativeInit(0xDAC073C7901F9E15);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool STATS_STAT_SET_POS(Hash statName, float x, float y, float z, bool save) /*0xDB283FDE680FE72E*/ {
	uint64_t val;
	nativeInit(0xDB283FDE680FE72E);
	*(Hash*)(&val) = statName;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = save;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_PLAYSTATS_WEBSITE_VISITED(Hash scaleformHash, int p1) /*0xDDF24D535060F811*/ {
	uint64_t val;
	nativeInit(0xDDF24D535060F811);
	*(Hash*)(&val) = scaleformHash;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any STATS_0xDEAAF77EB3687E97(Any p0, Any* p1) /*0xDEAAF77EB3687E97*/ {
	uint64_t val;
	nativeInit(0xDEAAF77EB3687E97);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_STAT_SAVE(int p0, bool p1, int p2) /*0xE07BCA305B82D2FD*/ {
	uint64_t val;
	nativeInit(0xE07BCA305B82D2FD);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int STATS_STAT_GET_NUMBER_OF_DAYS(Hash statName) /*0xE0E854F5280FB769*/ {
	uint64_t val;
	nativeInit(0xE0E854F5280FB769);
	*(Hash*)(&val) = statName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any STATS_0xE496A53BA5F50A56(Any p0) /*0xE496A53BA5F50A56*/ {
	uint64_t val;
	nativeInit(0xE496A53BA5F50A56);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline const char* STATS_STAT_GET_STRING(Hash statHash, int p1) /*0xE50384ACC2C3DB74*/ {
	uint64_t val;
	nativeInit(0xE50384ACC2C3DB74);
	*(Hash*)(&val) = statHash;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool STATS_LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2) /*0xE662C8B759D08F3C*/ {
	uint64_t val;
	nativeInit(0xE662C8B759D08F3C);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STATS_0xE95C8A1875A02CA4(Any p0, Any p1, Any p2) /*0xE95C8A1875A02CA4*/ {
	uint64_t val;
	nativeInit(0xE95C8A1875A02CA4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Any STATS_STAT_CLEAR_SLOT_FOR_RELOAD(int statSlot) /*0xEB0A72181D4AA4AD*/ {
	uint64_t val;
	nativeInit(0xEB0A72181D4AA4AD);
	*(int*)(&val) = statSlot;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STATS_0xECB41AC6AB754401() /*0xECB41AC6AB754401*/ {
	nativeInit(0xECB41AC6AB754401); return *(bool*)(nativeCall());
}
inline Any STATS_LEADERBOARDS_GET_CACHE_TIME(Any p0) /*0xF04C1C27DA35F6C8*/ {
	uint64_t val;
	nativeInit(0xF04C1C27DA35F6C8);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void STATS_0xF1A1803D3476F215(int value) /*0xF1A1803D3476F215*/ {
	uint64_t val;
	nativeInit(0xF1A1803D3476F215);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool STATS_0xF1AE5DCDBFCA2721(Any* p0, Any* p1, Any* p2) /*0xF1AE5DCDBFCA2721*/ {
	uint64_t val;
	nativeInit(0xF1AE5DCDBFCA2721);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int STATS_STAT_GET_NUMBER_OF_HOURS(Hash statName) /*0xF2D4B2FE415AAFC3*/ {
	uint64_t val;
	nativeInit(0xF2D4B2FE415AAFC3);
	*(Hash*)(&val) = statName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void STATS_0xF434A10BA01C37D0(bool p0) /*0xF434A10BA01C37D0*/ {
	uint64_t val;
	nativeInit(0xF434A10BA01C37D0);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int STATS_0xF4D8E7AC2A27758C(int p0) /*0xF4D8E7AC2A27758C*/ {
	uint64_t val;
	nativeInit(0xF4D8E7AC2A27758C);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void STATS_0xF4FF020A08BC8863(Any p0, Any p1) /*0xF4FF020A08BC8863*/ {
	uint64_t val;
	nativeInit(0xF4FF020A08BC8863);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xF5BB8DAC426A52C0(Any* p0, Any* p1, Any* p2, Any* p3) /*0xF5BB8DAC426A52C0*/ {
	uint64_t val;
	nativeInit(0xF5BB8DAC426A52C0);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xF6792800AC95350D(Any p0) /*0xF6792800AC95350D*/ {
	uint64_t val;
	nativeInit(0xF6792800AC95350D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STATS_0xF8C54A461C3E11DC(Any* p0, Any* p1, Any* p2, Any* p3) /*0xF8C54A461C3E11DC*/ {
	uint64_t val;
	nativeInit(0xF8C54A461C3E11DC);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_NEW_LOAD_SCENE_LOADED() /*0x01B8247A7A8B9AD1*/ {
	nativeInit(0x01B8247A7A8B9AD1); return *(bool*)(nativeCall());
}
inline void STREAMING_REMOVE_CLIP_SET(const char* clipSet) /*0x01F73A131C18CD94*/ {
	uint64_t val;
	nativeInit(0x01F73A131C18CD94);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0x03F1A106BDA7DD3E() /*0x03F1A106BDA7DD3E*/ {
	nativeInit(0x03F1A106BDA7DD3E);
	nativeCall();
}
inline Any STREAMING_REQUEST_COLLISION_AT_COORD(float x, float y, float z) /*0x07503F7948F491A7*/ {
	uint64_t val;
	nativeInit(0x07503F7948F491A7);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any STREAMING_0x07C313F94746702C(Any p0) /*0x07C313F94746702C*/ {
	uint64_t val;
	nativeInit(0x07C313F94746702C);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void STREAMING_0x0811381EF5062FEC(Entity p0) /*0x0811381EF5062FEC*/ {
	uint64_t val;
	nativeInit(0x0811381EF5062FEC);
	*(Entity*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int STREAMING_SET_PLAYER_INVERTED_UP() /*0x08C2D6C52A3104BB*/ {
	nativeInit(0x08C2D6C52A3104BB); return *(int*)(nativeCall());
}
inline void STREAMING_END_SRL() /*0x0A41540E63C9EE17*/ {
	nativeInit(0x0A41540E63C9EE17);
	nativeCall();
}
inline Any STREAMING_0x0AD9710CEE2F590F(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) /*0x0AD9710CEE2F590F*/ {
	uint64_t val;
	nativeInit(0x0AD9710CEE2F590F);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STREAMING_0x0BC3144DEB678666(Hash modelHash) /*0x0BC3144DEB678666*/ {
	uint64_t val;
	nativeInit(0x0BC3144DEB678666);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STREAMING_0x0C15B0E443B2349D() /*0x0C15B0E443B2349D*/ {
	nativeInit(0x0C15B0E443B2349D); return *(Any*)(nativeCall());
}
inline void STREAMING_0x0FDE9DBFC0A6BC65(const char* p0) /*0x0FDE9DBFC0A6BC65*/ {
	uint64_t val;
	nativeInit(0x0FDE9DBFC0A6BC65);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_REMOVE_ANIM_SET(const char* animSet) /*0x16350528F93024B3*/ {
	uint64_t val;
	nativeInit(0x16350528F93024B3);
	*(const char**)(&val) = animSet;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SET_FOCUS_ENTITY(Entity entity) /*0x198F77705FA0931D*/ {
	uint64_t val;
	nativeInit(0x198F77705FA0931D);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_MODEL_A_VEHICLE(Hash model) /*0x19AAC8F07BFEC53E*/ {
	uint64_t val;
	nativeInit(0x19AAC8F07BFEC53E);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_0x1E9057A74FD73E23() /*0x1E9057A74FD73E23*/ {
	nativeInit(0x1E9057A74FD73E23);
	nativeCall();
}
inline void STREAMING_0x1EE7D8DF4425F053(Any p0) /*0x1EE7D8DF4425F053*/ {
	uint64_t val;
	nativeInit(0x1EE7D8DF4425F053);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any STREAMING_0x1F3F018BC3AFA77C(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8) /*0x1F3F018BC3AFA77C*/ {
	uint64_t val;
	nativeInit(0x1F3F018BC3AFA77C);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void STREAMING_0x20C6C7E4EB082A7F(bool p0) /*0x20C6C7E4EB082A7F*/ {
	uint64_t val;
	nativeInit(0x20C6C7E4EB082A7F);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int STREAMING_GET_PLAYER_SHORT_SWITCH_STATE() /*0x20F898A5D9782800*/ {
	nativeInit(0x20F898A5D9782800); return *(int*)(nativeCall());
}
inline bool STREAMING_NEW_LOAD_SCENE_START(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7) /*0x212A8D0D2BABFAC2*/ {
	uint64_t val;
	nativeInit(0x212A8D0D2BABFAC2);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any STREAMING_FORMAT_FOCUS_HEADING(float x, float y, float z, float rad, Any p4, Any p5) /*0x219C7B8D53E429FD*/ {
	uint64_t val;
	nativeInit(0x219C7B8D53E429FD);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = rad;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool STREAMING_HAS_COLLISION_FOR_MODEL_LOADED(Hash model) /*0x22CCA434E368F03A*/ {
	uint64_t val;
	nativeInit(0x22CCA434E368F03A);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STREAMING_DOES_ANIM_DICT_EXIST(const char* animDict) /*0x2DA49C3B79856961*/ {
	uint64_t val;
	nativeInit(0x2DA49C3B79856961);
	*(const char**)(&val) = animDict;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STREAMING_IS_ENTITY_FOCUS(Entity entity) /*0x2DDFF3FB9075D747*/ {
	uint64_t val;
	nativeInit(0x2DDFF3FB9075D747);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STREAMING_HAS_CLIP_SET_LOADED(const char* clipSet) /*0x318234F4F3738AF3*/ {
	uint64_t val;
	nativeInit(0x318234F4F3738AF3);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_CLEAR_FOCUS() /*0x31B73D1EA9F01DA2*/ {
	nativeInit(0x31B73D1EA9F01DA2);
	nativeCall();
}
inline bool STREAMING_IS_MODEL_IN_CDIMAGE(Hash model) /*0x35B9E0803292B641*/ {
	uint64_t val;
	nativeInit(0x35B9E0803292B641);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_PREFETCH_SRL(const char* srl) /*0x3D245789CE12982C*/ {
	uint64_t val;
	nativeInit(0x3D245789CE12982C);
	*(const char**)(&val) = srl;
	nativePush(val);
	nativeCall();
}
inline Any STREAMING_0x3D3D8B3BE5A83D35() /*0x3D3D8B3BE5A83D35*/ {
	nativeInit(0x3D3D8B3BE5A83D35); return *(Any*)(nativeCall());
}
inline int STREAMING_GET_NUMBER_OF_STREAMING_REQUESTS() /*0x4060057271CEBC89*/ {
	nativeInit(0x4060057271CEBC89); return *(int*)(nativeCall());
}
inline void STREAMING_0x40AEFD1A244741F2(bool p0) /*0x40AEFD1A244741F2*/ {
	uint64_t val;
	nativeInit(0x40AEFD1A244741F2);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_REQUEST_IPL(const char* iplName) /*0x41B4893843BBDB74*/ {
	uint64_t val;
	nativeInit(0x41B4893843BBDB74);
	*(const char**)(&val) = iplName;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_NETWORK_LOADING_SCENE() /*0x41CA5A33160EA4AB*/ {
	nativeInit(0x41CA5A33160EA4AB); return *(bool*)(nativeCall());
}
inline void STREAMING_SET_DITCH_POLICE_MODELS(bool toggle) /*0x42CBE54462D92634*/ {
	uint64_t val;
	nativeInit(0x42CBE54462D92634);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0x43D1680C6D19A8E9() /*0x43D1680C6D19A8E9*/ {
	nativeInit(0x43D1680C6D19A8E9);
	nativeCall();
}
inline void STREAMING_LOAD_SCENE(float x, float y, float z) /*0x4448EB75B4904BDB*/ {
	uint64_t val;
	nativeInit(0x4448EB75B4904BDB);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline int STREAMING_GET_PLAYER_SWITCH_STATE() /*0x470555300D10B2A5*/ {
	nativeInit(0x470555300D10B2A5); return *(int*)(nativeCall());
}
inline void STREAMING_0x472397322E92A856() /*0x472397322E92A856*/ {
	nativeInit(0x472397322E92A856);
	nativeCall();
}
inline void STREAMING_0x4E52E752C76E7E7A(Any p0) /*0x4E52E752C76E7E7A*/ {
	uint64_t val;
	nativeInit(0x4E52E752C76E7E7A);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any STREAMING_0x5068F488DDB54DD8() /*0x5068F488DDB54DD8*/ {
	nativeInit(0x5068F488DDB54DD8); return *(Any*)(nativeCall());
}
inline Any STREAMING_0x5B48A06DD0E792A5() /*0x5B48A06DD0E792A5*/ {
	nativeInit(0x5B48A06DD0E792A5); return *(Any*)(nativeCall());
}
inline Any STREAMING_DESTROY_PLAYER_IN_PAUSE_MENU() /*0x5B74EA8CFD5E3E7E*/ {
	nativeInit(0x5B74EA8CFD5E3E7E); return *(Any*)(nativeCall());
}
inline void STREAMING_0x5F2013F8BC24EE69(Any* p0) /*0x5F2013F8BC24EE69*/ {
	uint64_t val;
	nativeInit(0x5F2013F8BC24EE69);
	*(Any**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING__REMOVE_NAMED_PTFX_ASSET(const char* assetName) /*0x5F61EBBE1A00F96D*/ {
	uint64_t val;
	nativeInit(0x5F61EBBE1A00F96D);
	*(const char**)(&val) = assetName;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0x63EB2B972A218CAC() /*0x63EB2B972A218CAC*/ {
	nativeInit(0x63EB2B972A218CAC);
	nativeCall();
}
inline void STREAMING_NETWORK_STOP_LOAD_SCENE() /*0x64E630FAF5F60F44*/ {
	nativeInit(0x64E630FAF5F60F44);
	nativeCall();
}
inline void STREAMING_SET_STREAMING(bool toggle) /*0x6E0C692677008888*/ {
	uint64_t val;
	nativeInit(0x6E0C692677008888);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_REQUEST_ANIM_SET(const char* animSet) /*0x6EA47DAE7FAD0EED*/ {
	uint64_t val;
	nativeInit(0x6EA47DAE7FAD0EED);
	*(const char**)(&val) = animSet;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SET_GAME_PAUSES_FOR_STREAMING(bool toggle) /*0x717CD6E6FAEBBEDC*/ {
	uint64_t val;
	nativeInit(0x717CD6E6FAEBBEDC);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_0x71E7B2E657449AAD() /*0x71E7B2E657449AAD*/ {
	nativeInit(0x71E7B2E657449AAD); return *(bool*)(nativeCall());
}
inline void STREAMING_0x74DE2E8739086740() /*0x74DE2E8739086740*/ {
	nativeInit(0x74DE2E8739086740);
	nativeCall();
}
inline void STREAMING_SET_REDUCE_PED_MODEL_BUDGET(bool toggle) /*0x77B5F9A36BF96710*/ {
	uint64_t val;
	nativeInit(0x77B5F9A36BF96710);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int STREAMING_0x78C0D93253149435() /*0x78C0D93253149435*/ {
	nativeInit(0x78C0D93253149435); return *(int*)(nativeCall());
}
inline Any STREAMING_0x7D41E9D2D17C5B2D(Any p0) /*0x7D41E9D2D17C5B2D*/ {
	uint64_t val;
	nativeInit(0x7D41E9D2D17C5B2D);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void STREAMING_SET_REDUCE_VEHICLE_MODEL_BUDGET(bool toggle) /*0x80C527893080CCF3*/ {
	uint64_t val;
	nativeInit(0x80C527893080CCF3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_HAS_NAMED_PTFX_ASSET_LOADED(const char* assetName) /*0x8702416E512EC454*/ {
	uint64_t val;
	nativeInit(0x8702416E512EC454);
	*(const char**)(&val) = assetName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool STREAMING_IS_IPL_ACTIVE(const char* iplName) /*0x88A741E44A2B3495*/ {
	uint64_t val;
	nativeInit(0x88A741E44A2B3495);
	*(const char**)(&val) = iplName;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_REMOVE_PTFX_ASSET() /*0x88C6814073DD4A73*/ {
	nativeInit(0x88C6814073DD4A73);
	nativeCall();
}
inline void STREAMING__REQUEST_INTERIOR_ROOM_BY_NAME(int interiorID, const char* roomName) /*0x8A7A40100EDFEC58*/ {
	uint64_t val;
	nativeInit(0x8A7A40100EDFEC58);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(const char**)(&val) = roomName;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SET_PED_POPULATION_BUDGET(int budget) /*0x8C95333CFC3340F3*/ {
	uint64_t val;
	nativeInit(0x8C95333CFC3340F3);
	*(int*)(&val) = budget;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0x8E2A065ABDAE6994() /*0x8E2A065ABDAE6994*/ {
	nativeInit(0x8E2A065ABDAE6994);
	nativeCall();
}
inline void STREAMING_REQUEST_COLLISION_FOR_MODEL(Hash model) /*0x923CB32A3B874FCB*/ {
	uint64_t val;
	nativeInit(0x923CB32A3B874FCB);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_0x933BBEEB8C61B5F4() /*0x933BBEEB8C61B5F4*/ {
	nativeInit(0x933BBEEB8C61B5F4); return *(bool*)(nativeCall());
}
inline Any STREAMING_REQUEST_PTFX_ASSET() /*0x944955FB2A3935C8*/ {
	nativeInit(0x944955FB2A3935C8); return *(Any*)(nativeCall());
}
inline void STREAMING_0x95A7DABDDBB78AE7(Any* p0, Any* p1) /*0x95A7DABDDBB78AE7*/ {
	uint64_t val;
	nativeInit(0x95A7DABDDBB78AE7);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_STOP_PLAYER_SWITCH() /*0x95C0A5BBDC189AA1*/ {
	nativeInit(0x95C0A5BBDC189AA1);
	nativeCall();
}
inline void STREAMING_REQUEST_MODEL(Hash model) /*0x963D27A58DF860AC*/ {
	uint64_t val;
	nativeInit(0x963D27A58DF860AC);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_HAS_MODEL_LOADED(Hash model) /*0x98A4EB5D89A0C952*/ {
	uint64_t val;
	nativeInit(0x98A4EB5D89A0C952);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_BEGIN_SRL() /*0x9BADDC94EF83B823*/ {
	nativeInit(0x9BADDC94EF83B823);
	nativeCall();
}
inline void STREAMING_REQUEST_MENU_PED_MODEL(Player model) /*0xA0261AEF7ACFC51E*/ {
	uint64_t val;
	nativeInit(0xA0261AEF7ACFC51E);
	*(Player*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_NEW_LOAD_SCENE_ACTIVE() /*0xA41A05B6CB741B85*/ {
	nativeInit(0xA41A05B6CB741B85); return *(bool*)(nativeCall());
}
inline void STREAMING_SET_SRL_TIME(float p0) /*0xA74A541C6884E7B8*/ {
	uint64_t val;
	nativeInit(0xA74A541C6884E7B8);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xA76359FC80B2438E(float p0) /*0xA76359FC80B2438E*/ {
	uint64_t val;
	nativeInit(0xA76359FC80B2438E);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING__SWITCH_OUT_PLAYER(Ped ped, int flags, int switchType) /*0xAAB3200ED59016BC*/ {
	uint64_t val;
	nativeInit(0xAAB3200ED59016BC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(int*)(&val) = switchType;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_NEW_LOAD_SCENE_START_SPHERE(float x, float y, float z, float radius, Any p4) /*0xACCFB4ACF53551B0*/ {
	uint64_t val;
	nativeInit(0xACCFB4ACF53551B0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_0xAD5FDF34B81BFE79() /*0xAD5FDF34B81BFE79*/ {
	nativeInit(0xAD5FDF34B81BFE79);
	nativeCall();
}
inline void STREAMING_0xAF12610C644A35C9(const char* p0, bool p1) /*0xAF12610C644A35C9*/ {
	uint64_t val;
	nativeInit(0xAF12610C644A35C9);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int STREAMING_GET_PLAYER_SWITCH_TYPE() /*0xB3C94A90D9FC9E62*/ {
	nativeInit(0xB3C94A90D9FC9E62); return *(int*)(nativeCall());
}
inline void STREAMING__LOAD_MISSION_CREATOR_DATA() /*0xB5A4DB34FE89B88A*/ {
	nativeInit(0xB5A4DB34FE89B88A);
	nativeCall();
}
inline int STREAMING_GET_IDEAL_PLAYER_SWITCH_TYPE(float x1, float y1, float z1, float x2, float y2, float z2) /*0xB5D7B26B45720E05*/ {
	uint64_t val;
	nativeInit(0xB5D7B26B45720E05);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void STREAMING_REQUEST_NAMED_PTFX_ASSET(const char* assetName) /*0xB80D8756B4668AB6*/ {
	uint64_t val;
	nativeInit(0xB80D8756B4668AB6);
	*(const char**)(&val) = assetName;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SET_HD_AREA(float x, float y, float z, float radius) /*0xB85F26619073E775*/ {
	uint64_t val;
	nativeInit(0xB85F26619073E775);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline void STREAMING__SET_FOCUS_AREA(float x, float y, float z, float offsetX, float offsetY, float offsetZ) /*0xBB7454BAFF08FE25*/ {
	uint64_t val;
	nativeInit(0xBB7454BAFF08FE25);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	nativeCall();
}
inline Any STREAMING_0xBC9823AB80A3DCAC() /*0xBC9823AB80A3DCAC*/ {
	nativeInit(0xBC9823AB80A3DCAC); return *(Any*)(nativeCall());
}
inline void STREAMING_0xBD605B8E0E18B3BB() /*0xBD605B8E0E18B3BB*/ {
	nativeInit(0xBD605B8E0E18B3BB);
	nativeCall();
}
inline void STREAMING_LOAD_ALL_OBJECTS_NOW() /*0xBD6E84632DD4CB3F*/ {
	nativeInit(0xBD6E84632DD4CB3F);
	nativeCall();
}
inline void STREAMING_0xBEB2D9A1D9A8F55A(Any p0, Any p1, Any p2, Any p3) /*0xBEB2D9A1D9A8F55A*/ {
	uint64_t val;
	nativeInit(0xBEB2D9A1D9A8F55A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xBED8CA5FF5E04113(float p0, float p1, float p2, float p3) /*0xBED8CA5FF5E04113*/ {
	uint64_t val;
	nativeInit(0xBED8CA5FF5E04113);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_MODEL_VALID(Hash model) /*0xC0296A2EDF545E92*/ {
	uint64_t val;
	nativeInit(0xC0296A2EDF545E92);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_NEW_LOAD_SCENE_STOP() /*0xC197616D221FF4A4*/ {
	nativeInit(0xC197616D221FF4A4);
	nativeCall();
}
inline void STREAMING_SET_PLAYER_SWITCH_OUTRO(float camCoordX, float camCoordY, float camCoordZ, float camRotX, float camRotY, float camRotZ, float camFOV, float camFarClip, int p8) /*0xC208B673CE446B61*/ {
	uint64_t val;
	nativeInit(0xC208B673CE446B61);
	*(float*)(&val) = camCoordX;
	nativePush(val);
	*(float*)(&val) = camCoordY;
	nativePush(val);
	*(float*)(&val) = camCoordZ;
	nativePush(val);
	*(float*)(&val) = camRotX;
	nativePush(val);
	*(float*)(&val) = camRotY;
	nativePush(val);
	*(float*)(&val) = camRotZ;
	nativePush(val);
	*(float*)(&val) = camFOV;
	nativePush(val);
	*(float*)(&val) = camFarClip;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline Vector3* STREAMING_NETWORK_UPDATE_LOAD_SCENE() /*0xC4582015556D1C46*/ {
	nativeInit(0xC4582015556D1C46); return *(Vector3**)(nativeCall());
}
inline bool STREAMING_HAS_ANIM_SET_LOADED(const char* animSet) /*0xC4EA073D86FB29B0*/ {
	uint64_t val;
	nativeInit(0xC4EA073D86FB29B0);
	*(const char**)(&val) = animSet;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_REQUEST_ADDITIONAL_COLLISION_AT_COORD(float x, float y, float z) /*0xC9156DC11411A9EA*/ {
	uint64_t val;
	nativeInit(0xC9156DC11411A9EA);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_HAS_PTFX_ASSET_LOADED() /*0xCA7D9B86ECA7481B*/ {
	nativeInit(0xCA7D9B86ECA7481B); return *(bool*)(nativeCall());
}
inline void STREAMING_SET_VEHICLE_POPULATION_BUDGET(int budget) /*0xCB9E1EB3BE2AF4E9*/ {
	uint64_t val;
	nativeInit(0xCB9E1EB3BE2AF4E9);
	*(int*)(&val) = budget;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SHUTDOWN_CREATOR_BUDGET() /*0xCCE26000E9A6FAD7*/ {
	nativeInit(0xCCE26000E9A6FAD7);
	nativeCall();
}
inline void STREAMING_CLEAR_HD_AREA() /*0xCE58B1CFB9290813*/ {
	nativeInit(0xCE58B1CFB9290813);
	nativeCall();
}
inline bool STREAMING_IS_SRL_LOADED() /*0xD0263801A4C5B0BB*/ {
	nativeInit(0xD0263801A4C5B0BB); return *(bool*)(nativeCall());
}
inline bool STREAMING_HAS_ANIM_DICT_LOADED(const char* animDict) /*0xD031A9162D01088C*/ {
	uint64_t val;
	nativeInit(0xD031A9162D01088C);
	*(const char**)(&val) = animDict;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void STREAMING_REQUEST_CLIP_SET(const char* clipSet) /*0xD2A71E1A77418A49*/ {
	uint64_t val;
	nativeInit(0xD2A71E1A77418A49);
	*(const char**)(&val) = clipSet;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_REQUEST_ANIM_DICT(const char* animDict) /*0xD3BD40951412FEF6*/ {
	uint64_t val;
	nativeInit(0xD3BD40951412FEF6);
	*(const char**)(&val) = animDict;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xD4793DFF3AF2ABCD() /*0xD4793DFF3AF2ABCD*/ {
	nativeInit(0xD4793DFF3AF2ABCD);
	nativeCall();
}
inline void STREAMING__SWITCH_IN_PLAYER(Ped ped) /*0xD8295AF639FD9CB8*/ {
	uint64_t val;
	nativeInit(0xD8295AF639FD9CB8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool STREAMING_IS_PLAYER_SWITCH_IN_PROGRESS() /*0xD9D2CFFF49FAB35F*/ {
	nativeInit(0xD9D2CFFF49FAB35F); return *(bool*)(nativeCall());
}
inline Any STREAMING_0xDFA80CB25D0A19B3() /*0xDFA80CB25D0A19B3*/ {
	nativeInit(0xDFA80CB25D0A19B3); return *(Any*)(nativeCall());
}
inline void STREAMING_SET_INTERIOR_ACTIVE(int interiorID, bool toggle) /*0xE37B76C387BE28ED*/ {
	uint64_t val;
	nativeInit(0xE37B76C387BE28ED);
	*(int*)(&val) = interiorID;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_SET_MODEL_AS_NO_LONGER_NEEDED(Hash model) /*0xE532F5D78798DAAB*/ {
	uint64_t val;
	nativeInit(0xE532F5D78798DAAB);
	*(Hash*)(&val) = model;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_REMOVE_IPL(const char* iplName) /*0xEE6C5AD3ECE0A82D*/ {
	uint64_t val;
	nativeInit(0xEE6C5AD3ECE0A82D);
	*(const char**)(&val) = iplName;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xEF39EE20C537E98C(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) /*0xEF39EE20C537E98C*/ {
	uint64_t val;
	nativeInit(0xEF39EE20C537E98C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xF086AD9354FAC3A3(Any p0) /*0xF086AD9354FAC3A3*/ {
	uint64_t val;
	nativeInit(0xF086AD9354FAC3A3);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xF4A0DADB70F57FA6() /*0xF4A0DADB70F57FA6*/ {
	nativeInit(0xF4A0DADB70F57FA6);
	nativeCall();
}
inline void STREAMING_REMOVE_ANIM_DICT(const char* animDict) /*0xF66A602F829E2A06*/ {
	uint64_t val;
	nativeInit(0xF66A602F829E2A06);
	*(const char**)(&val) = animDict;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_0xF8155A7F03DDFC8E(Any p0) /*0xF8155A7F03DDFC8E*/ {
	uint64_t val;
	nativeInit(0xF8155A7F03DDFC8E);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void STREAMING_START_PLAYER_SWITCH(Ped from, Ped to, int flags, int switchType) /*0xFAA23F2CBA159D67*/ {
	uint64_t val;
	nativeInit(0xFAA23F2CBA159D67);
	*(Ped*)(&val) = from;
	nativePush(val);
	*(Ped*)(&val) = to;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(int*)(&val) = switchType;
	nativePush(val);
	nativeCall();
}
inline Any STREAMING_0xFB199266061F820A() /*0xFB199266061F820A*/ {
	nativeInit(0xFB199266061F820A); return *(Any*)(nativeCall());
}
inline float SYSTEM_TIMESTEP() /*0x0000000050597EE2*/ {
	nativeInit(0x0000000050597EE2); return *(float*)(nativeCall());
}
inline float SYSTEM_SIN(float value) /*0x0BADBFA3B172435F*/ {
	uint64_t val;
	nativeInit(0x0BADBFA3B172435F);
	*(float*)(&val) = value;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int SYSTEM_CEIL(float value) /*0x11E019C8F43ACC8A*/ {
	uint64_t val;
	nativeInit(0x11E019C8F43ACC8A);
	*(float*)(&val) = value;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline float SYSTEM_VDIST(float x1, float y1, float z1, float x2, float y2, float z2) /*0x2A488C176D52CCA5*/ {
	uint64_t val;
	nativeInit(0x2A488C176D52CCA5);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void SYSTEM_WAIT(int ms) /*0x4EDE34FBADD967A6*/ {
	uint64_t val;
	nativeInit(0x4EDE34FBADD967A6);
	*(int*)(&val) = ms;
	nativePush(val);
	nativeCall();
}
inline void SYSTEM_SETTIMERB(int value) /*0x5AE11BC36633DE4E*/ {
	uint64_t val;
	nativeInit(0x5AE11BC36633DE4E);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline float SYSTEM_VMAG(float x, float y, float z) /*0x652D2EEEF1D3E62C*/ {
	uint64_t val;
	nativeInit(0x652D2EEEF1D3E62C);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float SYSTEM_SQRT(float value) /*0x71D93B57D07F9804*/ {
	uint64_t val;
	nativeInit(0x71D93B57D07F9804);
	*(float*)(&val) = value;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int SYSTEM_TIMERA() /*0x83666F9FB8FEBD4B*/ {
	nativeInit(0x83666F9FB8FEBD4B); return *(int*)(nativeCall());
}
inline int SYSTEM_SHIFT_RIGHT(int value, int bitShift) /*0x97EF1E5BCE9DC075*/ {
	uint64_t val;
	nativeInit(0x97EF1E5BCE9DC075);
	*(int*)(&val) = value;
	nativePush(val);
	*(int*)(&val) = bitShift;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline float SYSTEM_VMAG2(float x, float y, float z) /*0xA8CEACB4F35AE058*/ {
	uint64_t val;
	nativeInit(0xA8CEACB4F35AE058);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float SYSTEM_VDIST2(float x1, float y1, float z1, float x2, float y2, float z2) /*0xB7A628320EFF8E47*/ {
	uint64_t val;
	nativeInit(0xB7A628320EFF8E47);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int SYSTEM_START_NEW_SCRIPT_WITH_ARGS(const char* scriptName, Any* args, int argCount, int stackSize) /*0xB8BA7F44DF1575E1*/ {
	uint64_t val;
	nativeInit(0xB8BA7F44DF1575E1);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	*(Any**)(&val) = args;
	nativePush(val);
	*(int*)(&val) = argCount;
	nativePush(val);
	*(int*)(&val) = stackSize;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline float SYSTEM_TO_FLOAT(int value) /*0xBBDA792448DB5A89*/ {
	uint64_t val;
	nativeInit(0xBBDA792448DB5A89);
	*(int*)(&val) = value;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void SYSTEM_SETTIMERA(int value) /*0xC1B1E9A034A63A62*/ {
	uint64_t val;
	nativeInit(0xC1B1E9A034A63A62);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int SYSTEM_START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize) /*0xC4BB298BD441BE78*/ {
	uint64_t val;
	nativeInit(0xC4BB298BD441BE78);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	*(Any**)(&val) = args;
	nativePush(val);
	*(int*)(&val) = argCount;
	nativePush(val);
	*(int*)(&val) = stackSize;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SYSTEM_TIMERB() /*0xC9D9444186B5A374*/ {
	nativeInit(0xC9D9444186B5A374); return *(int*)(nativeCall());
}
inline float SYSTEM_COS(float value) /*0xD0FFB162F40A139C*/ {
	uint64_t val;
	nativeInit(0xD0FFB162F40A139C);
	*(float*)(&val) = value;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float SYSTEM_POW(float base, float exponent) /*0xE3621CC40F31FE2E*/ {
	uint64_t val;
	nativeInit(0xE3621CC40F31FE2E);
	*(float*)(&val) = base;
	nativePush(val);
	*(float*)(&val) = exponent;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline int SYSTEM_START_NEW_SCRIPT(const char* scriptName, int stackSize) /*0xE81651AD79516E48*/ {
	uint64_t val;
	nativeInit(0xE81651AD79516E48);
	*(const char**)(&val) = scriptName;
	nativePush(val);
	*(int*)(&val) = stackSize;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SYSTEM_START_NEW_SCRIPT_WITH_NAME_HASH(Hash scriptHash, int stackSize) /*0xEB1C67C3A5333A92*/ {
	uint64_t val;
	nativeInit(0xEB1C67C3A5333A92);
	*(Hash*)(&val) = scriptHash;
	nativePush(val);
	*(int*)(&val) = stackSize;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SYSTEM_SHIFT_LEFT(int value, int bitShift) /*0xEDD95A39E5544DE8*/ {
	uint64_t val;
	nativeInit(0xEDD95A39E5544DE8);
	*(int*)(&val) = value;
	nativePush(val);
	*(int*)(&val) = bitShift;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SYSTEM_ROUND(float value) /*0xF2DB717A73826179*/ {
	uint64_t val;
	nativeInit(0xF2DB717A73826179);
	*(float*)(&val) = value;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int SYSTEM_FLOOR(float value) /*0xF34EE736CF047844*/ {
	uint64_t val;
	nativeInit(0xF34EE736CF047844);
	*(float*)(&val) = value;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int TIME_GET_CLOCK_MINUTES() /*0x13D2B8ADD79640F2*/ {
	nativeInit(0x13D2B8ADD79640F2); return *(int*)(nativeCall());
}
inline int TIME_GET_CLOCK_HOURS() /*0x25223CA6B4D20B7F*/ {
	nativeInit(0x25223CA6B4D20B7F); return *(int*)(nativeCall());
}
inline int TIME_GET_MILLISECONDS_PER_GAME_MINUTE() /*0x2F8B4D1C595B11DB*/ {
	nativeInit(0x2F8B4D1C595B11DB); return *(int*)(nativeCall());
}
inline int TIME_GET_CLOCK_DAY_OF_MONTH() /*0x3D10BC92A4DB1D35*/ {
	nativeInit(0x3D10BC92A4DB1D35); return *(int*)(nativeCall());
}
inline void TIME_PAUSE_CLOCK(bool toggle) /*0x4055E40BD2DBEC1D*/ {
	uint64_t val;
	nativeInit(0x4055E40BD2DBEC1D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void TIME_SET_CLOCK_TIME(int hour, int minute, int second) /*0x47C3B5848C3E45D8*/ {
	uint64_t val;
	nativeInit(0x47C3B5848C3E45D8);
	*(int*)(&val) = hour;
	nativePush(val);
	*(int*)(&val) = minute;
	nativePush(val);
	*(int*)(&val) = second;
	nativePush(val);
	nativeCall();
}
inline int TIME_GET_CLOCK_SECONDS() /*0x494E97C2EF27C470*/ {
	nativeInit(0x494E97C2EF27C470); return *(int*)(nativeCall());
}
inline void TIME_GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) /*0x50C7A99057A69748*/ {
	uint64_t val;
	nativeInit(0x50C7A99057A69748);
	*(int**)(&val) = year;
	nativePush(val);
	*(int**)(&val) = month;
	nativePush(val);
	*(int**)(&val) = day;
	nativePush(val);
	*(int**)(&val) = hour;
	nativePush(val);
	*(int**)(&val) = minute;
	nativePush(val);
	*(int**)(&val) = second;
	nativePush(val);
	nativeCall();
}
inline void TIME__GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) /*0x8117E09A19EEF4D3*/ {
	uint64_t val;
	nativeInit(0x8117E09A19EEF4D3);
	*(int**)(&val) = year;
	nativePush(val);
	*(int**)(&val) = month;
	nativePush(val);
	*(int**)(&val) = day;
	nativePush(val);
	*(int**)(&val) = hour;
	nativePush(val);
	*(int**)(&val) = minute;
	nativePush(val);
	*(int**)(&val) = second;
	nativePush(val);
	nativeCall();
}
inline int TIME_GET_CLOCK_YEAR() /*0x961777E64BDAF717*/ {
	nativeInit(0x961777E64BDAF717); return *(int*)(nativeCall());
}
inline void TIME_SET_CLOCK_DATE(int day, int month, int year) /*0xB096419DF0D06CE7*/ {
	uint64_t val;
	nativeInit(0xB096419DF0D06CE7);
	*(int*)(&val) = day;
	nativePush(val);
	*(int*)(&val) = month;
	nativePush(val);
	*(int*)(&val) = year;
	nativePush(val);
	nativeCall();
}
inline int TIME_GET_CLOCK_MONTH() /*0xBBC72712E80257A1*/ {
	nativeInit(0xBBC72712E80257A1); return *(int*)(nativeCall());
}
inline void TIME_ADVANCE_CLOCK_TIME_TO(int hour, int minute, int second) /*0xC8CA9670B9D83B3B*/ {
	uint64_t val;
	nativeInit(0xC8CA9670B9D83B3B);
	*(int*)(&val) = hour;
	nativePush(val);
	*(int*)(&val) = minute;
	nativePush(val);
	*(int*)(&val) = second;
	nativePush(val);
	nativeCall();
}
inline void TIME_ADD_TO_CLOCK_TIME(int hours, int minutes, int seconds) /*0xD716F30D8C8980E2*/ {
	uint64_t val;
	nativeInit(0xD716F30D8C8980E2);
	*(int*)(&val) = hours;
	nativePush(val);
	*(int*)(&val) = minutes;
	nativePush(val);
	*(int*)(&val) = seconds;
	nativePush(val);
	nativeCall();
}
inline int TIME_GET_CLOCK_DAY_OF_WEEK() /*0xD972E4BD7AEB235F*/ {
	nativeInit(0xD972E4BD7AEB235F); return *(int*)(nativeCall());
}
inline void TIME_GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) /*0xDA488F299A5B164E*/ {
	uint64_t val;
	nativeInit(0xDA488F299A5B164E);
	*(int**)(&val) = year;
	nativePush(val);
	*(int**)(&val) = month;
	nativePush(val);
	*(int**)(&val) = day;
	nativePush(val);
	*(int**)(&val) = hour;
	nativePush(val);
	*(int**)(&val) = minute;
	nativePush(val);
	*(int**)(&val) = second;
	nativePush(val);
	nativeCall();
}
inline int UI__GET_ACTIVE_WEBSITE_ID() /*0x01A358D9128B7A86*/ {
	nativeInit(0x01A358D9128B7A86); return *(int*)(nativeCall());
}
inline bool UI_HAS_ADDITIONAL_TEXT_LOADED(int slot) /*0x02245FE4BED318B8*/ {
	uint64_t val;
	nativeInit(0x02245FE4BED318B8);
	*(int*)(&val) = slot;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_FLASH_ABILITY_BAR(bool toggle) /*0x02CFBA0C9E9275CE*/ {
	uint64_t val;
	nativeInit(0x02CFBA0C9E9275CE);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_PROPORTIONAL(bool p0) /*0x038C1F517D7FDCF8*/ {
	uint64_t val;
	nativeInit(0x038C1F517D7FDCF8);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_INTEGER(int value) /*0x03B504CF259931BC*/ {
	uint64_t val;
	nativeInit(0x03B504CF259931BC);
	*(int*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_COLOUR(Blip blip, int color) /*0x03D7FB09E75D6B7E*/ {
	uint64_t val;
	nativeInit(0x03D7FB09E75D6B7E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = color;
	nativePush(val);
	nativeCall();
}
inline void UI_0x04655F9D075D0AE5(bool p0) /*0x04655F9D075D0AE5*/ {
	uint64_t val;
	nativeInit(0x04655F9D075D0AE5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x052991E59076E4E4(Hash p0, Any* p1) /*0x052991E59076E4E4*/ {
	uint64_t val;
	nativeInit(0x052991E59076E4E4);
	*(Hash*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x06A320535F5F0248(Any p0) /*0x06A320535F5F0248*/ {
	uint64_t val;
	nativeInit(0x06A320535F5F0248);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_PLAYER_CASH_CHANGE(int cash, int bank) /*0x0772DF77852C2E30*/ {
	uint64_t val;
	nativeInit(0x0772DF77852C2E30);
	*(int*)(&val) = cash;
	nativePush(val);
	*(int*)(&val) = bank;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_SCALE(float unk, float scale) /*0x07C837F9A01C34C9*/ {
	uint64_t val;
	nativeInit(0x07C837F9A01C34C9);
	*(float*)(&val) = unk;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	nativeCall();
}
inline void UI_0x0923DBF87DFF735E(float x, float y, float z) /*0x0923DBF87DFF735E*/ {
	uint64_t val;
	nativeInit(0x0923DBF87DFF735E);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_RADAR_ZOOM(int zoomLevel) /*0x096EF57A0C999BBA*/ {
	uint64_t val;
	nativeInit(0x096EF57A0C999BBA);
	*(int*)(&val) = zoomLevel;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x09C0403ED9A751C2(Any p0) /*0x09C0403ED9A751C2*/ {
	uint64_t val;
	nativeInit(0x09C0403ED9A751C2);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(const char* labelName) /*0x0A24DA3A41B718F5*/ {
	uint64_t val;
	nativeInit(0x0A24DA3A41B718F5);
	*(const char**)(&val) = labelName;
	nativePush(val);
	nativeCall();
}
inline void UI__BLOCK_WEAPON_WHEEL_THIS_FRAME() /*0x0AFC4AF510774B47*/ {
	nativeInit(0x0AFC4AF510774B47);
	nativeCall();
}
inline void UI_SHOW_HUD_COMPONENT_THIS_FRAME(int id) /*0x0B4DF1FA60C0E664*/ {
	uint64_t val;
	nativeInit(0x0B4DF1FA60C0E664);
	*(int*)(&val) = id;
	nativePush(val);
	nativeCall();
}
inline void UI__IS_AI_BLIP_ALWAYS_SHOWN(Ped ped, bool flag) /*0x0C4BBF625CA98C4E*/ {
	uint64_t val;
	nativeInit(0x0C4BBF625CA98C4E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x0C5A80A9E096D529(Any p0, const char* text, Any p2, Any p3, Any p4, Any p5) /*0x0C5A80A9E096D529*/ {
	uint64_t val;
	nativeInit(0x0C5A80A9E096D529);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = text;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x0CF54F20DE43879C(Any p0) /*0x0CF54F20DE43879C*/ {
	uint64_t val;
	nativeInit(0x0CF54F20DE43879C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_FORMATTED_INTEGER(int value, bool commaSeparated) /*0x0E4C749FF9DE9CC4*/ {
	uint64_t val;
	nativeInit(0x0E4C749FF9DE9CC4);
	*(int*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = commaSeparated;
	nativePush(val);
	nativeCall();
}
inline void UI_RESTART_FRONTEND_MENU(Hash menuHash, int p1) /*0x10706DC6AD2D49C0*/ {
	uint64_t val;
	nativeInit(0x10706DC6AD2D49C0);
	*(Hash*)(&val) = menuHash;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UI_END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(int p0) /*0x10BDDBFC529428DD*/ {
	uint64_t val;
	nativeInit(0x10BDDBFC529428DD);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__REMOVE_LOADING_PROMPT() /*0x10D373323E5B9C0D*/ {
	nativeInit(0x10D373323E5B9C0D);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_TIME(int timestamp, int flags) /*0x1115F16B8AB9E8BF*/ {
	uint64_t val;
	nativeInit(0x1115F16B8AB9E8BF);
	*(int*)(&val) = timestamp;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x1121BFA1A1A522A8() /*0x1121BFA1A1A522A8*/ {
	nativeInit(0x1121BFA1A1A522A8); return *(Any*)(nativeCall());
}
inline bool UI_IS_NAMED_RENDERTARGET_LINKED(Hash hash) /*0x113750538FA31298*/ {
	uint64_t val;
	nativeInit(0x113750538FA31298);
	*(Hash*)(&val) = hash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x1185A8087587322C(bool p0) /*0x1185A8087587322C*/ {
	uint64_t val;
	nativeInit(0x1185A8087587322C);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_RESET_RETICULE_VALUES() /*0x12782CE0A636E9F0*/ {
	nativeInit(0x12782CE0A636E9F0);
	nativeCall();
}
inline void UI_LOCK_MINIMAP_POSITION(float x, float y) /*0x1279E861A329E73F*/ {
	uint64_t val;
	nativeInit(0x1279E861A329E73F);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_NAME_TO_PLAYER_NAME(Blip blip, Player player) /*0x127DE7B20C60A6A3*/ {
	uint64_t val;
	nativeInit(0x127DE7B20C60A6A3);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_SHOW_CONE(Blip blip, bool toggle) /*0x13127EC3665E8EE1*/ {
	uint64_t val;
	nativeInit(0x13127EC3665E8EE1);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_CLAN_INVITE(bool p0, bool p1, int* p2, int p3, bool isLeader, bool unk0, int clanDesc, const char* playerName, int R, int G, int B) /*0x137BC35589E34E1E*/ {
	uint64_t val;
	nativeInit(0x137BC35589E34E1E);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int**)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = isLeader;
	nativePush(val);
	*(bool*)(&val) = unk0;
	nativePush(val);
	*(int*)(&val) = clanDesc;
	nativePush(val);
	*(const char**)(&val) = playerName;
	nativePush(val);
	*(int*)(&val) = R;
	nativePush(val);
	*(int*)(&val) = G;
	nativePush(val);
	*(int*)(&val) = B;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any UI_0x13C4B962653A5280() /*0x13C4B962653A5280*/ {
	nativeInit(0x13C4B962653A5280); return *(Any*)(nativeCall());
}
inline void UI_0x14621BB1DF14E2B2() /*0x14621BB1DF14E2B2*/ {
	nativeInit(0x14621BB1DF14E2B2);
	nativeCall();
}
inline void UI_SET_BLIP_SECONDARY_COLOUR(Blip blip, float r, float g, float b) /*0x14892474891E09EB*/ {
	uint64_t val;
	nativeInit(0x14892474891E09EB);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(float*)(&val) = r;
	nativePush(val);
	*(float*)(&val) = g;
	nativePush(val);
	*(float*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void UI_0x14C9FDCC41F81F63(bool p0) /*0x14C9FDCC41F81F63*/ {
	uint64_t val;
	nativeInit(0x14C9FDCC41F81F63);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Blip UI_GET_NEXT_BLIP_INFO_ID(int blipSprite) /*0x14F96AA50D6FBEA7*/ {
	uint64_t val;
	nativeInit(0x14F96AA50D6FBEA7);
	*(int*)(&val) = blipSprite;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline bool UI_IS_RADAR_HIDDEN() /*0x157F93B036700462*/ {
	nativeInit(0x157F93B036700462); return *(bool*)(nativeCall());
}
inline bool UI_DOES_PED_HAVE_AI_BLIP(Ped ped) /*0x15B8ECF844EE67ED*/ {
	uint64_t val;
	nativeInit(0x15B8ECF844EE67ED);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* UI__GET_TEXT_SUBSTRING(const char* text, int position, int length) /*0x169BD9382084C8C0*/ {
	uint64_t val;
	nativeInit(0x169BD9382084C8C0);
	*(const char**)(&val) = text;
	nativePush(val);
	*(int*)(&val) = position;
	nativePush(val);
	*(int*)(&val) = length;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void UI_0x16A304E6CB2BFAB9(int r, int g, int b, int a) /*0x16A304E6CB2BFAB9*/ {
	uint64_t val;
	nativeInit(0x16A304E6CB2BFAB9);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline void UI__UPDATE_DISPLAY_CASH(bool toggle) /*0x170F541E1CADD1DE*/ {
	uint64_t val;
	nativeInit(0x170F541E1CADD1DE);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(Hash gxtEntryHash) /*0x17299B63C7683A2B*/ {
	uint64_t val;
	nativeInit(0x17299B63C7683A2B);
	*(Hash*)(&val) = gxtEntryHash;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_NOTIFICATION_FLASH_COLOR(int red, int green, int blue, int alpha) /*0x17430B918701C342*/ {
	uint64_t val;
	nativeInit(0x17430B918701C342);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void UI_0x17AD8C9706BDD88A(Any p0) /*0x17AD8C9706BDD88A*/ {
	uint64_t val;
	nativeInit(0x17AD8C9706BDD88A);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int UI__GET_BLIP_INFO_ID_ITERATOR() /*0x186E5D252FA50E7D*/ {
	nativeInit(0x186E5D252FA50E7D); return *(int*)(nativeCall());
}
inline bool UI_IS_HUD_PREFERENCE_SWITCHED_ON() /*0x1930DFA731813EC4*/ {
	nativeInit(0x1930DFA731813EC4); return *(bool*)(nativeCall());
}
inline void UI_KEY_HUD_COLOUR(bool p0, Any p1) /*0x1A5CD7752DD28CD3*/ {
	uint64_t val;
	nativeInit(0x1A5CD7752DD28CD3);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any UI_GET_NAMED_RENDERTARGET_RENDER_ID(const char* p0) /*0x1A6478B61C6BDC3B*/ {
	uint64_t val;
	nativeInit(0x1A6478B61C6BDC3B);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void UI__ABORT_TEXT_CHAT() /*0x1AC8F4AD40E22127*/ {
	nativeInit(0x1AC8F4AD40E22127);
	nativeCall();
}
inline Blip UI_GET_FIRST_BLIP_INFO_ID(int blipSprite) /*0x1BEDE233E6CD2A1F*/ {
	uint64_t val;
	nativeInit(0x1BEDE233E6CD2A1F);
	*(int*)(&val) = blipSprite;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline bool UI_IS_PAUSE_MENU_RESTARTING() /*0x1C491717107431C7*/ {
	nativeInit(0x1C491717107431C7); return *(bool*)(nativeCall());
}
inline bool UI_DOES_TEXT_BLOCK_EXIST(const char* gxt) /*0x1C7302E725259789*/ {
	uint64_t val;
	nativeInit(0x1C7302E725259789);
	*(const char**)(&val) = gxt;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_TEXT_DROP_SHADOW() /*0x1CA3E9EAC9D93E5E*/ {
	nativeInit(0x1CA3E9EAC9D93E5E);
	nativeCall();
}
inline void UI__SET_HUD_COLOURS_SWITCH(int hudColorIndex, int hudColorIndex2) /*0x1CCC708F0F850613*/ {
	uint64_t val;
	nativeInit(0x1CCC708F0F850613);
	*(int*)(&val) = hudColorIndex;
	nativePush(val);
	*(int*)(&val) = hudColorIndex2;
	nativePush(val);
	nativeCall();
}
inline int UI__SET_NOTIFICATION_MESSAGE_2(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject) /*0x1CCD9A37359072CF*/ {
	uint64_t val;
	nativeInit(0x1CCD9A37359072CF);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(const char**)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = flash;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = sender;
	nativePush(val);
	*(const char**)(&val) = subject;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI__SET_TEXT_CHAT_UNK(bool p0) /*0x1DB21A44B09E8BA3*/ {
	uint64_t val;
	nativeInit(0x1DB21A44B09E8BA3);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_WAYPOINT_ACTIVE() /*0x1DD1F58F493F1DA5*/ {
	nativeInit(0x1DD1F58F493F1DA5); return *(bool*)(nativeCall());
}
inline int UI_GET_BLIP_INFO_ID_DISPLAY(Blip blip) /*0x1E314167F701DC3B*/ {
	uint64_t val;
	nativeInit(0x1E314167F701DC3B);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int UI__SET_NOTIFICATION_MESSAGE_4(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject, float duration) /*0x1E6611149DB3DB6B*/ {
	uint64_t val;
	nativeInit(0x1E6611149DB3DB6B);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(const char**)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = flash;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = sender;
	nativePush(val);
	*(const char**)(&val) = subject;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0x1EAC5F91BCBC5073(bool p0) /*0x1EAC5F91BCBC5073*/ {
	uint64_t val;
	nativeInit(0x1EAC5F91BCBC5073);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x1EAE6DD17B7A5EFA(Any p0) /*0x1EAE6DD17B7A5EFA*/ {
	uint64_t val;
	nativeInit(0x1EAE6DD17B7A5EFA);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_BLIP_SPRITE(Blip blip) /*0x1FC877464A04FC4F*/ {
	uint64_t val;
	nativeInit(0x1FC877464A04FC4F);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI__SET_NOTIFICATION_TEXT_ENTRY(const char* text) /*0x202709F4C58A0424*/ {
	uint64_t val;
	nativeInit(0x202709F4C58A0424);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline void UI_0x20FE7FDFEEAD38C0() /*0x20FE7FDFEEAD38C0*/ {
	nativeInit(0x20FE7FDFEEAD38C0);
	nativeCall();
}
inline void UI_0x211C4EF450086857() /*0x211C4EF450086857*/ {
	nativeInit(0x211C4EF450086857);
	nativeCall();
}
inline bool UI_0x214CD562A939246A() /*0x214CD562A939246A*/ {
	nativeInit(0x214CD562A939246A); return *(bool*)(nativeCall());
}
inline void UI__LOG_DEBUG_INFO(const char* p0) /*0x2162C446DFDF38FD*/ {
	uint64_t val;
	nativeInit(0x2162C446DFDF38FD);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_GPS_FLAGS() /*0x21986729D6A3A830*/ {
	nativeInit(0x21986729D6A3A830);
	nativeCall();
}
inline Vector3 UI_GET_HUD_COMPONENT_POSITION(int id) /*0x223CA69A8C4417FD*/ {
	uint64_t val;
	nativeInit(0x223CA69A8C4417FD);
	*(int*)(&val) = id;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline Hash UI__GET_CURRENT_FRONTEND_MENU() /*0x2309595AD6145265*/ {
	nativeInit(0x2309595AD6145265); return *(Hash*)(nativeCall());
}
inline void UI__SET_RADAR_BIGMAP_ENABLED(bool toggleBigMap, bool showFullMap) /*0x231C8F89D0539D8F*/ {
	uint64_t val;
	nativeInit(0x231C8F89D0539D8F);
	*(bool*)(&val) = toggleBigMap;
	nativePush(val);
	*(bool*)(&val) = showFullMap;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_CATEGORY(Blip blip, int index) /*0x234CDD44D996FD9A*/ {
	uint64_t val;
	nativeInit(0x234CDD44D996FD9A);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline void UI_END_TEXT_COMMAND_DISPLAY_HELP(Any p0, bool loop, bool beep, int duration) /*0x238FFE5C7B0498A6*/ {
	uint64_t val;
	nativeInit(0x238FFE5C7B0498A6);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = loop;
	nativePush(val);
	*(bool*)(&val) = beep;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_BLIP_FRIEND(Blip blip, bool toggle) /*0x23C3EB807312F01A*/ {
	uint64_t val;
	nativeInit(0x23C3EB807312F01A);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI__BEGIN_TEXT_COMMAND_OBJECTIVE(const char* p0) /*0x23D69E0465570028*/ {
	uint64_t val;
	nativeInit(0x23D69E0465570028);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x2432784ACA090DA4(Any p0) /*0x2432784ACA090DA4*/ {
	uint64_t val;
	nativeInit(0x2432784ACA090DA4);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UI_0x24A49BEAF468DC90(Any p0, Any* p1, Any p2, Any p3, Any p4) /*0x24A49BEAF468DC90*/ {
	uint64_t val;
	nativeInit(0x24A49BEAF468DC90);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_BLIP_AS_MISSION_CREATOR_BLIP(Blip blip, bool toggle) /*0x24AC0137444F9FD5*/ {
	uint64_t val;
	nativeInit(0x24AC0137444F9FD5);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_OUTLINE() /*0x2513DFB0FB8400FE*/ {
	nativeInit(0x2513DFB0FB8400FE);
	nativeCall();
}
inline void UI_0x25615540D894B814(Any p0, bool p1) /*0x25615540D894B814*/ {
	uint64_t val;
	nativeInit(0x25615540D894B814);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_0x25F87B30C382FCA7() /*0x25F87B30C382FCA7*/ {
	nativeInit(0x25F87B30C382FCA7);
	nativeCall();
}
inline void UI_BEGIN_TEXT_COMMAND_DISPLAY_TEXT(const char* text) /*0x25FBB336DF1804CB*/ {
	uint64_t val;
	nativeInit(0x25FBB336DF1804CB);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline void UI_0x2632482FD6B9AB87() /*0x2632482FD6B9AB87*/ {
	nativeInit(0x2632482FD6B9AB87);
	nativeCall();
}
inline bool UI_IS_MISSION_CREATOR_BLIP(Blip blip) /*0x26F49BF3381D933D*/ {
	uint64_t val;
	nativeInit(0x26F49BF3381D933D);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x2708FC083123F9FF() /*0x2708FC083123F9FF*/ {
	nativeInit(0x2708FC083123F9FF);
	nativeCall();
}
inline int UI_GET_PAUSE_MENU_STATE() /*0x272ACD84970869C5*/ {
	nativeInit(0x272ACD84970869C5); return *(int*)(nativeCall());
}
inline void UI_DISPLAY_AREA_NAME(bool toggle) /*0x276B6CE369C33678*/ {
	uint64_t val;
	nativeInit(0x276B6CE369C33678);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_LOCK_MINIMAP_ANGLE(int angle) /*0x299FAEBB108AE05B*/ {
	uint64_t val;
	nativeInit(0x299FAEBB108AE05B);
	*(int*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_ADDITIONAL_TEXT(int p0, bool p1) /*0x2A179DF17CCF04CD*/ {
	uint64_t val;
	nativeInit(0x2A179DF17CCF04CD);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x2A25ADC48F87841F() /*0x2A25ADC48F87841F*/ {
	nativeInit(0x2A25ADC48F87841F); return *(Any*)(nativeCall());
}
inline void UI_SET_BLIP_FADE(Blip blip, int opacity, int duration) /*0x2AEE8F8390D2298C*/ {
	uint64_t val;
	nativeInit(0x2AEE8F8390D2298C);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = opacity;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_BLIP_SHRINK(Blip blip, bool toggle) /*0x2B6D467DAB714E8D*/ {
	uint64_t val;
	nativeInit(0x2B6D467DAB714E8D);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI__SET_NOTIFICATION_MESSAGE(const char* picName1, int picName2, bool flash, int iconType, bool p4, const char* sender, const char* subject) /*0x2B7E9A4EAAA93C89*/ {
	uint64_t val;
	nativeInit(0x2B7E9A4EAAA93C89);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(int*)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = flash;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(const char**)(&val) = sender;
	nativePush(val);
	*(const char**)(&val) = subject;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_CLEAR_SMALL_PRINTS() /*0x2CEA2839313C09AC*/ {
	nativeInit(0x2CEA2839313C09AC);
	nativeCall();
}
inline bool UI_0x2E22FEFA0100275E() /*0x2E22FEFA0100275E*/ {
	nativeInit(0x2E22FEFA0100275E); return *(bool*)(nativeCall());
}
inline void UI_SET_BLIP_FLASHES_ALTERNATE(Blip blip, bool toggle) /*0x2E8D9498C56DD0D1*/ {
	uint64_t val;
	nativeInit(0x2E8D9498C56DD0D1);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION(bool blink, bool showInBrief) /*0x2ED7843F8F801023*/ {
	uint64_t val;
	nativeInit(0x2ED7843F8F801023);
	*(bool*)(&val) = blink;
	nativePush(val);
	*(bool*)(&val) = showInBrief;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any UI_0x2F057596F2BD0061() /*0x2F057596F2BD0061*/ {
	nativeInit(0x2F057596F2BD0061); return *(Any*)(nativeCall());
}
inline void UI_0x311438A071DD9B1A(float x, float y, float z) /*0x311438A071DD9B1A*/ {
	uint64_t val;
	nativeInit(0x311438A071DD9B1A);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(int headDisplayId, int color) /*0x3158C77A7E888AB4*/ {
	uint64_t val;
	nativeInit(0x3158C77A7E888AB4);
	*(int*)(&val) = headDisplayId;
	nativePush(val);
	*(int*)(&val) = color;
	nativePush(val);
	nativeCall();
}
inline void UI_REMOVE_MP_GAMER_TAG(int gamerTagId) /*0x31698AA80E0223F8*/ {
	uint64_t val;
	nativeInit(0x31698AA80E0223F8);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	nativeCall();
}
inline void UI_0x317EBA71D7543F52(Any* p0, Any* p1, Any* p2, Any* p3) /*0x317EBA71D7543F52*/ {
	uint64_t val;
	nativeInit(0x317EBA71D7543F52);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_GPS_FLASHES(bool toggle) /*0x320D0E0D936A0E9B*/ {
	uint64_t val;
	nativeInit(0x320D0E0D936A0E9B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_HELP_MESSAGE_FADING_OUT() /*0x327EDEEEAC55C369*/ {
	nativeInit(0x327EDEEEAC55C369); return *(bool*)(nativeCall());
}
inline int UI__DRAW_NOTIFICATION_UNLOCK(const char* unlockLabel, int iconType, const char* unk2) /*0x33EE12743CCD6343*/ {
	uint64_t val;
	nativeInit(0x33EE12743CCD6343);
	*(const char**)(&val) = unlockLabel;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = unk2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any UI_0x359AF31A4B52F5ED() /*0x359AF31A4B52F5ED*/ {
	nativeInit(0x359AF31A4B52F5ED); return *(Any*)(nativeCall());
}
inline void UI_0x35EDD5B2E3FF01C0() /*0x35EDD5B2E3FF01C0*/ {
	nativeInit(0x35EDD5B2E3FF01C0);
	nativeCall();
}
inline void UI_0x36C1451A88A09630(Any* p0, Any* p1) /*0x36C1451A88A09630*/ {
	uint64_t val;
	nativeInit(0x36C1451A88A09630);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_3(bool blink, bool p1) /*0x378E809BF61EC840*/ {
	uint64_t val;
	nativeInit(0x378E809BF61EC840);
	*(bool*)(&val) = blink;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI__SET_NOTIFICATION_COLOR_NEXT(int hudIndex) /*0x39BBF623FC803EAC*/ {
	uint64_t val;
	nativeInit(0x39BBF623FC803EAC);
	*(int*)(&val) = hudIndex;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x3BAB9A4E4F2FF5C7() /*0x3BAB9A4E4F2FF5C7*/ {
	nativeInit(0x3BAB9A4E4F2FF5C7); return *(Any*)(nativeCall());
}
inline void UI_0x3CA6050692BC61B0(bool p0) /*0x3CA6050692BC61B0*/ {
	uint64_t val;
	nativeInit(0x3CA6050692BC61B0);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x3D3D15AF7BCAAF83(Any p0, bool p1, bool p2) /*0x3D3D15AF7BCAAF83*/ {
	uint64_t val;
	nativeInit(0x3D3D15AF7BCAAF83);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x3D9ACB1EB139E702() /*0x3D9ACB1EB139E702*/ {
	nativeInit(0x3D9ACB1EB139E702); return *(bool*)(nativeCall());
}
inline void UI_0x3DDA37128DD1ACA8(bool p0) /*0x3DDA37128DD1ACA8*/ {
	uint64_t val;
	nativeInit(0x3DDA37128DD1ACA8);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_UNLOCK_MINIMAP_POSITION() /*0x3E93E06DB8EF1F30*/ {
	nativeInit(0x3E93E06DB8EF1F30);
	nativeCall();
}
inline void UI_HIDE_SPECIAL_ABILITY_LOCKON_OPERATION(Any p0, bool p1) /*0x3EED80DFF7325CAA*/ {
	uint64_t val;
	nativeInit(0x3EED80DFF7325CAA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_0x3F5CC444DCAAA8F2(Any p0, Any p1, bool p2) /*0x3F5CC444DCAAA8F2*/ {
	uint64_t val;
	nativeInit(0x3F5CC444DCAAA8F2);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void HUD_DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME() /*0x402F9ED62087E898*/ {
	nativeInit(0x402F9ED62087E898);
	nativeCall();
}
inline void UI_0x41350B4FC28E3941(bool p0) /*0x41350B4FC28E3941*/ {
	uint64_t val;
	nativeInit(0x41350B4FC28E3941);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x4167EFE0527D706E() /*0x4167EFE0527D706E*/ {
	nativeInit(0x4167EFE0527D706E); return *(bool*)(nativeCall());
}
inline int UI__GET_LENGTH_OF_STRING(const char* STRING) /*0x43E4111189E54F0E*/ {
	uint64_t val;
	nativeInit(0x43E4111189E54F0E);
	*(const char**)(&val) = STRING;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_SET_TEXT_EDGE(int p0, int r, int g, int b, int a) /*0x441603240D202FA6*/ {
	uint64_t val;
	nativeInit(0x441603240D202FA6);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline void UI_OBJECT_DECAL_TOGGLE(Hash contextHash) /*0x444D8CF241EC25C5*/ {
	uint64_t val;
	nativeInit(0x444D8CF241EC25C5);
	*(Hash*)(&val) = contextHash;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_2(bool blink, bool p1) /*0x44FA03975424A0EE*/ {
	uint64_t val;
	nativeInit(0x44FA03975424A0EE);
	*(bool*)(&val) = blink;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_RESET_HUD_COMPONENT_VALUES(int id) /*0x450930E616475D0D*/ {
	uint64_t val;
	nativeInit(0x450930E616475D0D);
	*(int*)(&val) = id;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_ALPHA(Blip blip, int alpha) /*0x45FF974EEE1C8734*/ {
	uint64_t val;
	nativeInit(0x45FF974EEE1C8734);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_DROPSHADOW(int distance, int r, int g, int b, int a) /*0x465C84BC39F1C351*/ {
	uint64_t val;
	nativeInit(0x465C84BC39F1C351);
	*(int*)(&val) = distance;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline Blip UI_ADD_BLIP_FOR_RADIUS(float posX, float posY, float posZ, float radius) /*0x46818D79B1F7499A*/ {
	uint64_t val;
	nativeInit(0x46818D79B1F7499A);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI_ENABLE_DEATHBLOOD_SEETHROUGH(bool p0) /*0x4895BDEA16E7C080*/ {
	uint64_t val;
	nativeInit(0x4895BDEA16E7C080);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x4A0C7C9BB10ABB36(bool p0) /*0x4A0C7C9BB10ABB36*/ {
	uint64_t val;
	nativeInit(0x4A0C7C9BB10ABB36);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x4A9923385BDB9DAD() /*0x4A9923385BDB9DAD*/ {
	nativeInit(0x4A9923385BDB9DAD); return *(bool*)(nativeCall());
}
inline void UI_HIDE_LOADING_ON_FADE_THIS_FRAME() /*0x4B0311D3CDC4648F*/ {
	nativeInit(0x4B0311D3CDC4648F);
	nativeCall();
}
inline Entity UI_GET_BLIP_INFO_ID_ENTITY_INDEX(Blip blip) /*0x4BA4E2553AFEDC2C*/ {
	uint64_t val;
	nativeInit(0x4BA4E2553AFEDC2C);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline bool UI_IS_HELP_MESSAGE_BEING_DISPLAYED() /*0x4D79439A6B55AC67*/ {
	nativeInit(0x4D79439A6B55AC67); return *(bool*)(nativeCall());
}
inline void UI_SET_TEXT_JUSTIFICATION(int justifyType) /*0x4E096588B13FFECA*/ {
	uint64_t val;
	nativeInit(0x4E096588B13FFECA);
	*(int*)(&val) = justifyType;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x4E3CD0EF8A489541() /*0x4E3CD0EF8A489541*/ {
	nativeInit(0x4E3CD0EF8A489541); return *(Any*)(nativeCall());
}
inline bool UI_IS_MP_GAMER_TAG_ACTIVE(int gamerTagId) /*0x4E929E7A5796FD26*/ {
	uint64_t val;
	nativeInit(0x4E929E7A5796FD26);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_BLIP_ROUTE(Blip blip, bool enabled) /*0x4F7D8A9BFB0B43E9*/ {
	uint64_t val;
	nativeInit(0x4F7D8A9BFB0B43E9);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_FLOATING_HELP(Any p0, bool p1) /*0x50085246ABD3FEFA*/ {
	uint64_t val;
	nativeInit(0x50085246ABD3FEFA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI__BEGIN_TEXT_COMMAND_LINE_COUNT(const char* entry) /*0x521FB041D93DD0E4*/ {
	uint64_t val;
	nativeInit(0x521FB041D93DD0E4);
	*(const char**)(&val) = entry;
	nativePush(val);
	nativeCall();
}
inline void UI__DISPLAY_JOB_REPORT() /*0x523A590C1A3CC0D3*/ {
	nativeInit(0x523A590C1A3CC0D3);
	nativeCall();
}
inline int UI_GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID() /*0x52F0982D7FD156B6*/ {
	nativeInit(0x52F0982D7FD156B6); return *(int*)(nativeCall());
}
inline int UI__SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(const char* picName1, const char* picName2, bool flash, int iconType1, const char* sender, const char* subject, float duration, const char* clanTag, int iconType2, int p9) /*0x531B84E7DA981FB6*/ {
	uint64_t val;
	nativeInit(0x531B84E7DA981FB6);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(const char**)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = flash;
	nativePush(val);
	*(int*)(&val) = iconType1;
	nativePush(val);
	*(const char**)(&val) = sender;
	nativePush(val);
	*(const char**)(&val) = subject;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	*(const char**)(&val) = clanTag;
	nativePush(val);
	*(int*)(&val) = iconType2;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_HIDE_NUMBER_ON_BLIP(Blip blip) /*0x532CFF637EF80148*/ {
	uint64_t val;
	nativeInit(0x532CFF637EF80148);
	*(Blip*)(&val) = blip;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_MAP_FULL_SCREEN(bool toggle) /*0x5354C5BA2EA868A4*/ {
	uint64_t val;
	nativeInit(0x5354C5BA2EA868A4);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_0x54318C915D27E4CE(Any p0, bool p1) /*0x54318C915D27E4CE*/ {
	uint64_t val;
	nativeInit(0x54318C915D27E4CE);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI__BEGIN_TEXT_COMMAND_WIDTH(const char* text) /*0x54CE8AC98E120CAB*/ {
	uint64_t val;
	nativeInit(0x54CE8AC98E120CAB);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x551DF99658DB6EE8(float p0, float p1, float p2) /*0x551DF99658DB6EE8*/ {
	uint64_t val;
	nativeInit(0x551DF99658DB6EE8);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void UI__CLEAR_NOTIFICATIONS_POS(float pos) /*0x55598D21339CB998*/ {
	uint64_t val;
	nativeInit(0x55598D21339CB998);
	*(float*)(&val) = pos;
	nativePush(val);
	nativeCall();
}
inline Blip UI__GET_AI_BLIP(Ped ped) /*0x56176892826A4FE8*/ {
	uint64_t val;
	nativeInit(0x56176892826A4FE8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI_0x56C8B608CFD49854() /*0x56C8B608CFD49854*/ {
	nativeInit(0x56C8B608CFD49854);
	nativeCall();
}
inline void UI_0x57D760D55F54E071(bool p0) /*0x57D760D55F54E071*/ {
	uint64_t val;
	nativeInit(0x57D760D55F54E071);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_REGISTER_NAMED_RENDERTARGET(const char* p0, bool p1) /*0x57D9C12635E25CE3*/ {
	uint64_t val;
	nativeInit(0x57D9C12635E25CE3);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x583049884A2EEE3C() /*0x583049884A2EEE3C*/ {
	nativeInit(0x583049884A2EEE3C);
	nativeCall();
}
inline Vector3 UI_GET_BLIP_COORDS(Blip blip) /*0x586AFE3FF72D996E*/ {
	uint64_t val;
	nativeInit(0x586AFE3FF72D996E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void UI_SET_MINIMAP_BLOCK_WAYPOINT(bool toggle) /*0x58FADDED207897DC*/ {
	uint64_t val;
	nativeInit(0x58FADDED207897DC);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x593FEAE1F73392D4() /*0x593FEAE1F73392D4*/ {
	nativeInit(0x593FEAE1F73392D4); return *(Any*)(nativeCall());
}
inline bool UI_ADD_TREVOR_RANDOM_MODIFIER(int gamerTagId) /*0x595B5178E412E199*/ {
	uint64_t val;
	nativeInit(0x595B5178E412E199);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_RADAR_AS_INTERIOR_THIS_FRAME(Hash interior, float x, float y, int heading, int zoom) /*0x59E727A1C9D3E31A*/ {
	uint64_t val;
	nativeInit(0x59E727A1C9D3E31A);
	*(Hash*)(&val) = interior;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(int*)(&val) = heading;
	nativePush(val);
	*(int*)(&val) = zoom;
	nativePush(val);
	nativeCall();
}
inline Blip UI_ADD_BLIP_FOR_COORD(float x, float y, float z) /*0x5A039BB0BCA604B6*/ {
	uint64_t val;
	nativeInit(0x5A039BB0BCA604B6);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI_SET_GPS_FLAGS(int p0, float p1) /*0x5B440763A4C8D15B*/ {
	uint64_t val;
	nativeInit(0x5B440763A4C8D15B);
	*(int*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vector3 UI_0x5BFF36D6ED83E0AE() /*0x5BFF36D6ED83E0AE*/ {
	nativeInit(0x5BFF36D6ED83E0AE); return *(Vector3*)(nativeCall());
}
inline Blip UI_DISABLE_BLIP_NAME_FOR_VAR() /*0x5C90988E7C8E1AF4*/ {
	nativeInit(0x5C90988E7C8E1AF4); return *(Blip*)(nativeCall());
}
inline int UI__SET_NOTIFICATION_MESSAGE_CLAN_TAG(const char* picName1, const char* picName2, bool flash, int iconType, const char* sender, const char* subject, float duration, const char* clanTag) /*0x5CBF7BADE20DB93E*/ {
	uint64_t val;
	nativeInit(0x5CBF7BADE20DB93E);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(const char**)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = flash;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = sender;
	nativePush(val);
	*(const char**)(&val) = subject;
	nativePush(val);
	*(float*)(&val) = duration;
	nativePush(val);
	*(const char**)(&val) = clanTag;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Blip UI_ADD_BLIP_FOR_ENTITY(Entity entity) /*0x5CDE92C702A8FCE7*/ {
	uint64_t val;
	nativeInit(0x5CDE92C702A8FCE7);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI_CLEAR_PED_IN_PAUSE_MENU() /*0x5E62BE5DC58E9E06*/ {
	nativeInit(0x5E62BE5DC58E9E06);
	nativeCall();
}
inline void UI_SET_TEXT_RENDER_ID(int renderId) /*0x5F15302936E07111*/ {
	uint64_t val;
	nativeInit(0x5F15302936E07111);
	*(int*)(&val) = renderId;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_MISSION_NAME(bool p0, const char* name) /*0x5F28ECF5FC84772F*/ {
	uint64_t val;
	nativeInit(0x5F28ECF5FC84772F);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void UI__ADD_TEXT_COMPONENT_SCALEFORM(const char* p0) /*0x5F68520888E69014*/ {
	uint64_t val;
	nativeInit(0x5F68520888E69014);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__DISABLE_RADAR_THIS_FRAME() /*0x5FBAE526203990C9*/ {
	nativeInit(0x5FBAE526203990C9);
	nativeCall();
}
inline void UI_SHOW_HEADING_INDICATOR_ON_BLIP(Blip blip, bool toggle) /*0x5FBCA48327B914DF*/ {
	uint64_t val;
	nativeInit(0x5FBCA48327B914DF);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x5FBD7095FE7AE57F(Any p0, float* p1) /*0x5FBD7095FE7AE57F*/ {
	uint64_t val;
	nativeInit(0x5FBD7095FE7AE57F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__REQUEST_ADDITIONAL_TEXT_2(const char* gxt, int slot) /*0x6009F9F1AE90D8A6*/ {
	uint64_t val;
	nativeInit(0x6009F9F1AE90D8A6);
	*(const char**)(&val) = gxt;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(bool p0) /*0x60296AF4BA14ABC5*/ {
	uint64_t val;
	nativeInit(0x60296AF4BA14ABC5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x60734CC207C9833C(bool p0) /*0x60734CC207C9833C*/ {
	uint64_t val;
	nativeInit(0x60734CC207C9833C);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x60E892BA4F5BDCA4() /*0x60E892BA4F5BDCA4*/ {
	nativeInit(0x60E892BA4F5BDCA4);
	nativeCall();
}
inline void UI_SET_MP_GAMER_TAG_COLOUR(int gamerTagId, int flag, int color) /*0x613ED644950626AE*/ {
	uint64_t val;
	nativeInit(0x613ED644950626AE);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(int*)(&val) = color;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_ALL_HELP_MESSAGES() /*0x6178F68A87A4D3A0*/ {
	nativeInit(0x6178F68A87A4D3A0);
	nativeCall();
}
inline void UI_0x62E849B7EB28E770(bool p0) /*0x62E849B7EB28E770*/ {
	uint64_t val;
	nativeInit(0x62E849B7EB28E770);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_WRAP(float start, float end) /*0x63145D9C883A1A70*/ {
	uint64_t val;
	nativeInit(0x63145D9C883A1A70);
	*(float*)(&val) = start;
	nativePush(val);
	*(float*)(&val) = end;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x632B2940C67F4EA9(int scaleformHandle, Any* p1, Any* p2, Any* p3) /*0x632B2940C67F4EA9*/ {
	uint64_t val;
	nativeInit(0x632B2940C67F4EA9);
	*(int*)(&val) = scaleformHandle;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_MP_GAMER_TAG_VISIBILITY(int gamerTagId, int component, bool toggle) /*0x63BB75ABEDC1F6A0*/ {
	uint64_t val;
	nativeInit(0x63BB75ABEDC1F6A0);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(int*)(&val) = component;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_FONT(int fontType) /*0x66E0276CC5F6B9DA*/ {
	uint64_t val;
	nativeInit(0x66E0276CC5F6B9DA);
	*(int*)(&val) = fontType;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x66E7CB63C97B7D20() /*0x66E7CB63C97B7D20*/ {
	nativeInit(0x66E7CB63C97B7D20); return *(Any*)(nativeCall());
}
inline void UI_0x67EEDEA1B9BAFD94() /*0x67EEDEA1B9BAFD94*/ {
	nativeInit(0x67EEDEA1B9BAFD94);
	nativeCall();
}
inline void UI_HIDE_HUD_COMPONENT_THIS_FRAME(int id) /*0x6806C51AD12B83B8*/ {
	uint64_t val;
	nativeInit(0x6806C51AD12B83B8);
	*(int*)(&val) = id;
	nativePush(val);
	nativeCall();
}
inline void UI_TOGGLE_STEALTH_RADAR(bool toggle) /*0x6AFDFB93754950C7*/ {
	uint64_t val;
	nativeInit(0x6AFDFB93754950C7);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_0x6B1DE27EE78E6A19(Any p0) /*0x6B1DE27EE78E6A19*/ {
	uint64_t val;
	nativeInit(0x6B1DE27EE78E6A19);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_RIGHT_JUSTIFY(bool toggle) /*0x6B3C4650BC8BEE47*/ {
	uint64_t val;
	nativeInit(0x6B3C4650BC8BEE47);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(const char* text) /*0x6C188BE134E074AA*/ {
	uint64_t val;
	nativeInit(0x6C188BE134E074AA);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline void UI__CENTER_PLAYER_ON_RADAR_THIS_FRAME() /*0x6D14BFDC33B34F55*/ {
	nativeInit(0x6D14BFDC33B34F55);
	nativeCall();
}
inline void UI_DISABLE_FRONTEND_THIS_FRAME() /*0x6D3465A73092F0E6*/ {
	nativeInit(0x6D3465A73092F0E6);
	nativeCall();
}
inline void UI__SET_MP_GAMER_TAG_COLOR(int headDisplayId, const char* username, bool pointedClanTag, bool isRockstarClan, const char* clanTag, Any p5, int r, int g, int b) /*0x6DD05E9D83EFA4C9*/ {
	uint64_t val;
	nativeInit(0x6DD05E9D83EFA4C9);
	*(int*)(&val) = headDisplayId;
	nativePush(val);
	*(const char**)(&val) = username;
	nativePush(val);
	*(bool*)(&val) = pointedClanTag;
	nativePush(val);
	*(bool*)(&val) = isRockstarClan;
	nativePush(val);
	*(const char**)(&val) = clanTag;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline bool UI__HAS_MP_GAMER_TAG() /*0x6E0EB3EB47C8D7AA*/ {
	nativeInit(0x6E0EB3EB47C8D7AA); return *(bool*)(nativeCall());
}
inline bool UI__IS_MINIMAP_AREA_REVEALED(float x, float y, float radius) /*0x6E31B91145873922*/ {
	uint64_t val;
	nativeInit(0x6E31B91145873922);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0x6EF54AB721DC6242() /*0x6EF54AB721DC6242*/ {
	nativeInit(0x6EF54AB721DC6242);
	nativeCall();
}
inline void UI_0x6F1554B0CC2089FA(bool p0) /*0x6F1554B0CC2089FA*/ {
	uint64_t val;
	nativeInit(0x6F1554B0CC2089FA);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_AS_FRIENDLY(Blip blip, bool toggle) /*0x6F6F290102C02AB4*/ {
	uint64_t val;
	nativeInit(0x6F6F290102C02AB4);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI_0x6F72CD94F7B5B68C() /*0x6F72CD94F7B5B68C*/ {
	nativeInit(0x6F72CD94F7B5B68C); return *(int*)(nativeCall());
}
inline void UI__SET_WARNING_MESSAGE_3(const char* entryHeader, const char* entryLine1, Any instructionalKey, const char* entryLine2, bool p4, Any p5, Any p6, Any* p7, Any* p8, bool p9) /*0x701919482C74B5AB*/ {
	uint64_t val;
	nativeInit(0x701919482C74B5AB);
	*(const char**)(&val) = entryHeader;
	nativePush(val);
	*(const char**)(&val) = entryLine1;
	nativePush(val);
	*(Any*)(&val) = instructionalKey;
	nativePush(val);
	*(const char**)(&val) = entryLine2;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any**)(&val) = p7;
	nativePush(val);
	*(Any**)(&val) = p8;
	nativePush(val);
	*(bool*)(&val) = p9;
	nativePush(val);
	nativeCall();
}
inline void UI_HIDE_HUD_AND_RADAR_THIS_FRAME() /*0x719FF505F097FD20*/ {
	nativeInit(0x719FF505F097FD20);
	nativeCall();
}
inline void UI_REQUEST_ADDITIONAL_TEXT(const char* gxt, int slot) /*0x71A78003C8E71424*/ {
	uint64_t val;
	nativeInit(0x71A78003C8E71424);
	*(const char**)(&val) = gxt;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_MINIMAP_GOLF_COURSE(int hole) /*0x71BDB63DBAF8DA59*/ {
	uint64_t val;
	nativeInit(0x71BDB63DBAF8DA59);
	*(int*)(&val) = hole;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_BLIP_HUD_COLOUR(Blip blip) /*0x729B5F1EFBC0AAEE*/ {
	uint64_t val;
	nativeInit(0x729B5F1EFBC0AAEE);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0x72C1056D678BB7D8(Hash weaponHash) /*0x72C1056D678BB7D8*/ {
	uint64_t val;
	nativeInit(0x72C1056D678BB7D8);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	nativeCall();
}
inline void UI_0x72DD432F3CDFC0EE(float posX, float posY, float posZ, float radius, int p4) /*0x72DD432F3CDFC0EE*/ {
	uint64_t val;
	nativeInit(0x72DD432F3CDFC0EE);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void UI_DISPLAY_SNIPER_SCOPE_THIS_FRAME() /*0x73115226F4814E62*/ {
	nativeInit(0x73115226F4814E62);
	nativeCall();
}
inline void UI_PULSE_BLIP(Blip blip) /*0x742D6FD43115AF73*/ {
	uint64_t val;
	nativeInit(0x742D6FD43115AF73);
	*(Blip*)(&val) = blip;
	nativePush(val);
	nativeCall();
}
inline void UI_SHOW_TICK_ON_BLIP(Blip blip, bool toggle) /*0x74513EA3E505181E*/ {
	uint64_t val;
	nativeInit(0x74513EA3E505181E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_FRONTEND_ACTIVE(bool active) /*0x745711A75AB09277*/ {
	uint64_t val;
	nativeInit(0x745711A75AB09277);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline void UI_0x75A16C3DA34F1245(Blip blip, bool p1) /*0x75A16C3DA34F1245*/ {
	uint64_t val;
	nativeInit(0x75A16C3DA34F1245);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any UI_SET_MINIMAP_COMPONENT(int component, bool toggle, int componentColor) /*0x75A9A10948D1DEA6*/ {
	uint64_t val;
	nativeInit(0x75A9A10948D1DEA6);
	*(int*)(&val) = component;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(int*)(&val) = componentColor;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void UI_0x75D3691713C3B05A() /*0x75D3691713C3B05A*/ {
	nativeInit(0x75D3691713C3B05A);
	nativeCall();
}
inline void UI__ADD_TEXT_COMPONENT_APP_TITLE(const char* p0, int p1) /*0x761B77454205A61D*/ {
	uint64_t val;
	nativeInit(0x761B77454205A61D);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_0x7669F9E39DC17063() /*0x7669F9E39DC17063*/ {
	nativeInit(0x7669F9E39DC17063);
	nativeCall();
}
inline void UI_0x7679CC1BCEBE3D4C(Any p0, float p1, float p2) /*0x7679CC1BCEBE3D4C*/ {
	uint64_t val;
	nativeInit(0x7679CC1BCEBE3D4C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void UI_0x7792424AA0EAC32E() /*0x7792424AA0EAC32E*/ {
	nativeInit(0x7792424AA0EAC32E);
	nativeCall();
}
inline void UI__SET_PLAYER_BLIP_POSITION_THIS_FRAME(float x, float y) /*0x77E2DD177910E1CF*/ {
	uint64_t val;
	nativeInit(0x77E2DD177910E1CF);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void UI_0x77F16B447824DA6C(int p0) /*0x77F16B447824DA6C*/ {
	uint64_t val;
	nativeInit(0x77F16B447824DA6C);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x784BA7E0ECEB4178(Any p0, float x, float y, float z) /*0x784BA7E0ECEB4178*/ {
	uint64_t val;
	nativeInit(0x784BA7E0ECEB4178);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void UI_0x788E7FD431BD67F1(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) /*0x788E7FD431BD67F1*/ {
	uint64_t val;
	nativeInit(0x788E7FD431BD67F1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_NAMED_RENDERTARGET_REGISTERED(const char* p0) /*0x78DCDC15C9F116B4*/ {
	uint64_t val;
	nativeInit(0x78DCDC15C9F116B4);
	*(const char**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UI_IS_MESSAGE_BEING_DISPLAYED() /*0x7984C03AA5CC2F41*/ {
	nativeInit(0x7984C03AA5CC2F41); return *(bool*)(nativeCall());
}
inline void UI_CLEAR_GPS_RACE_TRACK() /*0x7AA5B4CE533C858B*/ {
	nativeInit(0x7AA5B4CE533C858B);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_UNLOCK_3(const char* primaryText, int iconType, const char* unk2, int fadeInTime, int primaryStyle, bool ignoreLoc) /*0x7AE0589093A2E088*/ {
	uint64_t val;
	nativeInit(0x7AE0589093A2E088);
	*(const char**)(&val) = primaryText;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = unk2;
	nativePush(val);
	*(int*)(&val) = fadeInTime;
	nativePush(val);
	*(int*)(&val) = primaryStyle;
	nativePush(val);
	*(bool*)(&val) = ignoreLoc;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_SET_WARNING_MESSAGE(const char* entryLine1, int instructionalKey, const char* entryLine2, bool p3, Any p4, Any* p5, Any* p6, bool background) /*0x7B1776B3B53F8D74*/ {
	uint64_t val;
	nativeInit(0x7B1776B3B53F8D74);
	*(const char**)(&val) = entryLine1;
	nativePush(val);
	*(int*)(&val) = instructionalKey;
	nativePush(val);
	*(const char**)(&val) = entryLine2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any**)(&val) = p5;
	nativePush(val);
	*(Any**)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = background;
	nativePush(val);
	nativeCall();
}
inline void UI_0x7B21E0BB01E8224A(Any p0) /*0x7B21E0BB01E8224A*/ {
	uint64_t val;
	nativeInit(0x7B21E0BB01E8224A);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline const char* UI__GET_LABEL_TEXT(const char* labelName) /*0x7B5280EBA9840C72*/ {
	uint64_t val;
	nativeInit(0x7B5280EBA9840C72);
	*(const char**)(&val) = labelName;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void UI__SET_MP_GAMER_TAG_CHATTING(int gamerTagId, const char* string) /*0x7B7723747CCB55B6*/ {
	uint64_t val;
	nativeInit(0x7B7723747CCB55B6);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(const char**)(&val) = string;
	nativePush(val);
	nativeCall();
}
inline void UI_GET_HUD_COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a) /*0x7C9C91AB74A0360F*/ {
	uint64_t val;
	nativeInit(0x7C9C91AB74A0360F);
	*(int*)(&val) = hudColorIndex;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	*(int**)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline Blip* UI_0x7CD934010E115C2C(Ped ped) /*0x7CD934010E115C2C*/ {
	uint64_t val;
	nativeInit(0x7CD934010E115C2C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Blip**)(nativeCall());
}
inline void UI_0x7E17BE53E1AAABAF(int* p0, int* p1, int* p2) /*0x7E17BE53E1AAABAF*/ {
	uint64_t val;
	nativeInit(0x7E17BE53E1AAABAF);
	*(int**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	*(int**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(const char* gxt) /*0x801BD273D3A23F74*/ {
	uint64_t val;
	nativeInit(0x801BD273D3A23F74);
	*(const char**)(&val) = gxt;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI__SHOW_SOCIAL_CLUB_LEGAL_SCREEN() /*0x805D7CBB36FD6C4C*/ {
	nativeInit(0x805D7CBB36FD6C4C);
	nativeCall();
}
inline void UI__SET_DIRECTOR_MODE(bool toggle) /*0x808519373FD336A3*/ {
	uint64_t val;
	nativeInit(0x808519373FD336A3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(Blip blip) /*0x80EAD8E2E1D5D52E*/ {
	uint64_t val;
	nativeInit(0x80EAD8E2E1D5D52E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	nativeCall();
}
inline void UI_0x80FE4F3AB4E1B62A() /*0x80FE4F3AB4E1B62A*/ {
	nativeInit(0x80FE4F3AB4E1B62A);
	nativeCall();
}
inline void UI_0x817B86108EB94E51(bool p0, Any* p1, Any* p2, Any* p3, Any* p4, Any* p5, Any* p6, Any* p7, Any* p8) /*0x817B86108EB94E51*/ {
	uint64_t val;
	nativeInit(0x817B86108EB94E51);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any**)(&val) = p5;
	nativePush(val);
	*(Any**)(&val) = p6;
	nativePush(val);
	*(Any**)(&val) = p7;
	nativePush(val);
	*(Any**)(&val) = p8;
	nativePush(val);
	nativeCall();
}
inline void UI_UNLOCK_MINIMAP_ANGLE() /*0x8183455E16C42E3A*/ {
	nativeInit(0x8183455E16C42E3A);
	nativeCall();
}
inline void UI_REFRESH_WAYPOINT() /*0x81FA173F170560D1*/ {
	nativeInit(0x81FA173F170560D1);
	nativeCall();
}
inline int UI__GET_CURRENT_NOTIFICATION() /*0x82352748437638CA*/ {
	nativeInit(0x82352748437638CA); return *(int*)(nativeCall());
}
inline void UI_0x82CEDC33687E1F50(bool p0) /*0x82CEDC33687E1F50*/ {
	uint64_t val;
	nativeInit(0x82CEDC33687E1F50);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_ROUTE_COLOUR(Blip blip, int colour) /*0x837155CD2F63DA09*/ {
	uint64_t val;
	nativeInit(0x837155CD2F63DA09);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = colour;
	nativePush(val);
	nativeCall();
}
inline bool UI_0x84698AB38D0C6636(Hash hash) /*0x84698AB38D0C6636*/ {
	uint64_t val;
	nativeInit(0x84698AB38D0C6636);
	*(Hash*)(&val) = hash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_BEGIN_TEXT_COMMAND_DISPLAY_HELP(const char* inputType) /*0x8509B634FBE7DA11*/ {
	uint64_t val;
	nativeInit(0x8509B634FBE7DA11);
	*(const char**)(&val) = inputType;
	nativePush(val);
	nativeCall();
}
inline void UI_BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(const char* text) /*0x853648FD1063A213*/ {
	uint64_t val;
	nativeInit(0x853648FD1063A213);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline float UI__END_TEXT_COMMAND_GET_WIDTH(bool p0) /*0x85F061DA64ED2F67*/ {
	uint64_t val;
	nativeInit(0x85F061DA64ED2F67);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void UI_REMOVE_BLIP(Blip* blip) /*0x86A652570E5F25DD*/ {
	uint64_t val;
	nativeInit(0x86A652570E5F25DD);
	*(Blip**)(&val) = blip;
	nativePush(val);
	nativeCall();
}
inline void UI_0x8817605C2BA76200() /*0x8817605C2BA76200*/ {
	nativeInit(0x8817605C2BA76200);
	nativeCall();
}
inline bool UI_END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED() /*0x8A9BA1AB3E237613*/ {
	nativeInit(0x8A9BA1AB3E237613); return *(bool*)(nativeCall());
}
inline bool UI_IS_STREAMING_ADDITIONAL_TEXT(int p0) /*0x8B6817B71B85EBF0*/ {
	uint64_t val;
	nativeInit(0x8B6817B71B85EBF0);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__SET_CURSOR_SPRITE(int spriteId) /*0x8DB8CFFD58B62552*/ {
	uint64_t val;
	nativeInit(0x8DB8CFFD58B62552);
	*(int*)(&val) = spriteId;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_HELP(bool toggle) /*0x8DFCED7A656F8802*/ {
	uint64_t val;
	nativeInit(0x8DFCED7A656F8802);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x8EFCCF6EC66D85E4(Any* p0, Any* p1, Any* p2, bool p3, bool p4) /*0x8EFCCF6EC66D85E4*/ {
	uint64_t val;
	nativeInit(0x8EFCCF6EC66D85E4);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool UI_0x8F08017F9D7C47BD(Any p0, Any* p1, Any p2) /*0x8F08017F9D7C47BD*/ {
	uint64_t val;
	nativeInit(0x8F08017F9D7C47BD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__BEGIN_TEXT_COMMAND_TIMER(const char* p0) /*0x8F9EE5687F8EECCD*/ {
	uint64_t val;
	nativeInit(0x8F9EE5687F8EECCD);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0x900086F371220B6F(bool p0, Any p1, Any p2) /*0x900086F371220B6F*/ {
	uint64_t val;
	nativeInit(0x900086F371220B6F);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_DISPLAY(Blip blip, int displayId) /*0x9029B2F3DA924928*/ {
	uint64_t val;
	nativeInit(0x9029B2F3DA924928);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = displayId;
	nativePush(val);
	nativeCall();
}
inline int UI__GET_TEXT_SCREEN_LINE_COUNT(float x, float y) /*0x9040DFB09BE75706*/ {
	uint64_t val;
	nativeInit(0x9040DFB09BE75706);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any UI_0x9049FE339D5F6F6F() /*0x9049FE339D5F6F6F*/ {
	nativeInit(0x9049FE339D5F6F6F); return *(Any*)(nativeCall());
}
inline bool UI_0x90A6526CF0381030(Any p0, Any* p1, Any p2, Any p3) /*0x90A6526CF0381030*/ {
	uint64_t val;
	nativeInit(0x90A6526CF0381030);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__SET_NORTH_YANKTON_MAP(bool toggle) /*0x9133955F1A2DA957*/ {
	uint64_t val;
	nativeInit(0x9133955F1A2DA957);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any UI_0x9135584D09A3437E() /*0x9135584D09A3437E*/ {
	nativeInit(0x9135584D09A3437E); return *(Any*)(nativeCall());
}
inline void UI_0x9245E81072704B8A(bool p0) /*0x9245E81072704B8A*/ {
	uint64_t val;
	nativeInit(0x9245E81072704B8A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_NOTIFICATION_BACKGROUND_COLOR(int hudIndex) /*0x92F0DA1E27DB96DC*/ {
	uint64_t val;
	nativeInit(0x92F0DA1E27DB96DC);
	*(int*)(&val) = hudIndex;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(const char* website) /*0x94CF4AC034C9C986*/ {
	uint64_t val;
	nativeInit(0x94CF4AC034C9C986);
	*(const char**)(&val) = website;
	nativePush(val);
	nativeCall();
}
inline void UI__REMOVE_DISPLAY_CASH() /*0x95CF81BD06EE1887*/ {
	nativeInit(0x95CF81BD06EE1887);
	nativeCall();
}
inline void UI_DISPLAY_HELP_TEXT_THIS_FRAME(const char* message, bool p1) /*0x960C9FF8F616E41C*/ {
	uint64_t val;
	nativeInit(0x960C9FF8F616E41C);
	*(const char**)(&val) = message;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_REMOVE_MULTIPLAYER_HUD_CASH() /*0x968F270E39141ECA*/ {
	nativeInit(0x968F270E39141ECA);
	nativeCall();
}
inline void UI_DISPLAY_CASH(bool toggle) /*0x96DEC8D5430208B7*/ {
	uint64_t val;
	nativeInit(0x96DEC8D5430208B7);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_BLIP_ALPHA(Blip blip) /*0x970F608F0EE6C885*/ {
	uint64_t val;
	nativeInit(0x970F608F0EE6C885);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0x975D66A0BC17064C(Any p0) /*0x975D66A0BC17064C*/ {
	uint64_t val;
	nativeInit(0x975D66A0BC17064C);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_AI_BLIP_MAX_DISTANCE(Ped ped, float distance) /*0x97C65887D4B37FA9*/ {
	uint64_t val;
	nativeInit(0x97C65887D4B37FA9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_APARTMENT_INVITE(bool p0, bool p1, int* p2, int p3, bool isLeader, bool unk0, int clanDesc, int R, int G, int B) /*0x97C9E4E7024A8F2C*/ {
	uint64_t val;
	nativeInit(0x97C9E4E7024A8F2C);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(int**)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = isLeader;
	nativePush(val);
	*(bool*)(&val) = unk0;
	nativePush(val);
	*(int*)(&val) = clanDesc;
	nativePush(val);
	*(int*)(&val) = R;
	nativePush(val);
	*(int*)(&val) = G;
	nativePush(val);
	*(int*)(&val) = B;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int UI_GET_CURRENT_WEBSITE_ID() /*0x97D47996FC48CBAD*/ {
	nativeInit(0x97D47996FC48CBAD); return *(int*)(nativeCall());
}
inline void UI_0x98215325A695E78A(bool p0) /*0x98215325A695E78A*/ {
	uint64_t val;
	nativeInit(0x98215325A695E78A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_ABILITY_BAR_VALUE(float value, float maxValue) /*0x9969599CCFF5D85E*/ {
	uint64_t val;
	nativeInit(0x9969599CCFF5D85E);
	*(float*)(&val) = value;
	nativePush(val);
	*(float*)(&val) = maxValue;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_NUMBER_OF_ACTIVE_BLIPS() /*0x9A3FF3DE163034E8*/ {
	nativeInit(0x9A3FF3DE163034E8); return *(int*)(nativeCall());
}
inline Pickup UI_GET_BLIP_INFO_ID_PICKUP_INDEX(Blip blip) /*0x9B6786E4C03DD382*/ {
	uint64_t val;
	nativeInit(0x9B6786E4C03DD382);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(Pickup*)(nativeCall());
}
inline void UI_CLEAR_BRIEF() /*0x9D292F73ADBD9313*/ {
	nativeInit(0x9D292F73ADBD9313);
	nativeCall();
}
inline void UI_END_TEXT_COMMAND_PRINT(int duration, bool drawImmediately) /*0x9D77056A530643F6*/ {
	uint64_t val;
	nativeInit(0x9D77056A530643F6);
	*(int*)(&val) = duration;
	nativePush(val);
	*(bool*)(&val) = drawImmediately;
	nativePush(val);
	nativeCall();
}
inline void UI_0x9E778248D6685FE0(const char* p0) /*0x9E778248D6685FE0*/ {
	uint64_t val;
	nativeInit(0x9E778248D6685FE0);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_RADAR_PREFERENCE_SWITCHED_ON() /*0x9EB6522EA68F22FE*/ {
	nativeInit(0x9EB6522EA68F22FE); return *(bool*)(nativeCall());
}
inline Any UI_DISPLAY_RADAR(bool Toggle) /*0xA0EBB943C300E693*/ {
	uint64_t val;
	nativeInit(0xA0EBB943C300E693);
	*(bool*)(&val) = Toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void UI_0xA13C11E1B5C06BFC() /*0xA13C11E1B5C06BFC*/ {
	nativeInit(0xA13C11E1B5C06BFC);
	nativeCall();
}
inline Any UI_0xA13E93403F26C812(Any p0) /*0xA13E93403F26C812*/ {
	uint64_t val;
	nativeInit(0xA13E93403F26C812);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any UI_FLASH_WANTED_DISPLAY(bool p0) /*0xA18AFB39081B6A1F*/ {
	uint64_t val;
	nativeInit(0xA18AFB39081B6A1F);
	*(bool*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool UI_0xA238192F33110615(int* p0, int* p1, int* p2) /*0xA238192F33110615*/ {
	uint64_t val;
	nativeInit(0xA238192F33110615);
	*(int**)(&val) = p0;
	nativePush(val);
	*(int**)(&val) = p1;
	nativePush(val);
	*(int**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UI_0xA277800A9EAE340E() /*0xA277800A9EAE340E*/ {
	nativeInit(0xA277800A9EAE340E); return *(Any*)(nativeCall());
}
inline void UI_SHOW_NUMBER_ON_BLIP(Blip blip, int number) /*0xA3C0B359DCB848B6*/ {
	uint64_t val;
	nativeInit(0xA3C0B359DCB848B6);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = number;
	nativePush(val);
	nativeCall();
}
inline Hash UI_0xA48931185F0536FE() /*0xA48931185F0536FE*/ {
	nativeInit(0xA48931185F0536FE); return *(Hash*)(nativeCall());
}
inline void UI_0xA4DEDE28B1814289() /*0xA4DEDE28B1814289*/ {
	nativeInit(0xA4DEDE28B1814289);
	nativeCall();
}
inline void UI_SET_TEXT_LEADING(bool p0) /*0xA50ABC31E3CDFAFF*/ {
	uint64_t val;
	nativeInit(0xA50ABC31E3CDFAFF);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_BLIP_FLASHING(Blip blip) /*0xA5E41FD83AD6CEF0*/ {
	uint64_t val;
	nativeInit(0xA5E41FD83AD6CEF0);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_DISPLAY_AMMO_THIS_FRAME(bool display) /*0xA5E78BA2B1331C55*/ {
	uint64_t val;
	nativeInit(0xA5E78BA2B1331C55);
	*(bool*)(&val) = display;
	nativePush(val);
	nativeCall();
}
inline void UI_DISPLAY_HUD(bool toggle) /*0xA6294919E56FF02A*/ {
	uint64_t val;
	nativeInit(0xA6294919E56FF02A);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_MP_GAMER_TAG_ICONS(int headDisplayId, bool p1) /*0xA67F9C46D612B6F1*/ {
	uint64_t val;
	nativeInit(0xA67F9C46D612B6F1);
	*(int*)(&val) = headDisplayId;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UI_DOES_BLIP_EXIST(Blip blip) /*0xA6DB27D19ECBB7DA*/ {
	uint64_t val;
	nativeInit(0xA6DB27D19ECBB7DA);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_WAYPOINT_OFF() /*0xA7E4E2D361C2627F*/ {
	nativeInit(0xA7E4E2D361C2627F);
	nativeCall();
}
inline bool UI_IS_HUD_HIDDEN() /*0xA86478C6958735C5*/ {
	nativeInit(0xA86478C6958735C5); return *(bool*)(nativeCall());
}
inline void UI__END_TEXT_COMMAND_TIMER(bool p0) /*0xA86911979638106F*/ {
	uint64_t val;
	nativeInit(0xA86911979638106F);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0xA8FDB297A8D25FBA() /*0xA8FDB297A8D25FBA*/ {
	nativeInit(0xA8FDB297A8D25FBA);
	nativeCall();
}
inline void UI_0xA905192A6781C41B(float x, float y, float z) /*0xA905192A6781C41B*/ {
	uint64_t val;
	nativeInit(0xA905192A6781C41B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline bool UI_0xA9CBFD40B3FA3010() /*0xA9CBFD40B3FA3010*/ {
	nativeInit(0xA9CBFD40B3FA3010); return *(bool*)(nativeCall());
}
inline int UI__DRAW_NOTIFICATION_AWARD(const char* p0, const char* p1, int p2, int p3, const char* p4) /*0xAA295B6F28BD587D*/ {
	uint64_t val;
	nativeInit(0xAA295B6F28BD587D);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	*(const char**)(&val) = p4;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_SET_BLIP_FLASH_INTERVAL(Blip blip, Any p1) /*0xAA51DB313C010A7E*/ {
	uint64_t val;
	nativeInit(0xAA51DB313C010A7E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_HUD_COMPONENT_POSITION(int id, float x, float y) /*0xAABB1F56E2A17CED*/ {
	uint64_t val;
	nativeInit(0xAABB1F56E2A17CED);
	*(int*)(&val) = id;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void UI__SHOW_CURSOR_THIS_FRAME() /*0xAAE7CE1D63167423*/ {
	nativeInit(0xAAE7CE1D63167423);
	nativeCall();
}
inline void UI__BEGIN_TEXT_COMMAND_BUSY_STRING(const char* string) /*0xABA17D7CE615ADBF*/ {
	uint64_t val;
	nativeInit(0xABA17D7CE615ADBF);
	*(const char**)(&val) = string;
	nativePush(val);
	nativeCall();
}
inline bool UI_DOES_TEXT_LABEL_EXIST(const char* gxt) /*0xAC09CA973C564252*/ {
	uint64_t val;
	nativeInit(0xAC09CA973C564252);
	*(const char**)(&val) = gxt;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_GIVE_PED_TO_PAUSE_MENU(Ped ped, int p1) /*0xAC0BFBDC3BE00E14*/ {
	uint64_t val;
	nativeInit(0xAC0BFBDC3BE00E14);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_SUBTITLE_PREFERENCE_SWITCHED_ON() /*0xAD6DACA4BA53E0A4*/ {
	nativeInit(0xAD6DACA4BA53E0A4); return *(bool*)(nativeCall());
}
inline bool UI_HAS_THIS_ADDITIONAL_TEXT_LOADED(const char* gxt, int slot) /*0xADBF060E2B30C5BC*/ {
	uint64_t val;
	nativeInit(0xADBF060E2B30C5BC);
	*(const char**)(&val) = gxt;
	nativePush(val);
	*(int*)(&val) = slot;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0xADED7F5748ACAFE6() /*0xADED7F5748ACAFE6*/ {
	nativeInit(0xADED7F5748ACAFE6);
	nativeCall();
}
inline void UI_SET_BLIP_COORDS(Blip blip, float posX, float posY, float posZ) /*0xAE2AF67E9D9AF65D*/ {
	uint64_t val;
	nativeInit(0xAE2AF67E9D9AF65D);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(float*)(&val) = posX;
	nativePush(val);
	*(float*)(&val) = posY;
	nativePush(val);
	*(float*)(&val) = posZ;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_PRIORITY(Blip blip, int priority) /*0xAE9FC9EF6A9FAC79*/ {
	uint64_t val;
	nativeInit(0xAE9FC9EF6A9FAC79);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = priority;
	nativePush(val);
	nativeCall();
}
inline Any UI_0xAF42195A42C63BBA() /*0xAF42195A42C63BBA*/ {
	nativeInit(0xAF42195A42C63BBA); return *(Any*)(nativeCall());
}
inline bool UI__IS_RADAR_ENABLED() /*0xAF754F20EB5CD51A*/ {
	nativeInit(0xAF754F20EB5CD51A); return *(bool*)(nativeCall());
}
inline bool UI_IS_PAUSE_MENU_ACTIVE() /*0xB0034A223497FFCB*/ {
	nativeInit(0xB0034A223497FFCB); return *(bool*)(nativeCall());
}
inline void UI_0xB094BC1DB4018240(Any p0, Any p1, float p2, float p3) /*0xB094BC1DB4018240*/ {
	uint64_t val;
	nativeInit(0xB094BC1DB4018240);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool UI__IS_TEXT_CHAT_ACTIVE() /*0xB118AF58B5F332A1*/ {
	nativeInit(0xB118AF58B5F332A1); return *(bool*)(nativeCall());
}
inline void UI_SET_BLIP_FLASHES(Blip blip, bool toggle) /*0xB14552383D39CE3E*/ {
	uint64_t val;
	nativeInit(0xB14552383D39CE3E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_BRIGHT(Blip blip, bool toggle) /*0xB203913733F27884*/ {
	uint64_t val;
	nativeInit(0xB203913733F27884);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline const char* UI__GET_TEXT_SUBSTRING_SAFE(const char* text, int position, int length, int maxLength) /*0xB2798643312205C5*/ {
	uint64_t val;
	nativeInit(0xB2798643312205C5);
	*(const char**)(&val) = text;
	nativePush(val);
	*(int*)(&val) = position;
	nativePush(val);
	*(int*)(&val) = length;
	nativePush(val);
	*(int*)(&val) = maxLength;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Pickup UI_0xB2A592B04648A9CB() /*0xB2A592B04648A9CB*/ {
	nativeInit(0xB2A592B04648A9CB); return *(Pickup*)(nativeCall());
}
inline void UI_CLEAR_REMINDER_MESSAGE() /*0xB57D8DD645CFA2CF*/ {
	nativeInit(0xB57D8DD645CFA2CF);
	nativeCall();
}
inline Any UI_0xB6871B0555B02996(Any* p0, Any* p1, Any p2, Any* p3, Any* p4, Any p5) /*0xB6871B0555B02996*/ {
	uint64_t val;
	nativeInit(0xB6871B0555B02996);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(Any**)(&val) = p3;
	nativePush(val);
	*(Any**)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void UI_0xB695E2CD0A2DA9EE() /*0xB695E2CD0A2DA9EE*/ {
	nativeInit(0xB695E2CD0A2DA9EE);
	nativeCall();
}
inline void UI__SET_BLIP_FRIENDLY(Blip blip, bool toggle) /*0xB81656BC81FE24D1*/ {
	uint64_t val;
	nativeInit(0xB81656BC81FE24D1);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_BEGIN_TEXT_COMMAND_PRINT(const char* GxtEntry) /*0xB87A37EEB7FAA67D*/ {
	uint64_t val;
	nativeInit(0xB87A37EEB7FAA67D);
	*(const char**)(&val) = GxtEntry;
	nativePush(val);
	nativeCall();
}
inline void UI_0xB99C4E4D9499DF29(bool p0) /*0xB99C4E4D9499DF29*/ {
	uint64_t val;
	nativeInit(0xB99C4E4D9499DF29);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0xBA751764F0821256() /*0xBA751764F0821256*/ {
	nativeInit(0xBA751764F0821256);
	nativeCall();
}
inline void UI_0xBA8D65C1C65702E5(bool p0) /*0xBA8D65C1C65702E5*/ {
	uint64_t val;
	nativeInit(0xBA8D65C1C65702E5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0xBAE4F9B97CD43B30(bool p0) /*0xBAE4F9B97CD43B30*/ {
	uint64_t val;
	nativeInit(0xBAE4F9B97CD43B30);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_END_TEXT_COMMAND_SET_BLIP_NAME(Blip blip) /*0xBC38B49BCB83BC9B*/ {
	uint64_t val;
	nativeInit(0xBC38B49BCB83BC9B);
	*(Blip*)(&val) = blip;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_HUD_COMPONENT_ACTIVE(int id) /*0xBC4C9EA5391ECC0D*/ {
	uint64_t val;
	nativeInit(0xBC4C9EA5391ECC0D);
	*(int*)(&val) = id;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Blip UI_GET_BLIP_FROM_ENTITY(Entity entity) /*0xBC8DBDCA2436F7E8*/ {
	uint64_t val;
	nativeInit(0xBC8DBDCA2436F7E8);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI_RESPONDING_AS_TEMP(float p0) /*0xBD12C5EEE184C337*/ {
	uint64_t val;
	nativeInit(0xBD12C5EEE184C337);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__END_TEXT_COMMAND_BUSY_STRING(int busySpinnerType) /*0xBD12F8228410D9B4*/ {
	uint64_t val;
	nativeInit(0xBD12F8228410D9B4);
	*(int*)(&val) = busySpinnerType;
	nativePush(val);
	nativeCall();
}
inline Blip UI_ADD_BLIP_FOR_PICKUP(Pickup pickup) /*0xBE339365C863BD36*/ {
	uint64_t val;
	nativeInit(0xBE339365C863BD36);
	*(Pickup*)(&val) = pickup;
	nativePush(val);
	return *(Blip*)(nativeCall());
}
inline void UI__REMOVE_NOTIFICATION(int notificationId) /*0xBE4390CB40B3E627*/ {
	uint64_t val;
	nativeInit(0xBE4390CB40B3E627);
	*(int*)(&val) = notificationId;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_TEXT_COLOUR(int red, int green, int blue, int alpha) /*0xBE6B23FFA53FB442*/ {
	uint64_t val;
	nativeInit(0xBE6B23FFA53FB442);
	*(int*)(&val) = red;
	nativePush(val);
	*(int*)(&val) = green;
	nativePush(val);
	*(int*)(&val) = blue;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_AS_SHORT_RANGE(Blip blip, bool toggle) /*0xBE8BE4FE60E27B72*/ {
	uint64_t val;
	nativeInit(0xBE8BE4FE60E27B72);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_BLIP_INFO_ID_TYPE(Blip blip) /*0xBE9B0959FFD0779B*/ {
	uint64_t val;
	nativeInit(0xBE9B0959FFD0779B);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0xBF4F34A85CA2970C() /*0xBF4F34A85CA2970C*/ {
	nativeInit(0xBF4F34A85CA2970C);
	nativeCall();
}
inline int UI__CREATE_MP_GAMER_TAG(Ped ped, const char* username, bool pointedClanTag, bool isRockstarClan, const char* clanTag, Any p5) /*0xBFEFE3321A3F5015*/ {
	uint64_t val;
	nativeInit(0xBFEFE3321A3F5015);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(const char**)(&val) = username;
	nativePush(val);
	*(bool*)(&val) = pointedClanTag;
	nativePush(val);
	*(bool*)(&val) = isRockstarClan;
	nativePush(val);
	*(const char**)(&val) = clanTag;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_SET_TEXT_CENTRE(bool align) /*0xC02F4DBFB51D988B*/ {
	uint64_t val;
	nativeInit(0xC02F4DBFB51D988B);
	*(bool*)(&val) = align;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_DISPLAY_CASH() /*0xC2D15BEF167E27BC*/ {
	nativeInit(0xC2D15BEF167E27BC);
	nativeCall();
}
inline void UI_SET_WIDESCREEN_FORMAT(Any p0) /*0xC3B07BA00A83B0F1*/ {
	uint64_t val;
	nativeInit(0xC3B07BA00A83B0F1);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_SOCIAL_CLUB_ACTIVE() /*0xC406BE343FC4B9AF*/ {
	nativeInit(0xC406BE343FC4B9AF); return *(bool*)(nativeCall());
}
inline void UI_0xC4278F70131BAA6D(Any p0, bool p1) /*0xC4278F70131BAA6D*/ {
	uint64_t val;
	nativeInit(0xC4278F70131BAA6D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_0xC594B315EDF2D4AF(Ped ped) /*0xC594B315EDF2D4AF*/ {
	uint64_t val;
	nativeInit(0xC594B315EDF2D4AF);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(const char* labelName) /*0xC63CD5D2920ACBE7*/ {
	uint64_t val;
	nativeInit(0xC63CD5D2920ACBE7);
	*(const char**)(&val) = labelName;
	nativePush(val);
	nativeCall();
}
inline void UI_0xC65AB383CD91DF98() /*0xC65AB383CD91DF98*/ {
	nativeInit(0xC65AB383CD91DF98);
	nativeCall();
}
inline int UI__SET_NOTIFICATION_MESSAGE_3(const char* picName1, const char* picName2, bool p2, Any p3, const char* p4, const char* p5) /*0xC6F580E4C94926AC*/ {
	uint64_t val;
	nativeInit(0xC6F580E4C94926AC);
	*(const char**)(&val) = picName1;
	nativePush(val);
	*(const char**)(&val) = picName2;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(const char**)(&val) = p4;
	nativePush(val);
	*(const char**)(&val) = p5;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0xC78E239AC5B2DDB9(bool p0, Any p1, Any p2) /*0xC78E239AC5B2DDB9*/ {
	uint64_t val;
	nativeInit(0xC78E239AC5B2DDB9);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void UI_REMOVE_MULTIPLAYER_BANK_CASH() /*0xC7C6789AA1CFEDD0*/ {
	nativeInit(0xC7C6789AA1CFEDD0);
	nativeCall();
}
inline bool UI_0xC8E1071177A23BE5(Any* p0, Any* p1, Any* p2) /*0xC8E1071177A23BE5*/ {
	uint64_t val;
	nativeInit(0xC8E1071177A23BE5);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int UI__DRAW_NOTIFICATION_UNLOCK_2(const char* unlockLabel, int iconType, const char* unk2, int fadeInTime) /*0xC8F3AAF93D0600BF*/ {
	uint64_t val;
	nativeInit(0xC8F3AAF93D0600BF);
	*(const char**)(&val) = unlockLabel;
	nativePush(val);
	*(int*)(&val) = iconType;
	nativePush(val);
	*(const char**)(&val) = unk2;
	nativePush(val);
	*(int*)(&val) = fadeInTime;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool UI_0xCA6B2F7CE32AB653(Any p0, Any* p1, Any p2) /*0xCA6B2F7CE32AB653*/ {
	uint64_t val;
	nativeInit(0xCA6B2F7CE32AB653);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__SET_RADAR_ZOOM_LEVEL_THIS_FRAME(float zoomLevel) /*0xCB7CC0D58405AD41*/ {
	uint64_t val;
	nativeInit(0xCB7CC0D58405AD41);
	*(float*)(&val) = zoomLevel;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_PRINTS() /*0xCC33FA791322B9D9*/ {
	nativeInit(0xCC33FA791322B9D9);
	nativeCall();
}
inline void UI_0xCC3FDDED67BCFC63() /*0xCC3FDDED67BCFC63*/ {
	nativeInit(0xCC3FDDED67BCFC63);
	nativeCall();
}
inline void UI_END_TEXT_COMMAND_DISPLAY_TEXT(float x, float y) /*0xCD015E5BB0D96A57*/ {
	uint64_t val;
	nativeInit(0xCD015E5BB0D96A57);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void UI_0xCDCA26E80FAECB8F() /*0xCDCA26E80FAECB8F*/ {
	nativeInit(0xCDCA26E80FAECB8F);
	nativeCall();
}
inline const char* UI__GET_TEXT_SUBSTRING_SLICE(const char* text, int startPosition, int endPosition) /*0xCE94AEBA5D82908A*/ {
	uint64_t val;
	nativeInit(0xCE94AEBA5D82908A);
	*(const char**)(&val) = text;
	nativePush(val);
	*(int*)(&val) = startPosition;
	nativePush(val);
	*(int*)(&val) = endPosition;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void UI_0xCEF214315D276FD1(bool p0) /*0xCEF214315D276FD1*/ {
	uint64_t val;
	nativeInit(0xCEF214315D276FD1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_MP_GAMER_TAG_WANTED_LEVEL(int gamerTagId, int wantedlvl) /*0xCF228E2AA03099C3*/ {
	uint64_t val;
	nativeInit(0xCF228E2AA03099C3);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(int*)(&val) = wantedlvl;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_THIS_PRINT(const char* p0) /*0xCF708001E1E536DD*/ {
	uint64_t val;
	nativeInit(0xCF708001E1E536DD);
	*(const char**)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI__END_TEXT_COMMAND_OBJECTIVE(bool p0) /*0xCFDBDF5AE59BA0F4*/ {
	uint64_t val;
	nativeInit(0xCFDBDF5AE59BA0F4);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline const char* UI_GET_STREET_NAME_FROM_HASH_KEY(Hash hash) /*0xD0EF8A959B8A4CB9*/ {
	uint64_t val;
	nativeInit(0xD0EF8A959B8A4CB9);
	*(Hash*)(&val) = hash;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void UI__SET_MINIMAP_ATTITUDE_INDICATOR_LEVEL(float altitude, bool p1) /*0xD201F3FF917A506D*/ {
	uint64_t val;
	nativeInit(0xD201F3FF917A506D);
	*(float*)(&val) = altitude;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_WITH_ICON(int type, int image, const char* text) /*0xD202B92CBF1D816F*/ {
	uint64_t val;
	nativeInit(0xD202B92CBF1D816F);
	*(int*)(&val) = type;
	nativePush(val);
	*(int*)(&val) = image;
	nativePush(val);
	*(const char**)(&val) = text;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0xD2049635DEB9C375() /*0xD2049635DEB9C375*/ {
	nativeInit(0xD2049635DEB9C375);
	nativeCall();
}
inline void UI_0xD2B32BE3FC1626C6() /*0xD2B32BE3FC1626C6*/ {
	nativeInit(0xD2B32BE3FC1626C6);
	nativeCall();
}
inline void UI__SET_PED_AI_BLIP(int pedHandle, bool showViewCones) /*0xD30C50DF888D58B5*/ {
	uint64_t val;
	nativeInit(0xD30C50DF888D58B5);
	*(int*)(&val) = pedHandle;
	nativePush(val);
	*(bool*)(&val) = showViewCones;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_SCALE(Blip blip, float scale) /*0xD38744167B2FA257*/ {
	uint64_t val;
	nativeInit(0xD38744167B2FA257);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(float*)(&val) = scale;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_FLASH_TIMER(Blip blip, int duration) /*0xD3CD6FD297AE87CC*/ {
	uint64_t val;
	nativeInit(0xD3CD6FD297AE87CC);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	nativeCall();
}
inline bool UI__IS_LOADING_PROMPT_BEING_DISPLAYED() /*0xD422FCC5F239A915*/ {
	nativeInit(0xD422FCC5F239A915); return *(bool*)(nativeCall());
}
inline void UI_0xD4438C0564490E63() /*0xD4438C0564490E63*/ {
	nativeInit(0xD4438C0564490E63);
	nativeCall();
}
inline void UI_HIDE_HELP_TEXT_THIS_FRAME() /*0xD46923FC481CA285*/ {
	nativeInit(0xD46923FC481CA285);
	nativeCall();
}
inline void UI_SET_MP_GAMER_TAG_ALPHA(int gamerTagId, int component, int alpha) /*0xD48FE545CD46F857*/ {
	uint64_t val;
	nativeInit(0xD48FE545CD46F857);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(int*)(&val) = component;
	nativePush(val);
	*(int*)(&val) = alpha;
	nativePush(val);
	nativeCall();
}
inline void UI_0xD68A5FF8A3A89874(int r, int g, int b, int a) /*0xD68A5FF8A3A89874*/ {
	uint64_t val;
	nativeInit(0xD68A5FF8A3A89874);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline void UI_0xD8E694757BCEA8E9() /*0xD8E694757BCEA8E9*/ {
	nativeInit(0xD8E694757BCEA8E9);
	nativeCall();
}
inline bool UI_IS_BLIP_SHORT_RANGE(Blip blip) /*0xDA5F8727EB75B926*/ {
	uint64_t val;
	nativeInit(0xDA5F8727EB75B926);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UI_IS_HELP_MESSAGE_ON_SCREEN() /*0xDAD37F45428801AE*/ {
	nativeInit(0xDAD37F45428801AE); return *(bool*)(nativeCall());
}
inline bool UI_0xDAF87174BE7454FF(Any p0) /*0xDAF87174BE7454FF*/ {
	uint64_t val;
	nativeInit(0xDAF87174BE7454FF);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0xDB34E8D56FC13B08(Any p0, bool p1, bool p2) /*0xDB34E8D56FC13B08*/ {
	uint64_t val;
	nativeInit(0xDB34E8D56FC13B08);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline float UI__GET_TEXT_SCALE_HEIGHT(float size, int font) /*0xDB88A37483346780*/ {
	uint64_t val;
	nativeInit(0xDB88A37483346780);
	*(float*)(&val) = size;
	nativePush(val);
	*(int*)(&val) = font;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void UI_SET_WARNING_MESSAGE_WITH_HEADER(const char* entryHeader, const char* entryLine1, int instructionalKey, const char* entryLine2, bool p4, Any p5, Any* p6, Any* p7, bool background) /*0xDC38CC1E35B6A5D7*/ {
	uint64_t val;
	nativeInit(0xDC38CC1E35B6A5D7);
	*(const char**)(&val) = entryHeader;
	nativePush(val);
	*(const char**)(&val) = entryLine1;
	nativePush(val);
	*(int*)(&val) = instructionalKey;
	nativePush(val);
	*(const char**)(&val) = entryLine2;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any**)(&val) = p6;
	nativePush(val);
	*(Any**)(&val) = p7;
	nativePush(val);
	*(bool*)(&val) = background;
	nativePush(val);
	nativeCall();
}
inline Blip UI_GET_MAIN_PLAYER_BLIP_ID() /*0xDCD4EC3F419D02FA*/ {
	nativeInit(0xDCD4EC3F419D02FA); return *(Blip*)(nativeCall());
}
inline void UI_0xDCFB5D4DB8BF367E(Any p0, bool p1) /*0xDCFB5D4DB8BF367E*/ {
	uint64_t val;
	nativeInit(0xDCFB5D4DB8BF367E);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int id) /*0xDD100EB17A94FF65*/ {
	uint64_t val;
	nativeInit(0xDD100EB17A94FF65);
	*(int*)(&val) = id;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_MULTIPLAYER_BANK_CASH() /*0xDD21B55DF695CD0A*/ {
	nativeInit(0xDD21B55DF695CD0A);
	nativeCall();
}
inline bool UI_0xDD2238F57B977751(Any p0) /*0xDD2238F57B977751*/ {
	uint64_t val;
	nativeInit(0xDD2238F57B977751);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_PAUSE_MENU_ACTIVATE_CONTEXT(Hash contextHash) /*0xDD564BDD0472C936*/ {
	uint64_t val;
	nativeInit(0xDD564BDD0472C936);
	*(Hash*)(&val) = contextHash;
	nativePush(val);
	nativeCall();
}
inline int UI__DRAW_NOTIFICATION_WITH_BUTTON(int type, const char* button, const char* text) /*0xDD6CB2CCE7C2735C*/ {
	uint64_t val;
	nativeInit(0xDD6CB2CCE7C2735C);
	*(int*)(&val) = type;
	nativePush(val);
	*(const char**)(&val) = button;
	nativePush(val);
	*(const char**)(&val) = text;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any UI_0xDE03620F8703A9DF() /*0xDE03620F8703A9DF*/ {
	nativeInit(0xDE03620F8703A9DF); return *(Any*)(nativeCall());
}
inline void UI_SET_MP_GAMER_TAG_NAME(int gamerTagId, const char* string) /*0xDEA2B8283BAA3944*/ {
	uint64_t val;
	nativeInit(0xDEA2B8283BAA3944);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	*(const char**)(&val) = string;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_PAUSE_MENU_ACTIVE(bool toggle) /*0xDF47FC56C71569CF*/ {
	uint64_t val;
	nativeInit(0xDF47FC56C71569CF);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int UI_GET_BLIP_COLOUR(Blip blip) /*0xDF729E8D20CF7327*/ {
	uint64_t val;
	nativeInit(0xDF729E8D20CF7327);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_SET_BLIP_SPRITE(Blip blip, int spriteId) /*0xDF735600A4696DAF*/ {
	uint64_t val;
	nativeInit(0xDF735600A4696DAF);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = spriteId;
	nativePush(val);
	nativeCall();
}
inline float UI_0xE0130B41D3CF4574() /*0xE0130B41D3CF4574*/ {
	nativeInit(0xE0130B41D3CF4574); return *(float*)(nativeCall());
}
inline void UI_BEGIN_TEXT_COMMAND_CLEAR_PRINT(const char* text) /*0xE124FA80A759019C*/ {
	uint64_t val;
	nativeInit(0xE124FA80A759019C);
	*(const char**)(&val) = text;
	nativePush(val);
	nativeCall();
}
inline bool UI_IS_WARNING_MESSAGE_ACTIVE() /*0xE18B138FABC53103*/ {
	nativeInit(0xE18B138FABC53103); return *(bool*)(nativeCall());
}
inline void UI_0xE1CD1E48E025E661() /*0xE1CD1E48E025E661*/ {
	nativeInit(0xE1CD1E48E025E661);
	nativeCall();
}
inline void UI_SET_BLIP_HIGH_DETAIL(Blip blip, bool toggle) /*0xE2590BC29220CEBB*/ {
	uint64_t val;
	nativeInit(0xE2590BC29220CEBB);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) /*0xE374C498D8BADC14*/ {
	uint64_t val;
	nativeInit(0xE374C498D8BADC14);
	*(int*)(&val) = id;
	nativePush(val);
	nativeCall();
}
inline Any UI_0xE3B05614DCE1D014(Any p0) /*0xE3B05614DCE1D014*/ {
	uint64_t val;
	nativeInit(0xE3B05614DCE1D014);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool UI_IS_BLIP_ON_MINIMAP(Blip blip) /*0xE41CA53051197A27*/ {
	uint64_t val;
	nativeInit(0xE41CA53051197A27);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI__SET_MISSION_NAME_2(bool p0, const char* name) /*0xE45087D85F468BC2*/ {
	uint64_t val;
	nativeInit(0xE45087D85F468BC2);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_AI_BLIP_TYPE(Ped ped, int type) /*0xE52B8E7F85D39A08*/ {
	uint64_t val;
	nativeInit(0xE52B8E7F85D39A08);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	nativeCall();
}
inline void UI_0xE67C6DFD386EA5E7(bool p0) /*0xE67C6DFD386EA5E7*/ {
	uint64_t val;
	nativeInit(0xE67C6DFD386EA5E7);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0xE6DE0561D9232A64() /*0xE6DE0561D9232A64*/ {
	nativeInit(0xE6DE0561D9232A64);
	nativeCall();
}
inline void UI_ADD_TEXT_COMPONENT_FLOAT(float value, int decimalPlaces) /*0xE7DCB5B874BCD96E*/ {
	uint64_t val;
	nativeInit(0xE7DCB5B874BCD96E);
	*(float*)(&val) = value;
	nativePush(val);
	*(int*)(&val) = decimalPlaces;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_RADAR_AS_EXTERIOR_THIS_FRAME() /*0xE81B7D2A3DAB2D81*/ {
	nativeInit(0xE81B7D2A3DAB2D81);
	nativeCall();
}
inline bool UI_RELEASE_NAMED_RENDERTARGET(Any* p0) /*0xE9F6FFE837354DD4*/ {
	uint64_t val;
	nativeInit(0xE9F6FFE837354DD4);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_SET_BLIP_NAME_FROM_TEXT_FILE(Blip blip, const char* gxtEntry) /*0xEAA0FFE120D92784*/ {
	uint64_t val;
	nativeInit(0xEAA0FFE120D92784);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(const char**)(&val) = gxtEntry;
	nativePush(val);
	nativeCall();
}
inline void UI__SHOW_WEAPON_WHEEL(bool forcedShow) /*0xEB354E5376BC81A7*/ {
	uint64_t val;
	nativeInit(0xEB354E5376BC81A7);
	*(bool*)(&val) = forcedShow;
	nativePush(val);
	nativeCall();
}
inline bool UI__HAS_MP_GAMER_TAG_2(int gamerTagId) /*0xEB709A36958ABE0D*/ {
	uint64_t val;
	nativeInit(0xEB709A36958ABE0D);
	*(int*)(&val) = gamerTagId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void UI_0xEC9264727EEC0F28() /*0xEC9264727EEC0F28*/ {
	nativeInit(0xEC9264727EEC0F28);
	nativeCall();
}
inline void UI_0xECF128344E9FF9F1(bool p0) /*0xECF128344E9FF9F1*/ {
	uint64_t val;
	nativeInit(0xECF128344E9FF9F1);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UI_0xEE4C0E6DBC6F2C6F() /*0xEE4C0E6DBC6F2C6F*/ {
	nativeInit(0xEE4C0E6DBC6F2C6F);
	nativeCall();
}
inline void UI__SET_MP_GAMER_TAG_(int headDisplayId, bool p1) /*0xEE76FF7E6A0166B0*/ {
	uint64_t val;
	nativeInit(0xEE76FF7E6A0166B0);
	*(int*)(&val) = headDisplayId;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_ACTIVATE_FRONTEND_MENU(Hash menuhash, bool Toggle_Pause, int component) /*0xEF01D36B9C9D0C7B*/ {
	uint64_t val;
	nativeInit(0xEF01D36B9C9D0C7B);
	*(Hash*)(&val) = menuhash;
	nativePush(val);
	*(bool*)(&val) = Toggle_Pause;
	nativePush(val);
	*(int*)(&val) = component;
	nativePush(val);
	nativeCall();
}
inline bool UI_SET_USERIDS_UIHIDDEN(Any p0, Any* p1) /*0xEF4CED81CEBEDC6D*/ {
	uint64_t val;
	nativeInit(0xEF4CED81CEBEDC6D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int UI__DRAW_NOTIFICATION_4(bool blink, bool p1) /*0xF020C96915705B3A*/ {
	uint64_t val;
	nativeInit(0xF020C96915705B3A);
	*(bool*)(&val) = blink;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int UI_GET_LENGTH_OF_LITERAL_STRING(const char* string) /*0xF030907CCBB8A9FD*/ {
	uint64_t val;
	nativeInit(0xF030907CCBB8A9FD);
	*(const char**)(&val) = string;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void UI_0xF06EBB91A81E09E3(bool p0) /*0xF06EBB91A81E09E3*/ {
	uint64_t val;
	nativeInit(0xF06EBB91A81E09E3);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any UI_0xF13FE2A80C05C561() /*0xF13FE2A80C05C561*/ {
	nativeInit(0xF13FE2A80C05C561); return *(Any*)(nativeCall());
}
inline void UI_0xF1A6C18B35BCADE6(bool p0) /*0xF1A6C18B35BCADE6*/ {
	uint64_t val;
	nativeInit(0xF1A6C18B35BCADE6);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any UI_0xF284AC67940C6812() /*0xF284AC67940C6812*/ {
	nativeInit(0xF284AC67940C6812); return *(Any*)(nativeCall());
}
inline void UI_FLASH_MINIMAP_DISPLAY() /*0xF2DD778C22B15BDA*/ {
	nativeInit(0xF2DD778C22B15BDA);
	nativeCall();
}
inline void UI__SET_HUD_COLOUR(int hudColorIndex, int r, int g, int b, int a) /*0xF314CF4F0211894E*/ {
	uint64_t val;
	nativeInit(0xF314CF4F0211894E);
	*(int*)(&val) = hudColorIndex;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	*(int*)(&val) = a;
	nativePush(val);
	nativeCall();
}
inline void UI_LINK_NAMED_RENDERTARGET(Hash hash) /*0xF6C09E276AEB3F2D*/ {
	uint64_t val;
	nativeInit(0xF6C09E276AEB3F2D);
	*(Hash*)(&val) = hash;
	nativePush(val);
	nativeCall();
}
inline void UI_SET_BLIP_ROTATION(Blip blip, int rotation) /*0xF87683CDF73C3F6E*/ {
	uint64_t val;
	nativeInit(0xF87683CDF73C3F6E);
	*(Blip*)(&val) = blip;
	nativePush(val);
	*(int*)(&val) = rotation;
	nativePush(val);
	nativeCall();
}
inline void UI__SET_MINIMAP_REVEALED(bool toggle) /*0xF8DEE0A5600CBB93*/ {
	uint64_t val;
	nativeInit(0xF8DEE0A5600CBB93);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void UI_BEGIN_TEXT_COMMAND_SET_BLIP_NAME(const char* gxtentry) /*0xF9113A30DE5C6670*/ {
	uint64_t val;
	nativeInit(0xF9113A30DE5C6670);
	*(const char**)(&val) = gxtentry;
	nativePush(val);
	nativeCall();
}
inline void UI_0xF98E4B3E56AFC7B1(Any p0, float p1) /*0xF98E4B3E56AFC7B1*/ {
	uint64_t val;
	nativeInit(0xF98E4B3E56AFC7B1);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UI__GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY) /*0xF9904D11F1ACBEC3*/ {
	uint64_t val;
	nativeInit(0xF9904D11F1ACBEC3);
	*(float*)(&val) = worldX;
	nativePush(val);
	*(float*)(&val) = worldY;
	nativePush(val);
	*(float*)(&val) = worldZ;
	nativePush(val);
	*(float**)(&val) = screenX;
	nativePush(val);
	*(float**)(&val) = screenY;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 UI_GET_BLIP_INFO_ID_COORD(Blip blip) /*0xFA7C7F0AADF25D09*/ {
	uint64_t val;
	nativeInit(0xFA7C7F0AADF25D09);
	*(Blip*)(&val) = blip;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void UI_END_TEXT_COMMAND_CLEAR_PRINT() /*0xFCC75460ABA29378*/ {
	nativeInit(0xFCC75460ABA29378);
	nativeCall();
}
inline void UI_SET_MULTIPLAYER_HUD_CASH(int p0, int p1) /*0xFD1D220394BCB824*/ {
	uint64_t val;
	nativeInit(0xFD1D220394BCB824);
	*(int*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UI_0xFDB423997FA30340() /*0xFDB423997FA30340*/ {
	nativeInit(0xFDB423997FA30340);
	nativeCall();
}
inline void UI_0xFDD85225B2DEA55E() /*0xFDD85225B2DEA55E*/ {
	nativeInit(0xFDD85225B2DEA55E);
	nativeCall();
}
inline void UI_0xFDEC055AB549E328() /*0xFDEC055AB549E328*/ {
	nativeInit(0xFDEC055AB549E328);
	nativeCall();
}
inline void UI_SET_NEW_WAYPOINT(float x, float y) /*0xFE43368D2AA4F2FC*/ {
	uint64_t val;
	nativeInit(0xFE43368D2AA4F2FC);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline void UI_CLEAR_GPS_PLAYER_WAYPOINT() /*0xFF4FB7C8CDFA3DA7*/ {
	nativeInit(0xFF4FB7C8CDFA3DA7);
	nativeCall();
}
inline int UNK__GET_CURRENT_LANGUAGE_ID() /*0x2BDD44CC428A7EAE*/ {
	nativeInit(0x2BDD44CC428A7EAE); return *(int*)(nativeCall());
}
inline Any UNK_0x8AA464D4E0F6ACCD() /*0x8AA464D4E0F6ACCD*/ {
	nativeInit(0x8AA464D4E0F6ACCD); return *(Any*)(nativeCall());
}
inline int UNK__GET_USER_LANGUAGE_ID() /*0xA8AE43AEC1A61314*/ {
	nativeInit(0xA8AE43AEC1A61314); return *(int*)(nativeCall());
}
inline void UNK_0xB0C56BD3D808D863(bool p0) /*0xB0C56BD3D808D863*/ {
	uint64_t val;
	nativeInit(0xB0C56BD3D808D863);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UNK__IS_UI_LOADING_MULTIPLAYER() /*0xC6DC823253FBB366*/ {
	nativeInit(0xC6DC823253FBB366); return *(bool*)(nativeCall());
}
inline void UNK_0xC7E7181C09F33B69(bool p0) /*0xC7E7181C09F33B69*/ {
	uint64_t val;
	nativeInit(0xC7E7181C09F33B69);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UNK__RETURN_ZERO2() /*0xEF7D17BC6C85264C*/ {
	nativeInit(0xEF7D17BC6C85264C); return *(bool*)(nativeCall());
}
inline int UNK__RETURN_ZERO() /*0xF2CA003F167E21D2*/ {
	nativeInit(0xF2CA003F167E21D2); return *(int*)(nativeCall());
}
inline void UNK_0xFA1E0E893D915215(bool p0) /*0xFA1E0E893D915215*/ {
	uint64_t val;
	nativeInit(0xFA1E0E893D915215);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UNK__IS_IN_LOADING_SCREEN(bool p0) /*0xFC309E94546FCDB5*/ {
	uint64_t val;
	nativeInit(0xFC309E94546FCDB5);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void UNK1__STOP_RECORDING_AND_SAVE_CLIP() /*0x071A5197D6AFC8B3*/ {
	nativeInit(0x071A5197D6AFC8B3);
	nativeCall();
}
inline void UNK1_0x13B350B8AD0EEE10() /*0x13B350B8AD0EEE10*/ {
	nativeInit(0x13B350B8AD0EEE10);
	nativeCall();
}
inline bool UNK1__IS_RECORDING() /*0x1897CA71995A90B4*/ {
	nativeInit(0x1897CA71995A90B4); return *(bool*)(nativeCall());
}
inline void UNK1_0x208784099002BC30(const char* missionNameLabel, Any p1) /*0x208784099002BC30*/ {
	uint64_t val;
	nativeInit(0x208784099002BC30);
	*(const char**)(&val) = missionNameLabel;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void UNK1_0x293220DA1B46CEBC(float p0, float p1, int p2) /*0x293220DA1B46CEBC*/ {
	uint64_t val;
	nativeInit(0x293220DA1B46CEBC);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool UNK1_0x33D47E85B476ABCD(bool* p0) /*0x33D47E85B476ABCD*/ {
	uint64_t val;
	nativeInit(0x33D47E85B476ABCD);
	*(bool**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK1_0x4282E08174868BE3() /*0x4282E08174868BE3*/ {
	nativeInit(0x4282E08174868BE3); return *(Any*)(nativeCall());
}
inline void UNK1_0x48621C9FCA3EBD28(int p0) /*0x48621C9FCA3EBD28*/ {
	uint64_t val;
	nativeInit(0x48621C9FCA3EBD28);
	*(int*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UNK1_0x644546EC5287471B() /*0x644546EC5287471B*/ {
	nativeInit(0x644546EC5287471B); return *(bool*)(nativeCall());
}
inline void UNK1_0x66972397E0757E7A(Any p0, Any p1, Any p2) /*0x66972397E0757E7A*/ {
	uint64_t val;
	nativeInit(0x66972397E0757E7A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void UNK1_0x81CBAE94390F9F89() /*0x81CBAE94390F9F89*/ {
	nativeInit(0x81CBAE94390F9F89);
	nativeCall();
}
inline void UNK1__STOP_RECORDING_AND_DISCARD_CLIP() /*0x88BB3507ED41A240*/ {
	nativeInit(0x88BB3507ED41A240);
	nativeCall();
}
inline void UNK1_0xAF66DCEE6609B148() /*0xAF66DCEE6609B148*/ {
	nativeInit(0xAF66DCEE6609B148);
	nativeCall();
}
inline void UNK1__START_RECORDING(int mode) /*0xC3AC2FFF9612AC81*/ {
	uint64_t val;
	nativeInit(0xC3AC2FFF9612AC81);
	*(int*)(&val) = mode;
	nativePush(val);
	nativeCall();
}
inline Any UNK1_0xDF4B952F7D381B95() /*0xDF4B952F7D381B95*/ {
	nativeInit(0xDF4B952F7D381B95); return *(Any*)(nativeCall());
}
inline void UNK1_0xEB2D525B57F42B40() /*0xEB2D525B57F42B40*/ {
	nativeInit(0xEB2D525B57F42B40);
	nativeCall();
}
inline void UNK1_0xF854439EFBB3B583() /*0xF854439EFBB3B583*/ {
	nativeInit(0xF854439EFBB3B583);
	nativeCall();
}
inline void UNK2__RESET_EDITOR_VALUES() /*0x3353D13F09307691*/ {
	nativeInit(0x3353D13F09307691);
	nativeCall();
}
inline void UNK2__ACTIVATE_ROCKSTAR_EDITOR() /*0x49DA8145672B2725*/ {
	nativeInit(0x49DA8145672B2725);
	nativeCall();
}
inline void UNK2_0x5AD3932DAEB1E5D3() /*0x5AD3932DAEB1E5D3*/ {
	nativeInit(0x5AD3932DAEB1E5D3);
	nativeCall();
}
inline void UNK2_0x7E2BD3EF6C205F09(const char* p0, bool p1) /*0x7E2BD3EF6C205F09*/ {
	uint64_t val;
	nativeInit(0x7E2BD3EF6C205F09);
	*(const char**)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool UNK2__IS_INTERIOR_RENDERING_DISABLED() /*0x95AB8B5C992C7B58*/ {
	nativeInit(0x95AB8B5C992C7B58); return *(bool*)(nativeCall());
}
inline void UNK2_0xE058175F8EAFE79A(bool p0) /*0xE058175F8EAFE79A*/ {
	uint64_t val;
	nativeInit(0xE058175F8EAFE79A);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool UNK3_0x0395CB47B022E62C(Any* p0) /*0x0395CB47B022E62C*/ {
	uint64_t val;
	nativeInit(0x0395CB47B022E62C);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3_0x0A6D923DFFC9BD89() /*0x0A6D923DFFC9BD89*/ {
	nativeInit(0x0A6D923DFFC9BD89); return *(Any*)(nativeCall());
}
inline Any UNK3__NETWORK_SHOP_DELETE_SET_TELEMETRY_NONCE_SEED() /*0x112CEF1615A1139F*/ {
	nativeInit(0x112CEF1615A1139F); return *(Any*)(nativeCall());
}
inline bool UNK3_0x170910093218C8B9(Any* p0) /*0x170910093218C8B9*/ {
	uint64_t val;
	nativeInit(0x170910093218C8B9);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3_0x23789E777D14CE44() /*0x23789E777D14CE44*/ {
	nativeInit(0x23789E777D14CE44); return *(Any*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_BASKET_START(Any* p0, int p1, int p2, int p3) /*0x279F08B1A4B29B7E*/ {
	uint64_t val;
	nativeInit(0x279F08B1A4B29B7E);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3__NETWORK_SHOP_BASKET_IS_FULL() /*0x27F76CC6C55AD30E*/ {
	nativeInit(0x27F76CC6C55AD30E); return *(Any*)(nativeCall());
}
inline Any UNK3_0x2B949A1E6AEC8F6A() /*0x2B949A1E6AEC8F6A*/ {
	nativeInit(0x2B949A1E6AEC8F6A); return *(Any*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_SESSION_APPLY_RECEIVED_DATA(Any p0) /*0x2F41D51BA3BCD1F1*/ {
	uint64_t val;
	nativeInit(0x2F41D51BA3BCD1F1);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3_0x350AA5EBC03D3BD2() /*0x350AA5EBC03D3BD2*/ {
	nativeInit(0x350AA5EBC03D3BD2); return *(Any*)(nativeCall());
}
inline Any UNK3_0x357B152EF96C30B6() /*0x357B152EF96C30B6*/ {
	nativeInit(0x357B152EF96C30B6); return *(Any*)(nativeCall());
}
inline bool UNK3_0x35A1B3E1D1315CFA(bool p0, bool p1) /*0x35A1B3E1D1315CFA*/ {
	uint64_t val;
	nativeInit(0x35A1B3E1D1315CFA);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_CHECKOUT_START(Any p0) /*0x39BE7CEA8D9CC8E6*/ {
	uint64_t val;
	nativeInit(0x39BE7CEA8D9CC8E6);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3_0x3C4487461E9B0DCB() /*0x3C4487461E9B0DCB*/ {
	nativeInit(0x3C4487461E9B0DCB); return *(Any*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_BEGIN_SERVICE(int* transactionID, Hash p1, Hash transactionHash, Hash transactionType, int ammount, int mode) /*0x3C5FD37B5499582E*/ {
	uint64_t val;
	nativeInit(0x3C5FD37B5499582E);
	*(int**)(&val) = transactionID;
	nativePush(val);
	*(Hash*)(&val) = p1;
	nativePush(val);
	*(Hash*)(&val) = transactionHash;
	nativePush(val);
	*(Hash*)(&val) = transactionType;
	nativePush(val);
	*(int*)(&val) = ammount;
	nativePush(val);
	*(int*)(&val) = mode;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED() /*0x498C1E05CE5F7877*/ {
	nativeInit(0x498C1E05CE5F7877); return *(bool*)(nativeCall());
}
inline bool UNK3_0x51F1A8E48C3D2F6D(Any p0, bool p1, Any p2) /*0x51F1A8E48C3D2F6D*/ {
	uint64_t val;
	nativeInit(0x51F1A8E48C3D2F6D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3_0x72EB7BA9B69BF6AB() /*0x72EB7BA9B69BF6AB*/ {
	nativeInit(0x72EB7BA9B69BF6AB); return *(bool*)(nativeCall());
}
inline int UNK3_0x74A0FD0688F1EE45(int p0) /*0x74A0FD0688F1EE45*/ {
	uint64_t val;
	nativeInit(0x74A0FD0688F1EE45);
	*(int*)(&val) = p0;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_GET_TRANSACTIONS_DISABLED() /*0x810E8431C0614BF9*/ {
	nativeInit(0x810E8431C0614BF9); return *(bool*)(nativeCall());
}
inline Any UNK3_0x85F6C9ABA1DE2BCF() /*0x85F6C9ABA1DE2BCF*/ {
	nativeInit(0x85F6C9ABA1DE2BCF); return *(Any*)(nativeCall());
}
inline bool UNK3_0x897433D292B44130(Any* p0, Any* p1) /*0x897433D292B44130*/ {
	uint64_t val;
	nativeInit(0x897433D292B44130);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_SET_TELEMETRY_NONCE_SEED(Any p0) /*0x9507D4271988E1AE*/ {
	uint64_t val;
	nativeInit(0x9507D4271988E1AE);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_START_SESSION(Any p0) /*0xA135AC892A58FC07*/ {
	uint64_t val;
	nativeInit(0xA135AC892A58FC07);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_BASKET_END() /*0xA65568121DF2EA26*/ {
	nativeInit(0xA65568121DF2EA26); return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_GET_TRANSACTIONS_ENABLED_FOR_CHARACTER(int mpChar) /*0xB24F0944DA203D9E*/ {
	uint64_t val;
	nativeInit(0xB24F0944DA203D9E);
	*(int*)(&val) = mpChar;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3_0xC13C38E47EA5DF31(Any* p0) /*0xC13C38E47EA5DF31*/ {
	uint64_t val;
	nativeInit(0xC13C38E47EA5DF31);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int UNK3__NETWORK_SHOP_GET_PRICE(Hash itemHash, Hash categoryHash, int unused) /*0xC27009422FCCA88D*/ {
	uint64_t val;
	nativeInit(0xC27009422FCCA88D);
	*(Hash*)(&val) = itemHash;
	nativePush(val);
	*(Hash*)(&val) = categoryHash;
	nativePush(val);
	*(int*)(&val) = unused;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool UNK3__NETWORK_TRANSFER_WALLET_TO_BANK(int charStatInt, int amount) /*0xC2F7FE5309181C7D*/ {
	uint64_t val;
	nativeInit(0xC2F7FE5309181C7D);
	*(int*)(&val) = charStatInt;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3_0xCF38DAFBB49EDE5E(Any* p0) /*0xCF38DAFBB49EDE5E*/ {
	uint64_t val;
	nativeInit(0xCF38DAFBB49EDE5E);
	*(Any**)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_TRANSFER_BANK_TO_WALLET(int charStatInt, int amount) /*0xD47A2C1BA117471D*/ {
	uint64_t val;
	nativeInit(0xD47A2C1BA117471D);
	*(int*)(&val) = charStatInt;
	nativePush(val);
	*(int*)(&val) = amount;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1) /*0xE1A0450ED46A7812*/ {
	uint64_t val;
	nativeInit(0xE1A0450ED46A7812);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_TERMINATE_SERVICE(int transactionID) /*0xE2A99A9B524BEFFF*/ {
	uint64_t val;
	nativeInit(0xE2A99A9B524BEFFF);
	*(int*)(&val) = transactionID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any UNK3_0xE3E5A7C64CA2C6ED() /*0xE3E5A7C64CA2C6ED*/ {
	nativeInit(0xE3E5A7C64CA2C6ED); return *(Any*)(nativeCall());
}
inline bool UNK3__NETWORK_SHOP_BASKET_ADD_ITEM(Any* p0, Any p1) /*0xF30980718C8ED876*/ {
	uint64_t val;
	nativeInit(0xF30980718C8ED876);
	*(Any**)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* UNK3__GET_ONLINE_VERSION() /*0xFCA9373EF340AC0A*/ {
	nativeInit(0xFCA9373EF340AC0A); return *(const char**)(nativeCall());
}
inline void VEHICLE_REMOVE_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) /*0x00689CDE5F7C6787*/ {
	uint64_t val;
	nativeInit(0x00689CDE5F7C6787);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE__GET_VEHICLE_CLASS_MAX_SPEED(int vehicleClass) /*0x00C09F246ABEDD82*/ {
	uint64_t val;
	nativeInit(0x00C09F246ABEDD82);
	*(int*)(&val) = vehicleClass;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0x02398B627547189C(Vehicle p0, bool p1) /*0x02398B627547189C*/ {
	uint64_t val;
	nativeInit(0x02398B627547189C);
	*(Vehicle*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(bool p0, int modelHash, int* p2) /*0x055BF0AC0C34F4FD*/ {
	uint64_t val;
	nativeInit(0x055BF0AC0C34F4FD);
	*(bool*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = modelHash;
	nativePush(val);
	*(int**)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x063AE2B2CC273588(Any p0, bool p1) /*0x063AE2B2CC273588*/ {
	uint64_t val;
	nativeInit(0x063AE2B2CC273588);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x06582AFF74894C75(Vehicle vehicle, bool p1) /*0x06582AFF74894C75*/ {
	uint64_t val;
	nativeInit(0x06582AFF74894C75);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_CREATES_MONEY_PICKUPS_WHEN_EXPLODED(Vehicle vehicle, bool toggle) /*0x068F64F2470F9656*/ {
	uint64_t val;
	nativeInit(0x068F64F2470F9656);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_HAS_PRELOAD_MODS_FINISHED(Any p0) /*0x06F43E5175EB6D96*/ {
	uint64_t val;
	nativeInit(0x06F43E5175EB6D96);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_STEER_UNLOCK_BIAS(Vehicle vehicle, bool toggle) /*0x07116E24E9D1929D*/ {
	uint64_t val;
	nativeInit(0x07116E24E9D1929D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Entity VEHICLE_GET_TRAIN_CARRIAGE(Vehicle train, int trailerNumber) /*0x08AAFD0814722BC3*/ {
	uint64_t val;
	nativeInit(0x08AAFD0814722BC3);
	*(Vehicle*)(&val) = train;
	nativePush(val);
	*(int*)(&val) = trailerNumber;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_RUDDER_BROKEN(Vehicle vehicle, bool toggle) /*0x09606148B6C71DEF*/ {
	uint64_t val;
	nativeInit(0x09606148B6C71DEF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x0A436B8643716D14() /*0x0A436B8643716D14*/ {
	nativeInit(0x0A436B8643716D14);
	nativeCall();
}
inline void VEHICLE_0x0A6A279F3AA4FD70(Vehicle vehicle, bool p1) /*0x0A6A279F3AA4FD70*/ {
	uint64_t val;
	nativeInit(0x0A6A279F3AA4FD70);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x0AD9E8F87FF7C16F(Any p0, bool p1) /*0x0AD9E8F87FF7C16F*/ {
	uint64_t val;
	nativeInit(0x0AD9E8F87FF7C16F);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x0CDDA42F9E360CA6(Vehicle vehicle, bool toggle) /*0x0CDDA42F9E360CA6*/ {
	uint64_t val;
	nativeInit(0x0CDDA42F9E360CA6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DETACH_VEHICLE_FROM_CARGOBOB(Vehicle vehicle, Vehicle cargobob) /*0x0E21D3DF1051399D*/ {
	uint64_t val;
	nativeInit(0x0E21D3DF1051399D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(Any p0, Any p1) /*0x0E48D1C262390950*/ {
	uint64_t val;
	nativeInit(0x0E48D1C262390950);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int VEHICLE_GET_VEHICLE_WINDOW_TINT(Vehicle vehicle) /*0x0EE21293DAD47C95*/ {
	uint64_t val;
	nativeInit(0x0EE21293DAD47C95);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x0F3B4D4E43177236(Any p0, bool p1) /*0x0F3B4D4E43177236*/ {
	uint64_t val;
	nativeInit(0x0F3B4D4E43177236);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_STOP_ALL_GARAGE_ACTIVITY() /*0x0F87E938BDF29D66*/ {
	nativeInit(0x0F87E938BDF29D66);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_MODEL_IS_SUPPRESSED(Hash model, bool suppressed) /*0x0FC2D89AC25A5814*/ {
	uint64_t val;
	nativeInit(0x0FC2D89AC25A5814);
	*(Hash*)(&val) = model;
	nativePush(val);
	*(bool*)(&val) = suppressed;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(int recordingID) /*0x102D125411A7B6E6*/ {
	uint64_t val;
	nativeInit(0x102D125411A7B6E6);
	*(int*)(&val) = recordingID;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE__REMOVE_SPEED_ZONE(int speedzone) /*0x1033371FC8E842A7*/ {
	uint64_t val;
	nativeInit(0x1033371FC8E842A7);
	*(int*)(&val) = speedzone;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x10655FAB9915623D(Any p0, Any p1) /*0x10655FAB9915623D*/ {
	uint64_t val;
	nativeInit(0x10655FAB9915623D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1093408B4B9D1146(Any p0, float p1) /*0x1093408B4B9D1146*/ {
	uint64_t val;
	nativeInit(0x1093408B4B9D1146);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_FIXED(Vehicle vehicle) /*0x115722B1B9C14C1C*/ {
	uint64_t val;
	nativeInit(0x115722B1B9C14C1C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_ARE_ALL_VEHICLE_WINDOWS_INTACT(Vehicle vehicle) /*0x11D862A3E977A9EF*/ {
	uint64_t val;
	nativeInit(0x11D862A3E977A9EF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_DOES_EXTRA_EXIST(Vehicle vehicle, int extraId) /*0x1262D55792428154*/ {
	uint64_t val;
	nativeInit(0x1262D55792428154);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = extraId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_IN_BURNOUT(Vehicle vehicle) /*0x1297A88E081430EB*/ {
	uint64_t val;
	nativeInit(0x1297A88E081430EB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) /*0x146DF9EC4C4B9FD4*/ {
	uint64_t val;
	nativeInit(0x146DF9EC4C4B9FD4);
	*(Vehicle*)(&val) = towTruck;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_SEARCHLIGHT(Vehicle heli, bool toggle, bool canBeUsedByAI) /*0x14E85C5EE7A4D542*/ {
	uint64_t val;
	nativeInit(0x14E85C5EE7A4D542);
	*(Vehicle*)(&val) = heli;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(bool*)(&val) = canBeUsedByAI;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_SET_TRAIN_CRUISE_SPEED(Vehicle train, float speed) /*0x16469284DB8C62B5*/ {
	uint64_t val;
	nativeInit(0x16469284DB8C62B5);
	*(Vehicle*)(&val) = train;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0x16B5E274BDE402F8(Vehicle vehicle, Vehicle trailer, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11) /*0x16B5E274BDE402F8*/ {
	uint64_t val;
	nativeInit(0x16B5E274BDE402F8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = trailer;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	*(float*)(&val) = p7;
	nativePush(val);
	*(float*)(&val) = p8;
	nativePush(val);
	*(float*)(&val) = p9;
	nativePush(val);
	*(float*)(&val) = p10;
	nativePush(val);
	*(float*)(&val) = p11;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DOES_CARGOBOB_HAVE_PICK_UP_ROPE(Vehicle cargobob) /*0x1821D91AD4B56108*/ {
	uint64_t val;
	nativeInit(0x1821D91AD4B56108);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x182F266C2D9E2BEB(Vehicle vehicle, float p1) /*0x182F266C2D9E2BEB*/ {
	uint64_t val;
	nativeInit(0x182F266C2D9E2BEB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_FRICTION_OVERRIDE(Vehicle vehicle, float friction) /*0x1837AF7C627009BA*/ {
	uint64_t val;
	nativeInit(0x1837AF7C627009BA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = friction;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x192547247864DFDD(Vehicle vehicle, bool p1) /*0x192547247864DFDD*/ {
	uint64_t val;
	nativeInit(0x192547247864DFDD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1A78AD3D8240536F(Vehicle vehicle, bool p1) /*0x1A78AD3D8240536F*/ {
	uint64_t val;
	nativeInit(0x1A78AD3D8240536F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1AA8A837D2169D94(Vehicle vehicle, bool p1) /*0x1AA8A837D2169D94*/ {
	uint64_t val;
	nativeInit(0x1AA8A837D2169D94);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_HAS_VEHICLE_ASSET_LOADED(int vehicleAsset) /*0x1BBE0523B8DB9A21*/ {
	uint64_t val;
	nativeInit(0x1BBE0523B8DB9A21);
	*(int*)(&val) = vehicleAsset;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) /*0x1C8A4C2C19E68EEC*/ {
	uint64_t val;
	nativeInit(0x1C8A4C2C19E68EEC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_GET_VEHICLE_TRAILER_VEHICLE(Vehicle vehicle, Vehicle* trailer) /*0x1CDD6BADC297830D*/ {
	uint64_t val;
	nativeInit(0x1CDD6BADC297830D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle**)(&val) = trailer;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_ST(Vehicle vehicle, bool toggle) /*0x1CF38D529D7441D9*/ {
	uint64_t val;
	nativeInit(0x1CF38D529D7441D9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1D97D1E3A70A649F(Vehicle vehicle, bool p1) /*0x1D97D1E3A70A649F*/ {
	uint64_t val;
	nativeInit(0x1D97D1E3A70A649F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_HIGH_DETAIL(Vehicle vehicle) /*0x1F25887F3C104278*/ {
	uint64_t val;
	nativeInit(0x1F25887F3C104278);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_MOD_KIT(Vehicle vehicle, int modKit) /*0x1F2AA07F00B3217A*/ {
	uint64_t val;
	nativeInit(0x1F2AA07F00B3217A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modKit;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1F2E4E06DEA8992B(Vehicle p0, bool p1) /*0x1F2E4E06DEA8992B*/ {
	uint64_t val;
	nativeInit(0x1F2E4E06DEA8992B);
	*(Vehicle*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x1F9FB66F3A3842D2(Vehicle vehicle, bool p1) /*0x1F9FB66F3A3842D2*/ {
	uint64_t val;
	nativeInit(0x1F9FB66F3A3842D2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_LIGHTS_MODE(Vehicle vehicle, int p1) /*0x1FD09E7390A74D54*/ {
	uint64_t val;
	nativeInit(0x1FD09E7390A74D54);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int pearlescentColor, int wheelColor) /*0x2036F561ADD12E33*/ {
	uint64_t val;
	nativeInit(0x2036F561ADD12E33);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = pearlescentColor;
	nativePush(val);
	*(int*)(&val) = wheelColor;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(Any p0, float p1, Any* p2) /*0x2058206FBE79A8AD*/ {
	uint64_t val;
	nativeInit(0x2058206FBE79A8AD);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x206BC5DC9D1AC70A(Vehicle vehicle, bool p1) /*0x206BC5DC9D1AC70A*/ {
	uint64_t val;
	nativeInit(0x206BC5DC9D1AC70A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x21115BCD6E44656A(Any p0, bool p1) /*0x21115BCD6E44656A*/ {
	uint64_t val;
	nativeInit(0x21115BCD6E44656A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_RECORDING_ID(int p0, const char* p1) /*0x21543C612379DB3C*/ {
	uint64_t val;
	nativeInit(0x21543C612379DB3C);
	*(int*)(&val) = p0;
	nativePush(val);
	*(const char**)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Ped VEHICLE__GET_PED_USING_VEHICLE_DOOR(Vehicle vehicle, int doorIndex) /*0x218297BF0CFD853B*/ {
	uint64_t val;
	nativeInit(0x218297BF0CFD853B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void VEHICLE_0x21973BBF8D17EDFA(Any p0, Any p1) /*0x21973BBF8D17EDFA*/ {
	uint64_t val;
	nativeInit(0x21973BBF8D17EDFA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_RESET_VEHICLE_WHEELS(Vehicle vehicle, bool toggle) /*0x21D2E5662C1F6FED*/ {
	uint64_t val;
	nativeInit(0x21D2E5662C1F6FED);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DELETE_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator) /*0x22102C9ABFCF125D*/ {
	uint64_t val;
	nativeInit(0x22102C9ABFCF125D);
	*(int*)(&val) = vehicleGenerator;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_REDUCE_GRIP(Vehicle vehicle, bool toggle) /*0x222FF6A823D122E2*/ {
	uint64_t val;
	nativeInit(0x222FF6A823D122E2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_SEAT_FREE(Vehicle vehicle, int seatIndex) /*0x22AC59A870E6A669*/ {
	uint64_t val;
	nativeInit(0x22AC59A870E6A669);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = seatIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x2311DD7159F00582(Vehicle vehicle, bool p1) /*0x2311DD7159F00582*/ {
	uint64_t val;
	nativeInit(0x2311DD7159F00582);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DISABLE_PLANE_AILERON(Vehicle vehicle, bool p1, bool p2) /*0x23428FC53C60919C*/ {
	uint64_t val;
	nativeInit(0x23428FC53C60919C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) /*0x245A6883D966D537*/ {
	uint64_t val;
	nativeInit(0x245A6883D966D537);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_ENGINE_ON(Vehicle vehicle, bool value, bool instantly, bool noAutoTurnOn) /*0x2497C4717C8B881E*/ {
	uint64_t val;
	nativeInit(0x2497C4717C8B881E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = value;
	nativePush(val);
	*(bool*)(&val) = instantly;
	nativePush(val);
	*(bool*)(&val) = noAutoTurnOn;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_NUMBER_OF_PASSENGERS(Vehicle vehicle) /*0x24CB2137731FFE89*/ {
	uint64_t val;
	nativeInit(0x24CB2137731FFE89);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x25367DE49D64CF16(Vehicle vehicle, bool p1) /*0x25367DE49D64CF16*/ {
	uint64_t val;
	nativeInit(0x25367DE49D64CF16);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_DOOR_LOCK_STATUS(Vehicle vehicle) /*0x25BC98A59C2EA962*/ {
	uint64_t val;
	nativeInit(0x25BC98A59C2EA962);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool VEHICLE_DOES_VEHICLE_HAVE_WEAPONS(Vehicle vehicle) /*0x25ECB9F8017D98E0*/ {
	uint64_t val;
	nativeInit(0x25ECB9F8017D98E0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_BRING_VEHICLE_TO_HALT(Vehicle vehicle, float distance, int type, bool unknown) /*0x260BE8F09E326A20*/ {
	uint64_t val;
	nativeInit(0x260BE8F09E326A20);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = distance;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	*(bool*)(&val) = unknown;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_FAR_DRAW_VEHICLES(bool toggle) /*0x26324F33423F3CC3*/ {
	uint64_t val;
	nativeInit(0x26324F33423F3CC3);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__GET_BOAT_ANCHOR(Vehicle vehicle) /*0x26C10ECBDA5D043B*/ {
	uint64_t val;
	nativeInit(0x26C10ECBDA5D043B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x279D50DE5652D935(Any p0, bool p1) /*0x279D50DE5652D935*/ {
	uint64_t val;
	nativeInit(0x279D50DE5652D935);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_BUMPER_BOUNCING(Vehicle vehicle, bool frontBumper) /*0x27B926779DEB502D*/ {
	uint64_t val;
	nativeInit(0x27B926779DEB502D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = frontBumper;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash VEHICLE_GET_VEHICLE_LAYOUT_HASH(Vehicle vehicle) /*0x28D37D4F71AC5C58*/ {
	uint64_t val;
	nativeInit(0x28D37D4F71AC5C58);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool VEHICLE__IS_ANY_PASSENGER_RAPPELLING(Vehicle vehicle) /*0x291E373D483E7EE7*/ {
	uint64_t val;
	nativeInit(0x291E373D483E7EE7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int VEHICLE_GET_VEHICLE_CLASS(Vehicle vehicle) /*0x29439776AAA00A62*/ {
	uint64_t val;
	nativeInit(0x29439776AAA00A62);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(Vehicle vehicle) /*0x2959F696AE390A99*/ {
	uint64_t val;
	nativeInit(0x2959F696AE390A99);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_ATTACH_VEHICLE_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle, int index, float hookOffsetX, float hookOffsetY, float hookOffsetZ) /*0x29A16F8D621C4508*/ {
	uint64_t val;
	nativeInit(0x29A16F8D621C4508);
	*(Vehicle*)(&val) = towTruck;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	*(float*)(&val) = hookOffsetX;
	nativePush(val);
	*(float*)(&val) = hookOffsetY;
	nativePush(val);
	*(float*)(&val) = hookOffsetZ;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_SET_VEHICLE_WHEELS_CAN_BREAK(Vehicle vehicle, bool enabled) /*0x29B18B4FD460CA8F*/ {
	uint64_t val;
	nativeInit(0x29B18B4FD460CA8F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_START_PLAYBACK_RECORDED_VEHICLE_USING_AI(Any p0, Any p1, Any* p2, float p3, Any p4) /*0x29DE5FA52D00428C*/ {
	uint64_t val;
	nativeInit(0x29DE5FA52D00428C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any**)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_TOGGLE_VEHICLE_MOD(Vehicle vehicle, int modType, bool toggle) /*0x2A1F4F37F95BAD08*/ {
	uint64_t val;
	nativeInit(0x2A1F4F37F95BAD08);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x2A8F319B392E7B3F(Vehicle vehicle, float p1) /*0x2A8F319B392E7B3F*/ {
	uint64_t val;
	nativeInit(0x2A8F319B392E7B3F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_NEON_LIGHT_ENABLED(Vehicle vehicle, int index, bool toggle) /*0x2AA720E4287BF269*/ {
	uint64_t val;
	nativeInit(0x2AA720E4287BF269);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Hash modelHash) /*0x2AD93716F184EDA4*/ {
	uint64_t val;
	nativeInit(0x2AD93716F184EDA4);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any VEHICLE_SET_GARBAGE_TRUCKS(bool toggle) /*0x2AFD795EEAC8D30D*/ {
	uint64_t val;
	nativeInit(0x2AFD795EEAC8D30D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(Vehicle vehicle, bool owned) /*0x2B5F9D2AF1F1722D*/ {
	uint64_t val;
	nativeInit(0x2B5F9D2AF1F1722D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = owned;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0x2B6747FAA9DB9D6B(Vehicle vehicle, bool p1) /*0x2B6747FAA9DB9D6B*/ {
	uint64_t val;
	nativeInit(0x2B6747FAA9DB9D6B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int VEHICLE_GET_VEHICLE_LIVERY(Vehicle trailers2) /*0x2BB9230590DA5E8A*/ {
	uint64_t val;
	nativeInit(0x2BB9230590DA5E8A);
	*(Vehicle*)(&val) = trailers2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x2C4A1590ABF43E8B(Vehicle vehicle, bool p1) /*0x2C4A1590ABF43E8B*/ {
	uint64_t val;
	nativeInit(0x2C4A1590ABF43E8B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0x2C8CBFE1EA5FC631(Any p0) /*0x2C8CBFE1EA5FC631*/ {
	uint64_t val;
	nativeInit(0x2C8CBFE1EA5FC631);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int VEHICLE__ADD_SPEED_ZONE_FOR_COORD(float x, float y, float z, float radius, float speed, bool p5) /*0x2CE544C68FB812A0*/ {
	uint64_t val;
	nativeInit(0x2CE544C68FB812A0);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool VEHICLE_ARE_ANY_VEHICLE_SEATS_FREE(Vehicle vehicle) /*0x2D34FC3BC4ADB780*/ {
	uint64_t val;
	nativeInit(0x2D34FC3BC4ADB780);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE_GET_POSITION_IN_RECORDING(Any p0) /*0x2DACD605FC681475*/ {
	uint64_t val;
	nativeInit(0x2DACD605FC681475);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_TIMED_EXPLOSION(Vehicle vehicle, Ped ped, bool toggle) /*0x2E0A74E1002380B1*/ {
	uint64_t val;
	nativeInit(0x2E0A74E1002380B1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_CLASS_MAX_ACCELERATION(int vehicleClass) /*0x2F83E7E45D9EA7AE*/ {
	uint64_t val;
	nativeInit(0x2F83E7E45D9EA7AE);
	*(int*)(&val) = vehicleClass;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_DOOR_CAN_BREAK(Vehicle vehicle, int doorIndex, bool isBreakable) /*0x2FA133A4A9D37ED8*/ {
	uint64_t val;
	nativeInit(0x2FA133A4A9D37ED8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(bool*)(&val) = isBreakable;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ADD_VEHICLE_STUCK_CHECK_WITH_WARP(Any p0, float p1, Any p2, bool p3, bool p4, bool p5, Any p6) /*0x2FA9923062DD396C*/ {
	uint64_t val;
	nativeInit(0x2FA9923062DD396C);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	*(bool*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(Vehicle vehicle, bool toggle) /*0x300504B23BD3B711*/ {
	uint64_t val;
	nativeInit(0x300504B23BD3B711);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_HAS_VEHICLE_RECORDING_BEEN_LOADED(Any p0, Any* p1) /*0x300D614A4C785FC4*/ {
	uint64_t val;
	nativeInit(0x300D614A4C785FC4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_CAN_SHUFFLE_SEAT(Vehicle vehicle, Ped ped) /*0x30785D90C956BF35*/ {
	uint64_t val;
	nativeInit(0x30785D90C956BF35);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_DESIRED_VERTICAL_FLIGHT_PHASE(Vehicle vehicle, float angleRatio) /*0x30D779DE7C4F6DD3*/ {
	uint64_t val;
	nativeInit(0x30D779DE7C4F6DD3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = angleRatio;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_RENDER_TRAIN_AS_DERAILED(Vehicle train, bool toggle) /*0x317B11A312DF5534*/ {
	uint64_t val;
	nativeInit(0x317B11A312DF5534);
	*(Vehicle*)(&val) = train;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(Vehicle vehicle, bool toggle) /*0x31B927BBC44156CD*/ {
	uint64_t val;
	nativeInit(0x31B927BBC44156CD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x33506883545AC0DF(Vehicle vehicle, bool p1) /*0x33506883545AC0DF*/ {
	uint64_t val;
	nativeInit(0x33506883545AC0DF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle, int colorCombination) /*0x33E8CD3322E2FE31*/ {
	uint64_t val;
	nativeInit(0x33E8CD3322E2FE31);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = colorCombination;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_NUM_MOD_KITS(Vehicle vehicle) /*0x33F2E3FE70EAAE1D*/ {
	uint64_t val;
	nativeInit(0x33F2E3FE70EAAE1D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x3441CAD2F2231923(Vehicle vehicle, bool p1) /*0x3441CAD2F2231923*/ {
	uint64_t val;
	nativeInit(0x3441CAD2F2231923);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_ALL_VEHICLE_GENERATORS_ACTIVE() /*0x34AD89078831A4BC*/ {
	nativeInit(0x34AD89078831A4BC);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_LIGHTS(Vehicle vehicle, int state) /*0x34E710FF01247C5A*/ {
	uint64_t val;
	nativeInit(0x34E710FF01247C5A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_CLOSE_BOMB_BAY_DOORS(Vehicle vehicle) /*0x3556041742A0DC74*/ {
	uint64_t val;
	nativeInit(0x3556041742A0DC74);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x35E0654F4BAD7971(bool p0) /*0x35E0654F4BAD7971*/ {
	uint64_t val;
	nativeInit(0x35E0654F4BAD7971);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0x36492C2F0D134C56(Any p0) /*0x36492C2F0D134C56*/ {
	uint64_t val;
	nativeInit(0x36492C2F0D134C56);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int r, int g, int b) /*0x36CED73BFED89754*/ {
	uint64_t val;
	nativeInit(0x36CED73BFED89754);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x374706271354CB18(Vehicle vehicle, Entity p1, float p2) /*0x374706271354CB18*/ {
	uint64_t val;
	nativeInit(0x374706271354CB18);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_CAN_BE_TARGETTED(Vehicle vehicle, bool state) /*0x3750146A28097A82*/ {
	uint64_t val;
	nativeInit(0x3750146A28097A82);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline Vehicle VEHICLE__GET_VEHICLE_ATTACHED_TO_ENTITY(Vehicle object) /*0x375E7FC44F21C8AB*/ {
	uint64_t val;
	nativeInit(0x375E7FC44F21C8AB);
	*(Vehicle*)(&val) = object;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void VEHICLE_SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(Vehicle vehicle, bool toggle) /*0x37C8252A7C92D017*/ {
	uint64_t val;
	nativeInit(0x37C8252A7C92D017);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_FORKLIFT_HEIGHT(Vehicle vehicle, float height) /*0x37EBBF3117BD6A25*/ {
	uint64_t val;
	nativeInit(0x37EBBF3117BD6A25);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline Vehicle VEHICLE_GET_RANDOM_VEHICLE_IN_SPHERE(float x, float y, float z, float radius, Hash modelHash, int flags) /*0x386F6CE5BAF6091C*/ {
	uint64_t val;
	nativeInit(0x386F6CE5BAF6091C);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_QUADBIKE(Hash model) /*0x39DAC362EE65FA28*/ {
	uint64_t val;
	nativeInit(0x39DAC362EE65FA28);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle, float fade) /*0x3AFDC536C3D01674*/ {
	uint64_t val;
	nativeInit(0x3AFDC536C3D01674);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = fade;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_NUMBER_OF_VEHICLE_COLOURS(Vehicle vehicle) /*0x3B963160CD65D41E*/ {
	uint64_t val;
	nativeInit(0x3B963160CD65D41E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor) /*0x3BC4245933A166F7*/ {
	uint64_t val;
	nativeInit(0x3BC4245933A166F7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = pearlescentColor;
	nativePush(val);
	*(int**)(&val) = wheelColor;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ATTACH_VEHICLE_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float radius) /*0x3C7D42D58F770B54*/ {
	uint64_t val;
	nativeInit(0x3C7D42D58F770B54);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = trailer;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_STRONG(Vehicle vehicle, bool toggle) /*0x3E8C8727991A8A0B*/ {
	uint64_t val;
	nativeInit(0x3E8C8727991A8A0B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_DOOR_FULLY_OPEN(Vehicle v, int doorIndex) /*0x3E933CFF7B111C22*/ {
	uint64_t val;
	nativeInit(0x3E933CFF7B111C22);
	*(Vehicle*)(&val) = v;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_WAS_COUNTER_ACTIVATED(Vehicle vehicle, Any p1) /*0x3EC8BF18AA453FE9*/ {
	uint64_t val;
	nativeInit(0x3EC8BF18AA453FE9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_START_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, int p1, const char* playback, bool p3) /*0x3F878F92B3A7A071*/ {
	uint64_t val;
	nativeInit(0x3F878F92B3A7A071);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = playback;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_EXCLUSIVE_DRIVER(Vehicle vehicle, Ped ped) /*0x41062318F23ED854*/ {
	uint64_t val;
	nativeInit(0x41062318F23ED854);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ATTACH_VEHICLE_TO_CARGOBOB(Vehicle vehicle, Vehicle cargobob, int p2, float x, float y, float z) /*0x4127F1D84E347769*/ {
	uint64_t val;
	nativeInit(0x4127F1D84E347769);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__VEHICLE_HAS_LANDING_GEAR(Vehicle vehicle) /*0x4198AB0022B15F87*/ {
	uint64_t val;
	nativeInit(0x4198AB0022B15F87);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_MODEL(Vehicle vehicle, Hash model) /*0x423E8DE37D934D89*/ {
	uint64_t val;
	nativeInit(0x423E8DE37D934D89);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x428BACCDF5E26EAD(Vehicle vehicle, bool p1) /*0x428BACCDF5E26EAD*/ {
	uint64_t val;
	nativeInit(0x428BACCDF5E26EAD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0x42A4BEB35D372407(Any p0) /*0x42A4BEB35D372407*/ {
	uint64_t val;
	nativeInit(0x42A4BEB35D372407);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_STEER_BIAS(Vehicle vehicle, float value) /*0x42A8EC77D5150CBE*/ {
	uint64_t val;
	nativeInit(0x42A8EC77D5150CBE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_CURRENT_PLAYBACK_FOR_VEHICLE(Vehicle vehicle) /*0x42BC05C27A946054*/ {
	uint64_t val;
	nativeInit(0x42BC05C27A946054);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_ALARM_ACTIVATED(Vehicle vehicle) /*0x4319E335B71FFF34*/ {
	uint64_t val;
	nativeInit(0x4319E335B71FFF34);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int paintType, int color, int p3) /*0x43FEB945EE7F85B8*/ {
	uint64_t val;
	nativeInit(0x43FEB945EE7F85B8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = paintType;
	nativePush(val);
	*(int*)(&val) = color;
	nativePush(val);
	*(int*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_RELEASE_PRELOAD_MODS(Vehicle vehicle) /*0x445D79F995508307*/ {
	uint64_t val;
	nativeInit(0x445D79F995508307);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE__GET_VEHICLE_MOD_DATA(Vehicle vehicle, int modType, int modIndex) /*0x4593CF82AA179706*/ {
	uint64_t val;
	nativeInit(0x4593CF82AA179706);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(int*)(&val) = modIndex;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_BOAT(Hash model) /*0x45A9187928F4B9E3*/ {
	uint64_t val;
	nativeInit(0x45A9187928F4B9E3);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle, float health) /*0x45F6D8EEF34ABEF1*/ {
	uint64_t val;
	nativeInit(0x45F6D8EEF34ABEF1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = health;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(Vehicle vehicle, bool toggle) /*0x465BF26AB9684352*/ {
	uint64_t val;
	nativeInit(0x465BF26AB9684352);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_BUMPER_BROKEN_OFF(Vehicle vehicle, bool front) /*0x468056A6BB6F3846*/ {
	uint64_t val;
	nativeInit(0x468056A6BB6F3846);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = front;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Any unk) /*0x46A1E1A299EC4BBA*/ {
	uint64_t val;
	nativeInit(0x46A1E1A299EC4BBA);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(Any*)(&val) = unk;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_WINDOW_INTACT(Vehicle vehicle, int windowIndex) /*0x46E571A0E20D01F1*/ {
	uint64_t val;
	nativeInit(0x46E571A0E20D01F1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = windowIndex;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_WHEEL_TYPE(Vehicle vehicle, int WheelType) /*0x487EB21CC7295BA1*/ {
	uint64_t val;
	nativeInit(0x487EB21CC7295BA1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = WheelType;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x48ADC8A773564670() /*0x48ADC8A773564670*/ {
	nativeInit(0x48ADC8A773564670);
	nativeCall();
}
inline const char* VEHICLE_GET_VEHICLE_MOD_COLOR_2_NAME(Vehicle vehicle) /*0x4967A516ED23A5A1*/ {
	uint64_t val;
	nativeInit(0x4967A516ED23A5A1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool VEHICLE_SET_VEHICLE_ON_GROUND_PROPERLY(Vehicle vehicle) /*0x49733E92263139D1*/ {
	uint64_t val;
	nativeInit(0x49733E92263139D1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_STOLEN(Vehicle vehicle) /*0x4AF9BD80EEBEB453*/ {
	uint64_t val;
	nativeInit(0x4AF9BD80EEBEB453);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_CLASS_MAX_BRAKING(int vehicleClass) /*0x4BF54C16EC8FEC03*/ {
	uint64_t val;
	nativeInit(0x4BF54C16EC8FEC03);
	*(int*)(&val) = vehicleClass;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_DRIVEABLE(Vehicle vehicle, bool isOnFireCheck) /*0x4C241E39B23DF959*/ {
	uint64_t val;
	nativeInit(0x4C241E39B23DF959);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = isOnFireCheck;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int VEHICLE_GET_NUMBER_OF_VEHICLE_NUMBER_PLATES() /*0x4C4D6B2644F458CB*/ {
	nativeInit(0x4C4D6B2644F458CB); return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Vehicle vehicle, bool state) /*0x4C7028F78FFD3681*/ {
	uint64_t val;
	nativeInit(0x4C7028F78FFD3681);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_SIREN_ON(Vehicle vehicle) /*0x4C9BF537BE2634B2*/ {
	uint64_t val;
	nativeInit(0x4C9BF537BE2634B2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x4D9D109F63FEE1D4(Vehicle vehicle, bool toggle) /*0x4D9D109F63FEE1D4*/ {
	uint64_t val;
	nativeInit(0x4D9D109F63FEE1D4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x4E74E62E0A97E901(Vehicle vehicle, bool p1) /*0x4E74E62E0A97E901*/ {
	uint64_t val;
	nativeInit(0x4E74E62E0A97E901);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vector3 VEHICLE_GET_VEHICLE_DEFORMATION_AT_POS(Vehicle vehicle, float offsetX, float offsetY, float offsetZ) /*0x4EC6CFBC7B2E9536*/ {
	uint64_t val;
	nativeInit(0x4EC6CFBC7B2E9536);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = offsetX;
	nativePush(val);
	*(float*)(&val) = offsetY;
	nativePush(val);
	*(float*)(&val) = offsetZ;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_COLOURS(Vehicle vehicle, int colorPrimary, int colorSecondary) /*0x4F1D4BE3A7F24601*/ {
	uint64_t val;
	nativeInit(0x4F1D4BE3A7F24601);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = colorPrimary;
	nativePush(val);
	*(int*)(&val) = colorSecondary;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_CLASS_MAX_AGILITY(int vehicleClass) /*0x4F930AD022D6DE3B*/ {
	uint64_t val;
	nativeInit(0x4F930AD022D6DE3B);
	*(int*)(&val) = vehicleClass;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0x500873A45724C863(Vehicle vehicle, Any p1) /*0x500873A45724C863*/ {
	uint64_t val;
	nativeInit(0x500873A45724C863);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player, bool toggle) /*0x517AAF684BB50CD1*/ {
	uint64_t val;
	nativeInit(0x517AAF684BB50CD1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x51BB2D88D31A914B(Vehicle vehicle, bool p1) /*0x51BB2D88D31A914B*/ {
	uint64_t val;
	nativeInit(0x51BB2D88D31A914B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x51DB102F4A3BA5E0(bool p0) /*0x51DB102F4A3BA5E0*/ {
	uint64_t val;
	nativeInit(0x51DB102F4A3BA5E0);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline const char* VEHICLE_GET_MOD_SLOT_NAME(Vehicle vehicle, int modType) /*0x51F0FEB9F6AE98C0*/ {
	uint64_t val;
	nativeInit(0x51F0FEB9F6AE98C0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void VEHICLE_SET_CAN_RESPRAY_VEHICLE(Vehicle vehicle, bool state) /*0x52BBA29D5EC69356*/ {
	uint64_t val;
	nativeInit(0x52BBA29D5EC69356);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_A_CONVERTIBLE(Vehicle vehicle, bool p1) /*0x52F357A30698BCCE*/ {
	uint64_t val;
	nativeInit(0x52F357A30698BCCE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE__GET_VEHICLE_MODEL_DOWN_FORCE(Hash modelHash) /*0x53409B5163D5B846*/ {
	uint64_t val;
	nativeInit(0x53409B5163D5B846);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float VEHICLE__GET_VEHICLE_SUSPENSION_HEIGHT(Vehicle vehicle) /*0x53952FD2BAA19F17*/ {
	uint64_t val;
	nativeInit(0x53952FD2BAA19F17);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_MODEL_MAX_TRACTION(Hash modelHash) /*0x539DE94D44FDFD0D*/ {
	uint64_t val;
	nativeInit(0x539DE94D44FDFD0D);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float VEHICLE__GET_VEHICLE_MAX_SPEED(Vehicle vehicle) /*0x53AF99BAA671CA47*/ {
	uint64_t val;
	nativeInit(0x53AF99BAA671CA47);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) /*0x54833611C17ABDEA*/ {
	uint64_t val;
	nativeInit(0x54833611C17ABDEA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0x54B0F614960F4A5F(float p0, float p1, float p2, float p3, float p4, float p5, float p6) /*0x54B0F614960F4A5F*/ {
	uint64_t val;
	nativeInit(0x54B0F614960F4A5F);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(float*)(&val) = p6;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline Any VEHICLE_CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle) /*0x55E1D2758F34E437*/ {
	uint64_t val;
	nativeInit(0x55E1D2758F34E437);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0x56B94C6D7127DFBA(Any p0, float p1, bool p2) /*0x56B94C6D7127DFBA*/ {
	uint64_t val;
	nativeInit(0x56B94C6D7127DFBA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x56EB5E94318D3FB6(Vehicle vehicle, bool p1) /*0x56EB5E94318D3FB6*/ {
	uint64_t val;
	nativeInit(0x56EB5E94318D3FB6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x571FEB383F629926(Vehicle cargobob, bool p1) /*0x571FEB383F629926*/ {
	uint64_t val;
	nativeInit(0x571FEB383F629926);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_STOPPED(Vehicle vehicle) /*0x5721B434AD84D57A*/ {
	uint64_t val;
	nativeInit(0x5721B434AD84D57A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE_GET_TIME_POSITION_IN_RECORDING(Any p0) /*0x5746F3A7AB7FE544*/ {
	uint64_t val;
	nativeInit(0x5746F3A7AB7FE544);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_SET_PED_ENABLED_BIKE_RINGTONE(Vehicle vehicle, Entity entity) /*0x57715966069157AD*/ {
	uint64_t val;
	nativeInit(0x57715966069157AD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_WINDOW_TINT(Vehicle vehicle, int tint) /*0x57C51E6BAD752696*/ {
	uint64_t val;
	nativeInit(0x57C51E6BAD752696);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = tint;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(Vehicle vehicle) /*0x57E4C39DE5EE8470*/ {
	uint64_t val;
	nativeInit(0x57E4C39DE5EE8470);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x5845066D8A1EA7F7(Vehicle vehicle, float x, float y, float z, Any p4) /*0x5845066D8A1EA7F7*/ {
	uint64_t val;
	nativeInit(0x5845066D8A1EA7F7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_MISSION_TRAIN_COORDS(Vehicle train, float x, float y, float z) /*0x591CA673AA6AB736*/ {
	uint64_t val;
	nativeInit(0x591CA673AA6AB736);
	*(Vehicle*)(&val) = train;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_TAXI_LIGHTS(Vehicle vehicle, bool state) /*0x598803E85E8448D9*/ {
	uint64_t val;
	nativeInit(0x598803E85E8448D9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__ARE_VEHICLE_WINGS_INTACT(Vehicle vehicle) /*0x5991A01434CE9677*/ {
	uint64_t val;
	nativeInit(0x5991A01434CE9677);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_CAN_BREAK(Vehicle vehicle, bool toggle) /*0x59BF8C3D52C92F66*/ {
	uint64_t val;
	nativeInit(0x59BF8C3D52C92F66);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE__GET_VEHICLE_MODEL_MOVE_RESISTANCE(Hash modelHash) /*0x5AA3F878A178C4FC*/ {
	uint64_t val;
	nativeInit(0x5AA3F878A178C4FC);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_PROVIDES_COVER(Vehicle vehicle, bool toggle) /*0x5AFEEDD9BB2899D7*/ {
	uint64_t val;
	nativeInit(0x5AFEEDD9BB2899D7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DELETE_MISSION_TRAIN(Vehicle* train) /*0x5B76B14AE875C795*/ {
	uint64_t val;
	nativeInit(0x5B76B14AE875C795);
	*(Vehicle**)(&val) = train;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(Vehicle veh, bool toggle) /*0x5D14D4154BFE7B2C*/ {
	uint64_t val;
	nativeInit(0x5D14D4154BFE7B2C);
	*(Vehicle*)(&val) = veh;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_ACCELERATION(Vehicle vehicle) /*0x5DD35C8D074E57AE*/ {
	uint64_t val;
	nativeInit(0x5DD35C8D074E57AE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0x5E569EC46EC21CAE(Vehicle vehicle, bool toggle) /*0x5E569EC46EC21CAE*/ {
	uint64_t val;
	nativeInit(0x5E569EC46EC21CAE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) /*0x5EF77C9ADD3B11A3*/ {
	uint64_t val;
	nativeInit(0x5EF77C9ADD3B11A3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any VEHICLE_CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle) /*0x5FFBDEEC3E8E2009*/ {
	uint64_t val;
	nativeInit(0x5FFBDEEC3E8E2009);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_ROLL_UP_WINDOW(Vehicle vehicle, int windowIndex) /*0x602E548F46E24D59*/ {
	uint64_t val;
	nativeInit(0x602E548F46E24D59);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = windowIndex;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(bool active) /*0x608207E7A8FB787C*/ {
	uint64_t val;
	nativeInit(0x608207E7A8FB787C);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_LIVERY(Vehicle vehicle, int liveryIndex) /*0x60BF608F1B8CD1B6*/ {
	uint64_t val;
	nativeInit(0x60BF608F1B8CD1B6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = liveryIndex;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_ANY_VEHICLE_NEAR_POINT(float x, float y, float z, float radius) /*0x61E1DD6125A3EEE6*/ {
	uint64_t val;
	nativeInit(0x61E1DD6125A3EEE6);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_0x62CA17B74C435651(Vehicle vehicle) /*0x62CA17B74C435651*/ {
	uint64_t val;
	nativeInit(0x62CA17B74C435651);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int VEHICLE_GET_VEHICLE_MOD_KIT(Vehicle vehicle) /*0x6325D1A044AE510D*/ {
	uint64_t val;
	nativeInit(0x6325D1A044AE510D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_PAUSE_PLAYBACK_RECORDED_VEHICLE(Any p0) /*0x632A689BF42301B1*/ {
	uint64_t val;
	nativeInit(0x632A689BF42301B1);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0x634148744F385576(Vehicle vehicle) /*0x634148744F385576*/ {
	uint64_t val;
	nativeInit(0x634148744F385576);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_0x639431E895B9AA57(Ped ped, Vehicle vehicle, bool p2, bool p3, bool p4) /*0x639431E895B9AA57*/ {
	uint64_t val;
	nativeInit(0x639431E895B9AA57);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle VEHICLE_CREATE_MISSION_TRAIN(int variation, float x, float y, float z, bool direction) /*0x63C6CCA8E68AE8C8*/ {
	uint64_t val;
	nativeInit(0x63C6CCA8E68AE8C8);
	*(int*)(&val) = variation;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = direction;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void VEHICLE_TRACK_VEHICLE_VISIBILITY(Vehicle vehicle) /*0x64473AEFDCF47DCA*/ {
	uint64_t val;
	nativeInit(0x64473AEFDCF47DCA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_0x6636C535F6CC2725(Vehicle vehicle) /*0x6636C535F6CC2725*/ {
	uint64_t val;
	nativeInit(0x6636C535F6CC2725);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_PLAYBACK_SPEED(Vehicle vehicle, float speed) /*0x6683AB880E427778*/ {
	uint64_t val;
	nativeInit(0x6683AB880E427778);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x66979ACF5102FD2F(Vehicle cargobob, float p1) /*0x66979ACF5102FD2F*/ {
	uint64_t val;
	nativeInit(0x66979ACF5102FD2F);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_GET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle) /*0x678B9BB8C3F58FEB*/ {
	uint64_t val;
	nativeInit(0x678B9BB8C3F58FEB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_STUCK_TIMER_UP(Vehicle vehicle, int p1, int p2) /*0x679BE1DAF71DA874*/ {
	uint64_t val;
	nativeInit(0x679BE1DAF71DA874);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any VEHICLE_SET_VEHICLE_IS_STOLEN(Vehicle vehicle, bool isStolen) /*0x67B2C79AA7FF5738*/ {
	uint64_t val;
	nativeInit(0x67B2C79AA7FF5738);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = isStolen;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_HANDBRAKE(Vehicle vehicle, bool toggle) /*0x684785568EF26A22*/ {
	uint64_t val;
	nativeInit(0x684785568EF26A22);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x685D5561680D088B(Vehicle vehicle, float p1) /*0x685D5561680D088B*/ {
	uint64_t val;
	nativeInit(0x685D5561680D088B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle) /*0x6A842D197F845D56*/ {
	uint64_t val;
	nativeInit(0x6A842D197F845D56);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x6A98C2ECF57FA5D4(Vehicle vehicle, Entity entity) /*0x6A98C2ECF57FA5D4*/ {
	uint64_t val;
	nativeInit(0x6A98C2ECF57FA5D4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE() /*0x6ADAABD3068C5235*/ {
	nativeInit(0x6ADAABD3068C5235); return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex, bool customTires) /*0x6AF0636DDEDCB6DD*/ {
	uint64_t val;
	nativeInit(0x6AF0636DDEDCB6DD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(int*)(&val) = modIndex;
	nativePush(val);
	*(bool*)(&val) = customTires;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__DETACH_VEHICLE_WINDSCREEN(Vehicle vehicle) /*0x6D645D59FB5F5AD3*/ {
	uint64_t val;
	nativeInit(0x6D645D59FB5F5AD3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x6D6AF961B72728AE(Vehicle vehicle) /*0x6D6AF961B72728AE*/ {
	uint64_t val;
	nativeInit(0x6D6AF961B72728AE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x6D8EAC07506291FB(Vehicle cargobob, float p1) /*0x6D8EAC07506291FB*/ {
	uint64_t val;
	nativeInit(0x6D8EAC07506291FB);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_HELICOPTER_ROLL_PITCH_YAW_MULT_HEALTH(Vehicle helicopter, float multiplier) /*0x6E0859B530A365CC*/ {
	uint64_t val;
	nativeInit(0x6E0859B530A365CC);
	*(Vehicle*)(&val) = helicopter;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__DOES_CARGOBOB_HAVE_PICKUP_MAGNET(Vehicle cargobob) /*0x6E08BF5B3722BAC9*/ {
	uint64_t val;
	nativeInit(0x6E08BF5B3722BAC9);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_TYRE_FIXED(Vehicle vehicle, int tyreIndex) /*0x6E13FC662B882D1D*/ {
	uint64_t val;
	nativeInit(0x6E13FC662B882D1D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = tyreIndex;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(Any p0, Any p1, Any p2, bool p3) /*0x6E63860BBB190730*/ {
	uint64_t val;
	nativeInit(0x6E63860BBB190730);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x6EBFB22D646FFC18(Vehicle vehicle, bool p1) /*0x6EBFB22D646FFC18*/ {
	uint64_t val;
	nativeInit(0x6EBFB22D646FFC18);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle, float health) /*0x70DB57649FA8D0D8*/ {
	uint64_t val;
	nativeInit(0x70DB57649FA8D0D8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = health;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int r, int g, int b) /*0x7141766F91D15BEA*/ {
	uint64_t val;
	nativeInit(0x7141766F91D15BEA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(Vehicle vehicle, bool toggle) /*0x71B0892EC081D60A*/ {
	uint64_t val;
	nativeInit(0x71B0892EC081D60A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DELETE_ALL_TRAINS() /*0x736A718577F39C7D*/ {
	nativeInit(0x736A718577F39C7D);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_SHOOT_AT_TARGET(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget) /*0x74CD9A9327A282EA*/ {
	uint64_t val;
	nativeInit(0x74CD9A9327A282EA);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(float*)(&val) = xTarget;
	nativePush(val);
	*(float*)(&val) = yTarget;
	nativePush(val);
	*(float*)(&val) = zTarget;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_TAXI_LIGHT_ON(Vehicle vehicle) /*0x7504C0F113AB50FC*/ {
	uint64_t val;
	nativeInit(0x7504C0F113AB50FC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE__ARE_PROPELLERS_UNDAMAGED(Vehicle vehicle) /*0x755D6D5267CBBD7E*/ {
	uint64_t val;
	nativeInit(0x755D6D5267CBBD7E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_PRELOAD_VEHICLE_MOD(Any p0, int modType, Any p2) /*0x758F49C24925568A*/ {
	uint64_t val;
	nativeInit(0x758F49C24925568A);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_BOAT_ANCHOR(Vehicle vehicle, bool toggle) /*0x75DBEC174AEEAD10*/ {
	uint64_t val;
	nativeInit(0x75DBEC174AEEAD10);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__GET_VEHICLE_NEON_LIGHTS_COLOUR(Vehicle vehicle, int* r, int* g, int* b) /*0x7619EEE8C886757F*/ {
	uint64_t val;
	nativeInit(0x7619EEE8C886757F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_FIX_VEHICLE_WINDOW(Vehicle vehicle, int index) /*0x772282EBEB95E682*/ {
	uint64_t val;
	nativeInit(0x772282EBEB95E682);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline int VEHICLE_GET_VEHICLE_MOD(Vehicle vehicle, int modType) /*0x772960298DA26FDB*/ {
	uint64_t val;
	nativeInit(0x772960298DA26FDB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_DOORS_SHUT(Vehicle vehicle, bool closeInstantly) /*0x781B3D62BB013EF5*/ {
	uint64_t val;
	nativeInit(0x781B3D62BB013EF5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = closeInstantly;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_EXPLODE_VEHICLE_IN_CUTSCENE(Vehicle vehicle, bool p1) /*0x786A4EB67B01BF0B*/ {
	uint64_t val;
	nativeInit(0x786A4EB67B01BF0B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x796A877E459B99EA(Any p0, float p1, float p2, float p3) /*0x796A877E459B99EA*/ {
	uint64_t val;
	nativeInit(0x796A877E459B99EA);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DIRT_LEVEL(Vehicle vehicle, float dirtLevel) /*0x79D3B596FE44EE8B*/ {
	uint64_t val;
	nativeInit(0x79D3B596FE44EE8B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = dirtLevel;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x79DF7E806202CE01(Any p0, Any p1) /*0x79DF7E806202CE01*/ {
	uint64_t val;
	nativeInit(0x79DF7E806202CE01);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_ROLL_DOWN_WINDOW(Vehicle vehicle, int windowIndex) /*0x7AD9E6CE657D69E3*/ {
	uint64_t val;
	nativeInit(0x7AD9E6CE657D69E3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = windowIndex;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_CREATE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob, int state) /*0x7BEB0C7A235F6F3B*/ {
	uint64_t val;
	nativeInit(0x7BEB0C7A235F6F3B);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x7C0043FDFF6436BC(Vehicle vehicle) /*0x7C0043FDFF6436BC*/ {
	uint64_t val;
	nativeInit(0x7C0043FDFF6436BC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOOR_OPEN(Vehicle vehicle, int doorIndex, bool loose, bool openInstantly) /*0x7C65DAC73C35C862*/ {
	uint64_t val;
	nativeInit(0x7C65DAC73C35C862);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(bool*)(&val) = loose;
	nativePush(val);
	*(bool*)(&val) = openInstantly;
	nativePush(val);
	nativeCall();
}
inline const char* VEHICLE_GET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle) /*0x7CE1CCB9B293020E*/ {
	uint64_t val;
	nativeInit(0x7CE1CCB9B293020E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle) /*0x7D5DABE888D2D074*/ {
	uint64_t val;
	nativeInit(0x7D5DABE888D2D074);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0x7D6F9A3EF26136A0(Vehicle vehicle, bool p1, bool p2) /*0x7D6F9A3EF26136A0*/ {
	uint64_t val;
	nativeInit(0x7D6F9A3EF26136A0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(Vehicle vehicle, Any p1, const char* playback, Any p3, Any p4, Any p5) /*0x7D80FD645D4DA346*/ {
	uint64_t val;
	nativeInit(0x7D80FD645D4DA346);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = playback;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_EXTRA(Vehicle vehicle, int extraId, bool disable) /*0x7EE3A3C5E4A40CC9*/ {
	uint64_t val;
	nativeInit(0x7EE3A3C5E4A40CC9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = extraId;
	nativePush(val);
	*(bool*)(&val) = disable;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_COP_VEHICLE_IN_AREA_3D(float x1, float x2, float y1, float y2, float z1, float z2) /*0x7EEF65D5F153E26A*/ {
	uint64_t val;
	nativeInit(0x7EEF65D5F153E26A);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_CAR(Hash model) /*0x7F6DB52EEFC96DF8*/ {
	uint64_t val;
	nativeInit(0x7F6DB52EEFC96DF8);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_RANDOM_TRAINS(bool toggle) /*0x80D9F74197EA47D9*/ {
	uint64_t val;
	nativeInit(0x80D9F74197EA47D9);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color) /*0x81592BE4E3878728*/ {
	uint64_t val;
	nativeInit(0x81592BE4E3878728);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = paintType;
	nativePush(val);
	*(int**)(&val) = color;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int paintType, int color) /*0x816562BADFDEC83E*/ {
	uint64_t val;
	nativeInit(0x816562BADFDEC83E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = paintType;
	nativePush(val);
	*(int*)(&val) = color;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REQUEST_VEHICLE_ASSET(Hash vehicleHash, int vehicleAsset) /*0x81A15811460FAB3A*/ {
	uint64_t val;
	nativeInit(0x81A15811460FAB3A);
	*(Hash*)(&val) = vehicleHash;
	nativePush(val);
	*(int*)(&val) = vehicleAsset;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REMOVE_VEHICLE_STUCK_CHECK(Vehicle vehicle) /*0x8386BFB614D06749*/ {
	uint64_t val;
	nativeInit(0x8386BFB614D06749);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) /*0x8389CD56CA8072DC*/ {
	uint64_t val;
	nativeInit(0x8389CD56CA8072DC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline Ped VEHICLE_GET_LAST_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex) /*0x83F969AA1EE2A664*/ {
	uint64_t val;
	nativeInit(0x83F969AA1EE2A664);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = seatIndex;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline Any VEHICLE_SET_RANDOM_BOATS(bool toggle) /*0x84436EC293B1415F*/ {
	uint64_t val;
	nativeInit(0x84436EC293B1415F);
	*(bool*)(&val) = toggle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool VEHICLE_IS_TOGGLE_MOD_ON(Vehicle vehicle, int modType) /*0x84B233A8C8FC8AE7*/ {
	uint64_t val;
	nativeInit(0x84B233A8C8FC8AE7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(float multiplier) /*0x84FD40F56075E816*/ {
	uint64_t val;
	nativeInit(0x84FD40F56075E816);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ROLL_DOWN_WINDOWS(Vehicle vehicle) /*0x85796B0549DDE156*/ {
	uint64_t val;
	nativeInit(0x85796B0549DDE156);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline Vehicle VEHICLE_GET_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob) /*0x873B82D42AC2B9E5*/ {
	uint64_t val;
	nativeInit(0x873B82D42AC2B9E5);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void VEHICLE__SET_CARGOBOB_HOOK_POSITION(Vehicle cargobob, float xOffset, float yOffset, int state) /*0x877C1EAEAC531023*/ {
	uint64_t val;
	nativeInit(0x877C1EAEAC531023);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_LIVERY_COUNT(Vehicle vehicle) /*0x87B63E25A529D526*/ {
	uint64_t val;
	nativeInit(0x87B63E25A529D526);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_OPEN_BOMB_BAY_DOORS(Vehicle vehicle) /*0x87E7F24270732CB1*/ {
	uint64_t val;
	nativeInit(0x87E7F24270732CB1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_UNPAUSE_PLAYBACK_RECORDED_VEHICLE(Any p0) /*0x8879EE09268305D5*/ {
	uint64_t val;
	nativeInit(0x8879EE09268305D5);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x88BC673CA9E0AE99(Vehicle vehicle, bool p1) /*0x88BC673CA9E0AE99*/ {
	uint64_t val;
	nativeInit(0x88BC673CA9E0AE99);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline const char* VEHICLE_GET_MOD_TEXT_LABEL(Vehicle vehicle, int modType, int modValue) /*0x8935624F8C5592CC*/ {
	uint64_t val;
	nativeInit(0x8935624F8C5592CC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(int*)(&val) = modValue;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool VEHICLE_0x89D630CF5EA96D23(Vehicle vehicle, Entity entity) /*0x89D630CF5EA96D23*/ {
	uint64_t val;
	nativeInit(0x89D630CF5EA96D23);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_GRAVITY(Vehicle vehicle, bool toggle) /*0x89F149B6131E57DA*/ {
	uint64_t val;
	nativeInit(0x89F149B6131E57DA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x8AA9180DE2FEDD45(Vehicle vehicle, bool p1) /*0x8AA9180DE2FEDD45*/ {
	uint64_t val;
	nativeInit(0x8AA9180DE2FEDD45);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_UNDRIVEABLE(Vehicle vehicle, bool toggle) /*0x8ABA6AF54B942B95*/ {
	uint64_t val;
	nativeInit(0x8ABA6AF54B942B95);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DOES_VEHICLE_HAVE_ROOF(Vehicle vehicle) /*0x8AC862B0B32C5B80*/ {
	uint64_t val;
	nativeInit(0x8AC862B0B32C5B80);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_FULLBEAM(Vehicle vehicle, bool toggle) /*0x8B7FD87F0DDB421E*/ {
	uint64_t val;
	nativeInit(0x8B7FD87F0DDB421E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_SET_VEHICLE_AUTOMATICALLY_ATTACHES(Vehicle vehicle, bool p1, Any p2) /*0x8BA6F76BC53A1493*/ {
	uint64_t val;
	nativeInit(0x8BA6F76BC53A1493);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(Any*)(&val) = p2;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_MODEL_ACCELERATION(Hash modelHash) /*0x8C044C5C84505B6A*/ {
	uint64_t val;
	nativeInit(0x8C044C5C84505B6A);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE__IS_VEHICLE_NEON_LIGHT_ENABLED(Vehicle vehicle, int index) /*0x8C4B92553E4766A5*/ {
	uint64_t val;
	nativeInit(0x8C4B92553E4766A5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE__IS_VEHICLE_SHOP_RESPRAY_ALLOWED(Vehicle vehicle) /*0x8D474C8FAEFF6CDE*/ {
	uint64_t val;
	nativeInit(0x8D474C8FAEFF6CDE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_NEON_LIGHTS_COLOUR(Vehicle vehicle, int r, int g, int b) /*0x8E0A582209A62695*/ {
	uint64_t val;
	nativeInit(0x8E0A582209A62695);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_DIRT_LEVEL(Vehicle vehicle) /*0x8F17BC8BA08DA62B*/ {
	uint64_t val;
	nativeInit(0x8F17BC8BA08DA62B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE__GET_VEHICLE_OWNER(Vehicle vehicle, Entity* entity) /*0x8F5EBAB1F260CFCE*/ {
	uint64_t val;
	nativeInit(0x8F5EBAB1F260CFCE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Entity**)(&val) = entity;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_RAISE_CONVERTIBLE_ROOF(Vehicle vehicle, bool instantlyRaise) /*0x8F5FB35D7E88FC70*/ {
	uint64_t val;
	nativeInit(0x8F5FB35D7E88FC70);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = instantlyRaise;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x8F719973E1445BA2(Vehicle vehicle, bool toggle) /*0x8F719973E1445BA2*/ {
	uint64_t val;
	nativeInit(0x8F719973E1445BA2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x9007A2F21DC108D4(Any p0, float p1) /*0x9007A2F21DC108D4*/ {
	uint64_t val;
	nativeInit(0x9007A2F21DC108D4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DETACH_VEHICLE_FROM_TRAILER(Vehicle vehicle) /*0x90532EDF0D2BDD86*/ {
	uint64_t val;
	nativeInit(0x90532EDF0D2BDD86);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle, int plateIndex) /*0x9088EB5A43FFB0A1*/ {
	uint64_t val;
	nativeInit(0x9088EB5A43FFB0A1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = plateIndex;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_MOD_MODIFIER_VALUE(Vehicle vehicle, int modType, int modIndex) /*0x90A38E9838E0A8C1*/ {
	uint64_t val;
	nativeInit(0x90A38E9838E0A8C1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	*(int*)(&val) = modIndex;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE__SET_SOME_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float value) /*0x90B6DA738A9A25DA*/ {
	uint64_t val;
	nativeInit(0x90B6DA738A9A25DA);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(Vehicle vehicle) /*0x910A32E7AAD2656C*/ {
	uint64_t val;
	nativeInit(0x910A32E7AAD2656C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x91A0BD635321F145(Vehicle vehicle, bool p1) /*0x91A0BD635321F145*/ {
	uint64_t val;
	nativeInit(0x91A0BD635321F145);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0x91D6DD290888CBAB() /*0x91D6DD290888CBAB*/ {
	nativeInit(0x91D6DD290888CBAB); return *(bool*)(nativeCall());
}
inline int VEHICLE_0x92523B76657A517D(Any p0, float p1) /*0x92523B76657A517D*/ {
	uint64_t val;
	nativeInit(0x92523B76657A517D);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_BRAKE_LIGHTS(Vehicle vehicle, bool p1) /*0x92B35082E0B42F66*/ {
	uint64_t val;
	nativeInit(0x92B35082E0B42F66);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REMOVE_VEHICLE_MOD(Vehicle vehicle, int modType) /*0x92D619E420858204*/ {
	uint64_t val;
	nativeInit(0x92D619E420858204);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_HAS_STRONG_AXLES(Vehicle vehicle, bool toggle) /*0x92F0CF722BC4202F*/ {
	uint64_t val;
	nativeInit(0x92F0CF722BC4202F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_ENGINE_POWER_MULTIPLIER(Vehicle vehicle, float value) /*0x93A3996368C94158*/ {
	uint64_t val;
	nativeInit(0x93A3996368C94158);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_LOD_MULTIPLIER(Vehicle vehicle, float multiplier) /*0x93AE6A61BE015BF1*/ {
	uint64_t val;
	nativeInit(0x93AE6A61BE015BF1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOOR_SHUT(Vehicle vehicle, int doorIndex, bool closeInstantly) /*0x93D9BD300D7789E5*/ {
	uint64_t val;
	nativeInit(0x93D9BD300D7789E5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(bool*)(&val) = closeInstantly;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(Any p0, float p1) /*0x9438F7AD68771A20*/ {
	uint64_t val;
	nativeInit(0x9438F7AD68771A20);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__IS_THIS_MODEL_A_JETSKI(Hash model) /*0x9537097412CF75FE*/ {
	uint64_t val;
	nativeInit(0x9537097412CF75FE);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_DEFORMATION_FIXED(Vehicle vehicle) /*0x953DA1E1B12C0491*/ {
	uint64_t val;
	nativeInit(0x953DA1E1B12C0491);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DOES_VEHICLE_EXIST_WITH_DECORATOR(const char* decorator) /*0x956B409B984D9BF7*/ {
	uint64_t val;
	nativeInit(0x956B409B984D9BF7);
	*(const char**)(&val) = decorator;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle, const char* plateText) /*0x95A88F0B409CDA47*/ {
	uint64_t val;
	nativeInit(0x95A88F0B409CDA47);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = plateText;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x95CF53B3D687F9FA(Vehicle vehicle) /*0x95CF53B3D687F9FA*/ {
	uint64_t val;
	nativeInit(0x95CF53B3D687F9FA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x9737A37136F07E75(Vehicle vehicle, bool toggle) /*0x9737A37136F07E75*/ {
	uint64_t val;
	nativeInit(0x9737A37136F07E75);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob) /*0x9768CF648F54C804*/ {
	uint64_t val;
	nativeInit(0x9768CF648F54C804);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_FORCE_HD_VEHICLE(Vehicle vehicle, bool toggle) /*0x97CE68CB032583F0*/ {
	uint64_t val;
	nativeInit(0x97CE68CB032583F0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_ENGINE_CAN_DEGRADE(Vehicle vehicle, bool toggle) /*0x983765856F2564F9*/ {
	uint64_t val;
	nativeInit(0x983765856F2564F9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(Vehicle vehicle) /*0x99AD4CCCB128CBC9*/ {
	uint64_t val;
	nativeInit(0x99AD4CCCB128CBC9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_HUD_SPECIAL_ABILITY_BAR_ACTIVE(Vehicle vehicle, bool active) /*0x99C82F8A139F3E4E*/ {
	uint64_t val;
	nativeInit(0x99C82F8A139F3E4E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = active;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x99CAD8E7AFDB60FA(Vehicle vehicle, float p1, float p2) /*0x99CAD8E7AFDB60FA*/ {
	uint64_t val;
	nativeInit(0x99CAD8E7AFDB60FA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(Vehicle cargobob, bool isActive) /*0x9A665550F8DA349B*/ {
	uint64_t val;
	nativeInit(0x9A665550F8DA349B);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(bool*)(&val) = isActive;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x9A75585FB2E54FAD(float p0, float p1, float p2, float p3) /*0x9A75585FB2E54FAD*/ {
	uint64_t val;
	nativeInit(0x9A75585FB2E54FAD);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__IS_VEHICLE_MOD_LOAD_DONE(Vehicle vehicle) /*0x9A83F5F9963775EF*/ {
	uint64_t val;
	nativeInit(0x9A83F5F9963775EF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_VERTICAL_FLIGHT_PHASE(Vehicle vehicle, float angle) /*0x9AA47FFF660CB932*/ {
	uint64_t val;
	nativeInit(0x9AA47FFF660CB932);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_LANDING_GEAR_STATE(Vehicle vehicle) /*0x9B0F3DCA3DB0F4CD*/ {
	uint64_t val;
	nativeInit(0x9B0F3DCA3DB0F4CD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0x9BDDC73CC6A115D4(Vehicle vehicle, bool p1, bool p2) /*0x9BDDC73CC6A115D4*/ {
	uint64_t val;
	nativeInit(0x9BDDC73CC6A115D4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0x9BECD4B9FEF3F8A6(Vehicle vehicle, bool p1) /*0x9BECD4B9FEF3F8A6*/ {
	uint64_t val;
	nativeInit(0x9BECD4B9FEF3F8A6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_START_VEHICLE_HORN(Vehicle vehicle, int duration, Hash mode, bool forever) /*0x9C8C6504B5B63D2C*/ {
	uint64_t val;
	nativeInit(0x9C8C6504B5B63D2C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = duration;
	nativePush(val);
	*(Hash*)(&val) = mode;
	nativePush(val);
	*(bool*)(&val) = forever;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_PLATE_TYPE(Vehicle vehicle) /*0x9CCC9525BF2408E0*/ {
	uint64_t val;
	nativeInit(0x9CCC9525BF2408E0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE__SET_BIKE_LEAN_ANGLE(Vehicle vehicle, float x, float y) /*0x9CFA4896C3A53CBB*/ {
	uint64_t val;
	nativeInit(0x9CFA4896C3A53CBB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_NUM_VEHICLE_WINDOW_TINTS() /*0x9D1224004B3A6707*/ {
	nativeInit(0x9D1224004B3A6707); return *(int*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_SILENT(Vehicle vehicle, bool toggle) /*0x9D44FCCE98450843*/ {
	uint64_t val;
	nativeInit(0x9D44FCCE98450843);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_CREATE_SCRIPT_VEHICLE_GENERATOR(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, bool p11, bool p12, bool p13, bool p14, bool p15, int p16) /*0x9DEF883114668116*/ {
	uint64_t val;
	nativeInit(0x9DEF883114668116);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(float*)(&val) = p4;
	nativePush(val);
	*(float*)(&val) = p5;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(int*)(&val) = p7;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	*(int*)(&val) = p10;
	nativePush(val);
	*(bool*)(&val) = p11;
	nativePush(val);
	*(bool*)(&val) = p12;
	nativePush(val);
	*(bool*)(&val) = p13;
	nativePush(val);
	*(bool*)(&val) = p14;
	nativePush(val);
	*(bool*)(&val) = p15;
	nativePush(val);
	*(int*)(&val) = p16;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SMASH_VEHICLE_WINDOW(Vehicle vehicle, int index) /*0x9E5B5E4D2CCD2259*/ {
	uint64_t val;
	nativeInit(0x9E5B5E4D2CCD2259);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_BIG_VEHICLE(Vehicle vehicle) /*0x9F243D3919F442FE*/ {
	uint64_t val;
	nativeInit(0x9F243D3919F442FE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0x9F3F689B814F2599(Vehicle vehicle, bool p1) /*0x9F3F689B814F2599*/ {
	uint64_t val;
	nativeInit(0x9F3F689B814F2599);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_0xA01BC64DD4BFBBAC(Vehicle vehicle, int p1) /*0xA01BC64DD4BFBBAC*/ {
	uint64_t val;
	nativeInit(0xA01BC64DD4BFBBAC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_PLANE(Hash model) /*0xA0948AB42D7BA0DE*/ {
	uint64_t val;
	nativeInit(0xA0948AB42D7BA0DE);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_MAX_TRACTION(Vehicle vehicle) /*0xA132FB5370554DB0*/ {
	uint64_t val;
	nativeInit(0xA132FB5370554DB0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_HELI_BLADES_FULL_SPEED(Vehicle vehicle) /*0xA178472EBB8AE60D*/ {
	uint64_t val;
	nativeInit(0xA178472EBB8AE60D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xA17BAD153B51547E(Vehicle cargobob, float p1) /*0xA17BAD153B51547E*/ {
	uint64_t val;
	nativeInit(0xA17BAD153B51547E);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary) /*0xA19435F193E081AC*/ {
	uint64_t val;
	nativeInit(0xA19435F193E081AC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = colorPrimary;
	nativePush(val);
	*(int**)(&val) = colorSecondary;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DAMAGE(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, bool p6) /*0xA1DD317EA8FD4F29*/ {
	uint64_t val;
	nativeInit(0xA1DD317EA8FD4F29);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(float*)(&val) = damage;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Vehicle vehicle, bool toggle) /*0xA2F80B8D040727CC*/ {
	uint64_t val;
	nativeInit(0xA2F80B8D040727CC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(Vehicle vehicle, bool toggle) /*0xA37B9A517B133349*/ {
	uint64_t val;
	nativeInit(0xA37B9A517B133349);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_CEILING_HEIGHT(Vehicle vehicle, float p1) /*0xA46413066687A328*/ {
	uint64_t val;
	nativeInit(0xA46413066687A328);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0xA4822F1CF23F4810(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) /*0xA4822F1CF23F4810*/ {
	uint64_t val;
	nativeInit(0xA4822F1CF23F4810);
	*(Vector3**)(&val) = outVec;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	*(Vector3**)(&val) = outVec1;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	*(Any*)(&val) = p4;
	nativePush(val);
	*(Any*)(&val) = p5;
	nativePush(val);
	*(Any*)(&val) = p6;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	*(Any*)(&val) = p8;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_PLAYBACK_TO_USE_AI(Vehicle vehicle, int flag) /*0xA549C3B37EA28131*/ {
	uint64_t val;
	nativeInit(0xA549C3B37EA28131);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_NUM_MOD_COLORS(int p0, bool p1) /*0xA551BE18C11A476D*/ {
	uint64_t val;
	nativeInit(0xA551BE18C11A476D);
	*(int*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_DOOR_LATCHED(Vehicle vehicle, int doorIndex, bool forceClose, bool lock, bool p4) /*0xA5A9653A8D2CAF48*/ {
	uint64_t val;
	nativeInit(0xA5A9653A8D2CAF48);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(bool*)(&val) = forceClose;
	nativePush(val);
	*(bool*)(&val) = lock;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REQUEST_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) /*0xA6E9FDCB2C76785E*/ {
	uint64_t val;
	nativeInit(0xA6E9FDCB2C76785E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REMOVE_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) /*0xA711568EEDB43069*/ {
	uint64_t val;
	nativeInit(0xA711568EEDB43069);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = windowIndex;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(Vehicle vehicle) /*0xA7C4F2C6E744A550*/ {
	uint64_t val;
	nativeInit(0xA7C4F2C6E744A550);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0xA7DCDF4DED40A8F4(Vehicle vehicle, bool p1) /*0xA7DCDF4DED40A8F4*/ {
	uint64_t val;
	nativeInit(0xA7DCDF4DED40A8F4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) /*0xA7ECB73355EB2F20*/ {
	uint64_t val;
	nativeInit(0xA7ECB73355EB2F20);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle) /*0xA82819CAC9C4C403*/ {
	uint64_t val;
	nativeInit(0xA82819CAC9C4C403);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_VISIBLE(Vehicle vehicle) /*0xAA0A52D24FB98293*/ {
	uint64_t val;
	nativeInit(0xAA0A52D24FB98293);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any VEHICLE_SET_TRAIN_SPEED(Vehicle train, float speed) /*0xAA0BC91BE0B796E3*/ {
	uint64_t val;
	nativeInit(0xAA0BC91BE0B796E3);
	*(Vehicle*)(&val) = train;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0xAB04325045427AAE(Vehicle vehicle, bool p1) /*0xAB04325045427AAE*/ {
	uint64_t val;
	nativeInit(0xAB04325045427AAE);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_FORWARD_SPEED(Vehicle vehicle, float speed) /*0xAB54A438726D25D5*/ {
	uint64_t val;
	nativeInit(0xAB54A438726D25D5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(Any p0) /*0xAB8E2EDA0C0A5883*/ {
	uint64_t val;
	nativeInit(0xAB8E2EDA0C0A5883);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_THIS_MODEL_A_TRAIN(Hash model) /*0xAB935175B22E822B*/ {
	uint64_t val;
	nativeInit(0xAB935175B22E822B);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE__GET_HELI_ENGINE_HEALTH(Vehicle vehicle) /*0xAC51915D27E4A5F7*/ {
	uint64_t val;
	nativeInit(0xAC51915D27E4A5F7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_REMOVE_VEHICLE_ASSET(int vehicleAsset) /*0xACE699C71AB9DEB5*/ {
	uint64_t val;
	nativeInit(0xACE699C71AB9DEB5);
	*(int*)(&val) = vehicleAsset;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_LAST_DRIVEN_VEHICLE(Vehicle vehicle) /*0xACFB2463CC22BED2*/ {
	uint64_t val;
	nativeInit(0xACFB2463CC22BED2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_PLANE_TURBULENCE_MULTIPLIER(Vehicle plane, float multiplier) /*0xAD2D28A1AFDFF131*/ {
	uint64_t val;
	nativeInit(0xAD2D28A1AFDFF131);
	*(Vehicle*)(&val) = plane;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_MAX_BRAKING(Vehicle vehicle) /*0xAD7E85FC227197C4*/ {
	uint64_t val;
	nativeInit(0xAD7E85FC227197C4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_DETACH_VEHICLE_FROM_ANY_CARGOBOB(Vehicle vehicle) /*0xADF7BE450512C12F*/ {
	uint64_t val;
	nativeInit(0xADF7BE450512C12F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_GET_IS_VEHICLE_ENGINE_RUNNING(Vehicle vehicle) /*0xAE31E7DF9B5B132E*/ {
	uint64_t val;
	nativeInit(0xAE31E7DF9B5B132E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_0xAE3FEE8709B39DCB(Vehicle vehicle) /*0xAE3FEE8709B39DCB*/ {
	uint64_t val;
	nativeInit(0xAE3FEE8709B39DCB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE__GET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle) /*0xAE8CE82A4219AC8C*/ {
	uint64_t val;
	nativeInit(0xAE8CE82A4219AC8C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(Any p0) /*0xAEA8FD591FAD4106*/ {
	uint64_t val;
	nativeInit(0xAEA8FD591FAD4106);
	*(Any*)(&val) = p0;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle VEHICLE_CREATE_VEHICLE(Hash modelHash, float x, float y, float z, float heading, bool isNetwork, bool thisScriptCheck) /*0xAF35D0D2583051B0*/ {
	uint64_t val;
	nativeInit(0xAF35D0D2583051B0);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(bool*)(&val) = isNetwork;
	nativePush(val);
	*(bool*)(&val) = thisScriptCheck;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void VEHICLE_REQUEST_VEHICLE_RECORDING(int i, const char* name) /*0xAF514CABE74CBF15*/ {
	uint64_t val;
	nativeInit(0xAF514CABE74CBF15);
	*(int*)(&val) = i;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xB055A34527CB8FD7(Vehicle vehicle, bool p1) /*0xB055A34527CB8FD7*/ {
	uint64_t val;
	nativeInit(0xB055A34527CB8FD7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xB088E9A47AE6EDD5(Vehicle vehicle, bool p1) /*0xB088E9A47AE6EDD5*/ {
	uint64_t val;
	nativeInit(0xB088E9A47AE6EDD5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_ON_ALL_WHEELS(Vehicle vehicle) /*0xB104CD1BABF302E2*/ {
	uint64_t val;
	nativeInit(0xB104CD1BABF302E2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* VEHICLE_GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(Hash modelHash) /*0xB215AAC32D25D019*/ {
	uint64_t val;
	nativeInit(0xB215AAC32D25D019);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline void VEHICLE_0xB264C4D2F2B0A78B(Vehicle vehicle) /*0xB264C4D2F2B0A78B*/ {
	uint64_t val;
	nativeInit(0xB264C4D2F2B0A78B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xB28B1FE5BFADD7F5(Vehicle vehicle, bool p1) /*0xB28B1FE5BFADD7F5*/ {
	uint64_t val;
	nativeInit(0xB28B1FE5BFADD7F5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vehicle VEHICLE_GET_LAST_DRIVEN_VEHICLE() /*0xB2D06FAEDE65B577*/ {
	nativeInit(0xB2D06FAEDE65B577); return *(Vehicle*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_LIGHT_MULTIPLIER(Vehicle vehicle, float multiplier) /*0xB385454F8791F57C*/ {
	uint64_t val;
	nativeInit(0xB385454F8791F57C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_GET_VEHICLE_MOD_VARIATION(Vehicle vehicle, int modType) /*0xB3924ECD70E095DC*/ {
	uint64_t val;
	nativeInit(0xB3924ECD70E095DC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) /*0xB3B3359379FE77D3*/ {
	uint64_t val;
	nativeInit(0xB3B3359379FE77D3);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_WHEEL_TYPE(Vehicle vehicle) /*0xB3ED1BFB4BE636DC*/ {
	uint64_t val;
	nativeInit(0xB3ED1BFB4BE636DC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline const char* VEHICLE_GET_VEHICLE_MOD_COLOR_1_NAME(Vehicle vehicle, bool p1) /*0xB45085B721EFD38C*/ {
	uint64_t val;
	nativeInit(0xB45085B721EFD38C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_STUCK_ON_ROOF(Vehicle vehicle) /*0xB497F06B288DCFDF*/ {
	uint64_t val;
	nativeInit(0xB497F06B288DCFDF);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline const char* VEHICLE_GET_LIVERY_NAME(Vehicle vehicle, int liveryIndex) /*0xB4C7A93837C91A1F*/ {
	uint64_t val;
	nativeInit(0xB4C7A93837C91A1F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = liveryIndex;
	nativePush(val);
	return *(const char**)(nativeCall());
}
inline Vehicle VEHICLE_GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) /*0xB50807EABE20A8DC*/ {
	uint64_t val;
	nativeInit(0xB50807EABE20A8DC);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_BIKE(Hash model) /*0xB50C0B0CEDC6CE84*/ {
	uint64_t val;
	nativeInit(0xB50C0B0CEDC6CE84);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_ENGINE_TORQUE_MULTIPLIER(Vehicle vehicle, float value) /*0xB59E4BD37AE292DB*/ {
	uint64_t val;
	nativeInit(0xB59E4BD37AE292DB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int r, int g, int b) /*0xB5BA80F839791C0F*/ {
	uint64_t val;
	nativeInit(0xB5BA80F839791C0F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = r;
	nativePush(val);
	*(int*)(&val) = g;
	nativePush(val);
	*(int*)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_VEHICLE_EXCLUSIVE_DRIVER_2(Vehicle vehicle, Ped ped, int p2) /*0xB5C51B5502E85E83*/ {
	uint64_t val;
	nativeInit(0xB5C51B5502E85E83);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__IS_VEHICLE_SIREN_SOUND_ON(Vehicle vehicle) /*0xB5CC40FBCB586380*/ {
	uint64_t val;
	nativeInit(0xB5CC40FBCB586380);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle, int turnSignal, bool toggle) /*0xB5D45264751B7DF0*/ {
	uint64_t val;
	nativeInit(0xB5D45264751B7DF0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = turnSignal;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b) /*0xB635392A4938B3C3*/ {
	uint64_t val;
	nativeInit(0xB635392A4938B3C3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) /*0xB64CF2CCA9D95F52*/ {
	uint64_t val;
	nativeInit(0xB64CF2CCA9D95F52);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOORS_LOCKED(int* vehicle, float* doorLockStatus) /*0xB664292EAECF7FA6*/ {
	uint64_t val;
	nativeInit(0xB664292EAECF7FA6);
	*(int**)(&val) = vehicle;
	nativePush(val);
	*(float**)(&val) = doorLockStatus;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_ADD_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) /*0xB72E26D81006005B*/ {
	uint64_t val;
	nativeInit(0xB72E26D81006005B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_BODY_HEALTH(Vehicle vehicle, float value) /*0xB77D05AC8C78AADB*/ {
	uint64_t val;
	nativeInit(0xB77D05AC8C78AADB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = value;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(Vehicle vehicle, int team, bool toggle) /*0xB81F6D4A8F5EEBA8*/ {
	uint64_t val;
	nativeInit(0xB81F6D4A8F5EEBA8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = team;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__SET_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(Vehicle plane, int height) /*0xB893215D8D4C015B*/ {
	uint64_t val;
	nativeInit(0xB893215D8D4C015B);
	*(Vehicle*)(&val) = plane;
	nativePush(val);
	*(int*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_DOOR_DAMAGED(Vehicle veh, int doorID) /*0xB8E181E559464527*/ {
	uint64_t val;
	nativeInit(0xB8E181E559464527);
	*(Vehicle*)(&val) = veh;
	nativePush(val);
	*(int*)(&val) = doorID;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE__GET_VEHICLE_BODY_HEALTH_2(Vehicle vehicle) /*0xB8EF61207C2393A9*/ {
	uint64_t val;
	nativeInit(0xB8EF61207C2393A9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE__SET_VEHICLE_JET_ENGINE_ON(Vehicle vehicle, bool toggle) /*0xB8FBC8B1330CA9B4*/ {
	uint64_t val;
	nativeInit(0xB8FBC8B1330CA9B4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_START_VEHICLE_ALARM(Vehicle vehicle) /*0xB8FF7AB45305C345*/ {
	uint64_t val;
	nativeInit(0xB8FF7AB45305C345);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline bool VEHICLE_GET_VEHICLE_LIGHTS_STATE(Vehicle vehicle, bool* lightsOn, bool* highbeamsOn) /*0xB91B4C20085BD12F*/ {
	uint64_t val;
	nativeInit(0xB91B4C20085BD12F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool**)(&val) = lightsOn;
	nativePush(val);
	*(bool**)(&val) = highbeamsOn;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_TYRE_BURST(Vehicle vehicle, int wheelID, bool completely) /*0xBA291848A0815CA9*/ {
	uint64_t val;
	nativeInit(0xBA291848A0815CA9);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = wheelID;
	nativePush(val);
	*(bool*)(&val) = completely;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_EXPLODE_VEHICLE(Vehicle vehicle, bool isAudible, bool isInvisible) /*0xBA71116ADF5B514C*/ {
	uint64_t val;
	nativeInit(0xBA71116ADF5B514C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = isAudible;
	nativePush(val);
	*(bool*)(&val) = isInvisible;
	nativePush(val);
	nativeCall();
}
inline Ped VEHICLE_GET_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int index) /*0xBB40DD2270B65366*/ {
	uint64_t val;
	nativeInit(0xBB40DD2270B65366);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	return *(Ped*)(nativeCall());
}
inline void VEHICLE_SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(Vehicle* train, bool p1) /*0xBBE7648349B49BE8*/ {
	uint64_t val;
	nativeInit(0xBBE7648349B49BE8);
	*(Vehicle**)(&val) = train;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_INTERIORLIGHT(Vehicle vehicle, bool toggle) /*0xBC2042F090AF6AD3*/ {
	uint64_t val;
	nativeInit(0xBC2042F090AF6AD3);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xBC3CCA5844452B06(float p0) /*0xBC3CCA5844452B06*/ {
	uint64_t val;
	nativeInit(0xBC3CCA5844452B06);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_HELI_PART_BROKEN(Vehicle vehicle, bool p1, bool p2, bool p3) /*0xBC74B4BE25EB6C8A*/ {
	uint64_t val;
	nativeInit(0xBC74B4BE25EB6C8A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(Vehicle cargobob, float strength) /*0xBCBFCD9D1DAC19E2*/ {
	uint64_t val;
	nativeInit(0xBCBFCD9D1DAC19E2);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = strength;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE__IS_VEHICLE_DAMAGED(Vehicle vehicle) /*0xBCDC5017D3CE1E9E*/ {
	uint64_t val;
	nativeInit(0xBCDC5017D3CE1E9E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Any VEHICLE_SET_PLAYERS_LAST_VEHICLE(Vehicle vehicle) /*0xBCDF8BAF56C87B6A*/ {
	uint64_t val;
	nativeInit(0xBCDF8BAF56C87B6A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0xBE5C1255A1830FF5(Vehicle vehicle, bool toggle) /*0xBE5C1255A1830FF5*/ {
	uint64_t val;
	nativeInit(0xBE5C1255A1830FF5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_PED_TARGETTABLE_VEHICLE_DESTROY(Vehicle vehicle, int doorIndex, int destroyType) /*0xBE70724027F85BCD*/ {
	uint64_t val;
	nativeInit(0xBE70724027F85BCD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(int*)(&val) = destroyType;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_THIS_MODEL_A_BICYCLE(Hash model) /*0xBF94DD42F63BDED2*/ {
	uint64_t val;
	nativeInit(0xBF94DD42F63BDED2);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float VEHICLE__GET_VEHICLE_MODEL_HAND_BRAKE(Hash modelHash) /*0xBFBA3BA79CFF7EBF*/ {
	uint64_t val;
	nativeInit(0xBFBA3BA79CFF7EBF);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_NAME_DEBUG(Vehicle vehicle, const char* name) /*0xBFDF984E2C22B94F*/ {
	uint64_t val;
	nativeInit(0xBFDF984E2C22B94F);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(const char**)(&val) = name;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_SEARCHLIGHT_ON(Vehicle vehicle) /*0xC0F97FCE55094987*/ {
	uint64_t val;
	nativeInit(0xC0F97FCE55094987);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(float minX, float minY, float minZ, float maxX, float maxY, float maxZ, bool p6, bool p7) /*0xC12321827687FE4D*/ {
	uint64_t val;
	nativeInit(0xC12321827687FE4D);
	*(float*)(&val) = minX;
	nativePush(val);
	*(float*)(&val) = minY;
	nativePush(val);
	*(float*)(&val) = minZ;
	nativePush(val);
	*(float*)(&val) = maxX;
	nativePush(val);
	*(float*)(&val) = maxY;
	nativePush(val);
	*(float*)(&val) = maxZ;
	nativePush(val);
	*(bool*)(&val) = p6;
	nativePush(val);
	*(bool*)(&val) = p7;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xC1F981A6F74F0C23(Any p0, bool p1) /*0xC1F981A6F74F0C23*/ {
	uint64_t val;
	nativeInit(0xC1F981A6F74F0C23);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DETACH_VEHICLE_FROM_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) /*0xC2DB6B6708350ED8*/ {
	uint64_t val;
	nativeInit(0xC2DB6B6708350ED8);
	*(Vehicle*)(&val) = towTruck;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xC361AA040D6637A8(Vehicle vehicle, bool p1) /*0xC361AA040D6637A8*/ {
	uint64_t val;
	nativeInit(0xC361AA040D6637A8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xC45C27EF50F36ADC(Vehicle vehicle, bool p1) /*0xC45C27EF50F36ADC*/ {
	uint64_t val;
	nativeInit(0xC45C27EF50F36ADC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle) /*0xC45D23BAF168AAB8*/ {
	uint64_t val;
	nativeInit(0xC45D23BAF168AAB8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0xC50CE861B55EAB8B(Vehicle vehicle, bool p1) /*0xC50CE861B55EAB8B*/ {
	uint64_t val;
	nativeInit(0xC50CE861B55EAB8B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_REMOVE_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) /*0xC53EB42A499A7E90*/ {
	uint64_t val;
	nativeInit(0xC53EB42A499A7E90);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline Vehicle VEHICLE_GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) /*0xC5574E0AEB86BA68*/ {
	uint64_t val;
	nativeInit(0xC5574E0AEB86BA68);
	*(float*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(int*)(&val) = p4;
	nativePush(val);
	*(int*)(&val) = p5;
	nativePush(val);
	*(int*)(&val) = p6;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline void VEHICLE__JITTER_VEHICLE(Vehicle vehicle, bool p1, float yaw, float pitch, float roll) /*0xC59872A5134879C7*/ {
	uint64_t val;
	nativeInit(0xC59872A5134879C7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = yaw;
	nativePush(val);
	*(float*)(&val) = pitch;
	nativePush(val);
	*(float*)(&val) = roll;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE__GET_VEHICLE_MODEL_MAX_KNOTS(Hash modelHash) /*0xC6AD107DDC9054CC*/ {
	uint64_t val;
	nativeInit(0xC6AD107DDC9054CC);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline Any VEHICLE_SET_NUMBER_OF_PARKED_VEHICLES(int value) /*0xCAA15F13EBD417FF*/ {
	uint64_t val;
	nativeInit(0xCAA15F13EBD417FF);
	*(int*)(&val) = value;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0xCAC66558B944DA67(const char* vehicle, bool p1) /*0xCAC66558B944DA67*/ {
	uint64_t val;
	nativeInit(0xCAC66558B944DA67);
	*(const char**)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline Vector3 VEHICLE__GET_CARGOBOB_HOOK_POSITION(Vehicle cargobob) /*0xCBDB9B923CACC92D*/ {
	uint64_t val;
	nativeInit(0xCBDB9B923CACC92D);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_ALARM(Vehicle vehicle, bool state) /*0xCDE5E70C1DDB954C*/ {
	uint64_t val;
	nativeInit(0xCDE5E70C1DDB954C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_IN_GARAGE_AREA(const char* garageName, Vehicle vehicle) /*0xCEE4490CD57BB3C2*/ {
	uint64_t val;
	nativeInit(0xCEE4490CD57BB3C2);
	*(const char**)(&val) = garageName;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0xCF1182F682F65307(Any p0, Player p1) /*0xCF1182F682F65307*/ {
	uint64_t val;
	nativeInit(0xCF1182F682F65307);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Player*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_CONTROL_LANDING_GEAR(Vehicle vehicle, int state) /*0xCFC8BE9A5E1FE575*/ {
	uint64_t val;
	nativeInit(0xCFC8BE9A5E1FE575);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xCFD778E7904C255E(Vehicle vehicle) /*0xCFD778E7904C255E*/ {
	uint64_t val;
	nativeInit(0xCFD778E7904C255E);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(Vehicle vehicle) /*0xD0E9CE05A1E68CD8*/ {
	uint64_t val;
	nativeInit(0xD0E9CE05A1E68CD8);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vector3 VEHICLE_GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int p0, float p1, const char* p2) /*0xD242728AA6F0FBA2*/ {
	uint64_t val;
	nativeInit(0xD242728AA6F0FBA2);
	*(int*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(const char**)(&val) = p2;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_EXTRA_TURNED_ON(Vehicle vehicle, int extraId) /*0xD2E6822DBFD6C8BD*/ {
	uint64_t val;
	nativeInit(0xD2E6822DBFD6C8BD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = extraId;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_IS_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicleAttached) /*0xD40148F22E81A1D9*/ {
	uint64_t val;
	nativeInit(0xD40148F22E81A1D9);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(Vehicle*)(&val) = vehicleAttached;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0xD4B8E3D1917BC86B(bool toggle) /*0xD4B8E3D1917BC86B*/ {
	uint64_t val;
	nativeInit(0xD4B8E3D1917BC86B);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0xD4C4642CB7F50B5D(Vehicle vehicle) /*0xD4C4642CB7F50B5D*/ {
	uint64_t val;
	nativeInit(0xD4C4642CB7F50B5D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_DOOR_BROKEN(Vehicle vehicle, int doorIndex, bool deleteDoor) /*0xD4D4F6A4AB575A33*/ {
	uint64_t val;
	nativeInit(0xD4D4F6A4AB575A33);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(bool*)(&val) = deleteDoor;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_RESET_VEHICLE_STUCK_TIMER(Vehicle vehicle, int nullAttributes) /*0xD7591B0065AFAA7A*/ {
	uint64_t val;
	nativeInit(0xD7591B0065AFAA7A);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = nullAttributes;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DISABLE_VEHICLE_IMPACT_EXPLOSION_ACTIVATION(Vehicle vehicle, bool toggle) /*0xD8050E0EB60CF274*/ {
	uint64_t val;
	nativeInit(0xD8050E0EB60CF274);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator, bool enabled) /*0xD9D620E0AC6DC4B0*/ {
	uint64_t val;
	nativeInit(0xD9D620E0AC6DC4B0);
	*(int*)(&val) = vehicleGenerator;
	nativePush(val);
	*(bool*)(&val) = enabled;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE__REQUEST_VEHICLE_SCALEFORM_MOVIE(Vehicle vehicle) /*0xDBA3C090E3D74690*/ {
	uint64_t val;
	nativeInit(0xDBA3C090E3D74690);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xDBC631F109350B8C(Vehicle vehicle, bool p1) /*0xDBC631F109350B8C*/ {
	uint64_t val;
	nativeInit(0xDBC631F109350B8C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_CLASS_MAX_TRACTION(int vehicleClass) /*0xDBC86D85C5059461*/ {
	uint64_t val;
	nativeInit(0xDBC86D85C5059461);
	*(int*)(&val) = vehicleClass;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_MODEL_MAX_BRAKING(Hash modelHash) /*0xDC53FD41B4ED944C*/ {
	uint64_t val;
	nativeInit(0xDC53FD41B4ED944C);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline bool VEHICLE_IS_THIS_MODEL_A_HELI(Hash model) /*0xDCE4334788AF94EA*/ {
	uint64_t val;
	nativeInit(0xDCE4334788AF94EA);
	*(Hash*)(&val) = model;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_LOWER_CONVERTIBLE_ROOF(Vehicle vehicle, bool instantlyLower) /*0xDED51F703D0FA83D*/ {
	uint64_t val;
	nativeInit(0xDED51F703D0FA83D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = instantlyLower;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_CLASS_FROM_NAME(Hash modelHash) /*0xDEDF1C8BD47C2200*/ {
	uint64_t val;
	nativeInit(0xDEDF1C8BD47C2200);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0xDF7E3EEB29642C38(Vehicle vehicle, Vector3* out1, Vector3* out2) /*0xDF7E3EEB29642C38*/ {
	uint64_t val;
	nativeInit(0xDF7E3EEB29642C38);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vector3**)(&val) = out1;
	nativePush(val);
	*(Vector3**)(&val) = out2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xDFFCEF48E511DB48(Any p0, bool p1) /*0xDFFCEF48E511DB48*/ {
	uint64_t val;
	nativeInit(0xDFFCEF48E511DB48);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE01903C47C7AC89E() /*0xE01903C47C7AC89E*/ {
	nativeInit(0xE01903C47C7AC89E);
	nativeCall();
}
inline Any VEHICLE_SET_ALL_VEHICLES_SPAWN(Vehicle vehicle, bool p1, bool p2, bool p3) /*0xE023E8AC4EF7C117*/ {
	uint64_t val;
	nativeInit(0xE023E8AC4EF7C117);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void VEHICLE_0xE05DD0E9707003A3(Any p0, bool p1) /*0xE05DD0E9707003A3*/ {
	uint64_t val;
	nativeInit(0xE05DD0E9707003A3);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE16142B94664DEFD(Vehicle vehicle, bool p1) /*0xE16142B94664DEFD*/ {
	uint64_t val;
	nativeInit(0xE16142B94664DEFD);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE301BD63E9E13CF0(Vehicle vehicle, Vehicle cargobob) /*0xE301BD63E9E13CF0*/ {
	uint64_t val;
	nativeInit(0xE301BD63E9E13CF0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE30524E1871F481D(Any p0) /*0xE30524E1871F481D*/ {
	uint64_t val;
	nativeInit(0xE30524E1871F481D);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0xE33FFA906CE74880(Vehicle vehicle, Any p1) /*0xE33FFA906CE74880*/ {
	uint64_t val;
	nativeInit(0xE33FFA906CE74880);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Any*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE__EJECT_JB700_ROOF(Vehicle vehicle, float x, float y, float z) /*0xE38CB9D7D39FDBCC*/ {
	uint64_t val;
	nativeInit(0xE38CB9D7D39FDBCC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_NUM_VEHICLE_MODS(Vehicle vehicle, int modType) /*0xE38E9162A2500646*/ {
	uint64_t val;
	nativeInit(0xE38E9162A2500646);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = modType;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0xE3EBAAE484798530(Vehicle vehicle, bool p1) /*0xE3EBAAE484798530*/ {
	uint64_t val;
	nativeInit(0xE3EBAAE484798530);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE44A982368A4AF23(Vehicle vehicle, Vehicle vehicle2) /*0xE44A982368A4AF23*/ {
	uint64_t val;
	nativeInit(0xE44A982368A4AF23);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle2;
	nativePush(val);
	nativeCall();
}
inline Hash VEHICLE_GET_VEHICLE_CAUSE_OF_DESTRUCTION(Vehicle vehicle) /*0xE495D1EF4C91FD20*/ {
	uint64_t val;
	nativeInit(0xE495D1EF4C91FD20);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline float VEHICLE__GET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle) /*0xE4CB7541F413D2C5*/ {
	uint64_t val;
	nativeInit(0xE4CB7541F413D2C5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0xE5810AC70602F2F5(Vehicle vehicle, float p1) /*0xE5810AC70602F2F5*/ {
	uint64_t val;
	nativeInit(0xE5810AC70602F2F5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_0xE6B0E8CFC3633BF0(Vehicle vehicle) /*0xE6B0E8CFC3633BF0*/ {
	uint64_t val;
	nativeInit(0xE6B0E8CFC3633BF0);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_0xE6C0C80B8C867537(bool p0) /*0xE6C0C80B8C867537*/ {
	uint64_t val;
	nativeInit(0xE6C0C80B8C867537);
	*(bool*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE6F13851780394DA(Vehicle vehicle, float p1) /*0xE6F13851780394DA*/ {
	uint64_t val;
	nativeInit(0xE6F13851780394DA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_IS_VEHICLE_ATTACHED_TO_TRAILER(Vehicle vehicle) /*0xE7CF3C4F9F489F0C*/ {
	uint64_t val;
	nativeInit(0xE7CF3C4F9F489F0C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0xE842A9398079BD82(Vehicle vehicle, float p1) /*0xE842A9398079BD82*/ {
	uint64_t val;
	nativeInit(0xE842A9398079BD82);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xE851E480B814D4BA(Vehicle vehicle, bool p1) /*0xE851E480B814D4BA*/ {
	uint64_t val;
	nativeInit(0xE851E480B814D4BA);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor) /*0xE8D65CA700C9A693*/ {
	uint64_t val;
	nativeInit(0xE8D65CA700C9A693);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = paintType;
	nativePush(val);
	*(int**)(&val) = color;
	nativePush(val);
	*(int**)(&val) = pearlescentColor;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DELETE_VEHICLE(Vehicle* vehicle) /*0xEA386986E786A54F*/ {
	uint64_t val;
	nativeInit(0xEA386986E786A54F);
	*(Vehicle**)(&val) = vehicle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) /*0xEAE6DCC7EEE3DB1D*/ {
	uint64_t val;
	nativeInit(0xEAE6DCC7EEE3DB1D);
	*(float*)(&val) = multiplier;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle, bool toggle) /*0xEB9DC3C7D8596C46*/ {
	uint64_t val;
	nativeInit(0xEB9DC3C7D8596C46);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_TYRE_BURST(Vehicle vehicle, int index, bool onRim, float p3) /*0xEC6A202EE4960385*/ {
	uint64_t val;
	nativeInit(0xEC6A202EE4960385);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = index;
	nativePush(val);
	*(bool*)(&val) = onRim;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xED8286F71A819BAA(Vehicle cargobob, float p1) /*0xED8286F71A819BAA*/ {
	uint64_t val;
	nativeInit(0xED8286F71A819BAA);
	*(Vehicle*)(&val) = cargobob;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_0xEEBFC7A7EFDC35B4(Vehicle vehicle) /*0xEEBFC7A7EFDC35B4*/ {
	uint64_t val;
	nativeInit(0xEEBFC7A7EFDC35B4);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE() /*0xEF49CF0270307CBE*/ {
	nativeInit(0xEF49CF0270307CBE);
	nativeCall();
}
inline Entity VEHICLE_GET_ENTITY_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck) /*0xEFEA18DCF10F8F75*/ {
	uint64_t val;
	nativeInit(0xEFEA18DCF10F8F75);
	*(Vehicle*)(&val) = towTruck;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline bool VEHICLE_GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(Vehicle vehicle) /*0xF095C0405307B21B*/ {
	uint64_t val;
	nativeInit(0xF095C0405307B21B);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0xF0E4BA16D1DB546C(Vehicle vehicle, int p1, int p2) /*0xF0E4BA16D1DB546C*/ {
	uint64_t val;
	nativeInit(0xF0E4BA16D1DB546C);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline Vector3 VEHICLE_0xF0F2103EFAF8CBA7(Any p0, float p1) /*0xF0F2103EFAF8CBA7*/ {
	uint64_t val;
	nativeInit(0xF0F2103EFAF8CBA7);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	return *(Vector3*)(nativeCall());
}
inline void VEHICLE_REMOVE_VEHICLE_RECORDING(Any p0, Any* p1) /*0xF1160ACCF98A3FC8*/ {
	uint64_t val;
	nativeInit(0xF1160ACCF98A3FC8);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(Any**)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle elegy) /*0xF11BC2DD9A3E7195*/ {
	uint64_t val;
	nativeInit(0xF11BC2DD9A3E7195);
	*(Vehicle*)(&val) = elegy;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_OUT_OF_CONTROL(Vehicle vehicle, bool killDriver, bool explodeOnImpact) /*0xF19D095E42D430CC*/ {
	uint64_t val;
	nativeInit(0xF19D095E42D430CC);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = killDriver;
	nativePush(val);
	*(bool*)(&val) = explodeOnImpact;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xF25E02CB9C5818F8() /*0xF25E02CB9C5818F8*/ {
	nativeInit(0xF25E02CB9C5818F8);
	nativeCall();
}
inline float VEHICLE_GET_VEHICLE_BODY_HEALTH(Vehicle vehicle) /*0xF271147EB7B40F12*/ {
	uint64_t val;
	nativeInit(0xF271147EB7B40F12);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_DOOR_CONTROL(Vehicle vehicle, int doorIndex, int speed, float angle) /*0xF2BFA0430F0A0FCB*/ {
	uint64_t val;
	nativeInit(0xF2BFA0430F0A0FCB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = doorIndex;
	nativePush(val);
	*(int*)(&val) = speed;
	nativePush(val);
	*(float*)(&val) = angle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_CONVERTIBLE_ROOF(Vehicle vehicle, bool p1) /*0xF39C4F538B5124C2*/ {
	uint64_t val;
	nativeInit(0xF39C4F538B5124C2);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_GET_VEHICLE_COLOR(Vehicle vehicle, int* r, int* g, int* b) /*0xF3CC740D36221548*/ {
	uint64_t val;
	nativeInit(0xF3CC740D36221548);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int**)(&val) = r;
	nativePush(val);
	*(int**)(&val) = g;
	nativePush(val);
	*(int**)(&val) = b;
	nativePush(val);
	nativeCall();
}
inline float VEHICLE__GET_VEHICLE_MODEL_MAX_SPEED(Hash modelHash) /*0xF417C2502FFFED43*/ {
	uint64_t val;
	nativeInit(0xF417C2502FFFED43);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE_0xF488C566413B4232(Any p0, float p1) /*0xF488C566413B4232*/ {
	uint64_t val;
	nativeInit(0xF488C566413B4232);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_SIREN(Vehicle vehicle, bool toggle) /*0xF4924635A19EB37D*/ {
	uint64_t val;
	nativeInit(0xF4924635A19EB37D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_DISABLE_VEHICLE_WEAPON(bool disabled, Hash weaponHash, Vehicle vehicle, Ped owner) /*0xF4FC6A6F67D8D856*/ {
	uint64_t val;
	nativeInit(0xF4FC6A6F67D8D856);
	*(bool*)(&val) = disabled;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Ped*)(&val) = owner;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int v) /*0xF6086BC836400876*/ {
	uint64_t val;
	nativeInit(0xF6086BC836400876);
	*(int*)(&val) = v;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool VEHICLE_GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player) /*0xF6AF6CB341349015*/ {
	uint64_t val;
	nativeInit(0xF6AF6CB341349015);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Player*)(&val) = player;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Vehicle VEHICLE_GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, Hash modelHash, int flags) /*0xF73EB622C4F1689B*/ {
	uint64_t val;
	nativeInit(0xF73EB622C4F1689B);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(Hash*)(&val) = modelHash;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	return *(Vehicle*)(nativeCall());
}
inline bool VEHICLE_0xF78F94D60248C737(Any p0, bool p1) /*0xF78F94D60248C737*/ {
	uint64_t val;
	nativeInit(0xF78F94D60248C737);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_SET_DISTANT_CARS_ENABLED(bool toggle) /*0xF796359A959DF65D*/ {
	uint64_t val;
	nativeInit(0xF796359A959DF65D);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_IS_WANTED(Vehicle vehicle, bool state) /*0xF7EC25A3EBEEC726*/ {
	uint64_t val;
	nativeInit(0xF7EC25A3EBEEC726);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	nativeCall();
}
inline bool VEHICLE_0xF7F203E31F96F6A1(Vehicle vehicle, bool flag) /*0xF7F203E31F96F6A1*/ {
	uint64_t val;
	nativeInit(0xF7F203E31F96F6A1);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = flag;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void VEHICLE_0xF87D9F2301F7D206(Any p0) /*0xF87D9F2301F7D206*/ {
	uint64_t val;
	nativeInit(0xF87D9F2301F7D206);
	*(Any*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_CONVERTIBLE_ROOF_STATE(Vehicle vehicle) /*0xF8C397922FC03F41*/ {
	uint64_t val;
	nativeInit(0xF8C397922FC03F41);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_VEHICLE_BULLDOZER_ARM_POSITION(Vehicle vehicle, float position, bool p2) /*0xF8EBCCC96ADB9FB7*/ {
	uint64_t val;
	nativeInit(0xF8EBCCC96ADB9FB7);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = position;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_0xFAF2A78061FD9EF4(Any p0, float p1, float p2, float p3) /*0xFAF2A78061FD9EF4*/ {
	uint64_t val;
	nativeInit(0xFAF2A78061FD9EF4);
	*(Any*)(&val) = p0;
	nativePush(val);
	*(float*)(&val) = p1;
	nativePush(val);
	*(float*)(&val) = p2;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_BURNOUT(Vehicle vehicle, bool toggle) /*0xFB8794444A7D60FB*/ {
	uint64_t val;
	nativeInit(0xFB8794444A7D60FB);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void VEHICLE_SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle, bool toggle) /*0xFBA550EA44404EE6*/ {
	uint64_t val;
	nativeInit(0xFBA550EA44404EE6);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline int VEHICLE_GET_VEHICLE_MOD_KIT_TYPE(Vehicle vehicle) /*0xFC058F5121E54C32*/ {
	uint64_t val;
	nativeInit(0xFC058F5121E54C32);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void VEHICLE_SET_HELI_BLADES_SPEED(Vehicle vehicle, float speed) /*0xFD280B4D7F3ABC4D*/ {
	uint64_t val;
	nativeInit(0xFD280B4D7F3ABC4D);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(float*)(&val) = speed;
	nativePush(val);
	nativeCall();
}
inline Any VEHICLE_SWITCH_TRAIN_TRACK(int intersectionId, bool state) /*0xFD813BB7DB977F20*/ {
	uint64_t val;
	nativeInit(0xFD813BB7DB977F20);
	*(int*)(&val) = intersectionId;
	nativePush(val);
	*(bool*)(&val) = state;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline float VEHICLE_GET_VEHICLE_DOOR_ANGLE_RATIO(Vehicle vehicle, int door) /*0xFE3F9C29F7B32BD5*/ {
	uint64_t val;
	nativeInit(0xFE3F9C29F7B32BD5);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(int*)(&val) = door;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void VEHICLE__SET_TOW_TRUCK_CRANE_HEIGHT(Vehicle towTruck, float height) /*0xFE54B92A344583CA*/ {
	uint64_t val;
	nativeInit(0xFE54B92A344583CA);
	*(Vehicle*)(&val) = towTruck;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline float WATER__GET_CURRENT_INTENSITY() /*0x2B2A2CC86778B619*/ {
	nativeInit(0x2B2A2CC86778B619); return *(float*)(nativeCall());
}
inline bool WATER_TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(float x, float y, float z, float p3, float* height) /*0x2B3451FA1E3142E2*/ {
	uint64_t val;
	nativeInit(0x2B3451FA1E3142E2);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = p3;
	nativePush(val);
	*(float**)(&val) = height;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WATER__RESET_CURRENT_INTENSITY() /*0x5E5E99285AE812DB*/ {
	nativeInit(0x5E5E99285AE812DB);
	nativeCall();
}
inline int WATER_TEST_PROBE_AGAINST_ALL_WATER(float x1, float y1, float z1, float x2, float y2, float z2, int type, Vector3* result) /*0x8974647ED222EA5F*/ {
	uint64_t val;
	nativeInit(0x8974647ED222EA5F);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = type;
	nativePush(val);
	*(Vector3**)(&val) = result;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool WATER_GET_WATER_HEIGHT_NO_WAVES(float B, float y, float z, float* height) /*0x8EE6B53CE13A9794*/ {
	uint64_t val;
	nativeInit(0x8EE6B53CE13A9794);
	*(float*)(&val) = B;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float**)(&val) = height;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WATER__REMOVE_CURRENT_RISE(int riseHandle) /*0xB1252E3E59A82AAF*/ {
	uint64_t val;
	nativeInit(0xB1252E3E59A82AAF);
	*(int*)(&val) = riseHandle;
	nativePush(val);
	nativeCall();
}
inline void WATER__SET_CURRENT_INTENSITY(float intensity) /*0xB96B00E976BE977F*/ {
	uint64_t val;
	nativeInit(0xB96B00E976BE977F);
	*(float*)(&val) = intensity;
	nativePush(val);
	nativeCall();
}
inline void WATER_MODIFY_WATER(float x, float y, float radius, float height) /*0xC443FD757C3BA637*/ {
	uint64_t val;
	nativeInit(0xC443FD757C3BA637);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	nativeCall();
}
inline bool WATER_GET_WATER_HEIGHT(float x, float y, float A, float* height) /*0xF6829842C06AE524*/ {
	uint64_t val;
	nativeInit(0xF6829842C06AE524);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = A;
	nativePush(val);
	*(float**)(&val) = height;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int WATER__ADD_CURRENT_RISE(float xLow, float yLow, float xHigh, float yHigh, float height) /*0xFDBF4CDBC07E1706*/ {
	uint64_t val;
	nativeInit(0xFDBF4CDBC07E1706);
	*(float*)(&val) = xLow;
	nativePush(val);
	*(float*)(&val) = yLow;
	nativePush(val);
	*(float*)(&val) = xHigh;
	nativePush(val);
	*(float*)(&val) = yHigh;
	nativePush(val);
	*(float*)(&val) = height;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool WATER_TEST_PROBE_AGAINST_WATER(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result) /*0xFFA5D878809819DB*/ {
	uint64_t val;
	nativeInit(0xFFA5D878809819DB);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(Vector3**)(&val) = result;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int WEAPON_GET_AMMO_IN_PED_WEAPON(Ped ped, Hash weaponhash) /*0x015A522136D7F951*/ {
	uint64_t val;
	nativeInit(0x015A522136D7F951);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponhash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void WEAPON_SET_PED_CURRENT_WEAPON_VISIBLE(Ped ped, bool visible, bool deselectWeapon, bool p3, bool p4) /*0x0725A4CCFDED9A70*/ {
	uint64_t val;
	nativeInit(0x0725A4CCFDED9A70);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = visible;
	nativePush(val);
	*(bool*)(&val) = deselectWeapon;
	nativePush(val);
	*(bool*)(&val) = p3;
	nativePush(val);
	*(bool*)(&val) = p4;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_SELECTED_PED_WEAPON(Ped ped) /*0x0A6DB4965674D243*/ {
	uint64_t val;
	nativeInit(0x0A6DB4965674D243);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool WEAPON_IS_PED_WEAPON_COMPONENT_ACTIVE(Ped ped, Hash weaponHash, Hash componentHash) /*0x0D78DE0572D3969E*/ {
	uint64_t val;
	nativeInit(0x0D78DE0572D3969E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Hash WEAPON_GET_WEAPON_COMPONENT_TYPE_MODEL(Hash componentHash) /*0x0DB57B41EC1DB083*/ {
	uint64_t val;
	nativeInit(0x0DB57B41EC1DB083);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void WEAPON_CLEAR_PED_LAST_WEAPON_DAMAGE(Ped ped) /*0x0E98F88A24C5F4B8*/ {
	uint64_t val;
	nativeInit(0x0E98F88A24C5F4B8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_GET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash* weaponHash) /*0x1017582BCD3832DC*/ {
	uint64_t val;
	nativeInit(0x1017582BCD3832DC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash**)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_SET_WEAPON_ANIMATION_OVERRIDE(Ped ped, Hash animStyle) /*0x1055AC3A667F09D9*/ {
	uint64_t val;
	nativeInit(0x1055AC3A667F09D9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = animStyle;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(Entity entity, Hash weaponHash, int weaponType) /*0x131D401334815E94*/ {
	uint64_t val;
	nativeInit(0x131D401334815E94);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = weaponType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_SET_PED_AMMO(Ped ped, Hash weaponHash, int ammo) /*0x14E56BC5B5DB6A19*/ {
	uint64_t val;
	nativeInit(0x14E56BC5B5DB6A19);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammo;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_SET_PED_INFINITE_AMMO_CLIP(Ped ped, bool toggle) /*0x183DADC6AA953186*/ {
	uint64_t val;
	nativeInit(0x183DADC6AA953186);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REMOVE_WEAPON_COMPONENT_FROM_PED(Ped ped, Hash weaponHash, Hash componentHash) /*0x1E8BE90C74FB4C09*/ {
	uint64_t val;
	nativeInit(0x1E8BE90C74FB4C09);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_SET_PED_DROPS_INVENTORY_WEAPON(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount) /*0x208A1888007FC0E6*/ {
	uint64_t val;
	nativeInit(0x208A1888007FC0E6);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(float*)(&val) = xOffset;
	nativePush(val);
	*(float*)(&val) = yOffset;
	nativePush(val);
	*(float*)(&val) = zOffset;
	nativePush(val);
	*(int*)(&val) = ammoCount;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_MAKE_PED_RELOAD(Ped ped) /*0x20AE33F3AC9C0033*/ {
	uint64_t val;
	nativeInit(0x20AE33F3AC9C0033);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int WEAPON_GET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash) /*0x2B9EEDC07BD06B9F*/ {
	uint64_t val;
	nativeInit(0x2B9EEDC07BD06B9F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool WEAPON_HAS_PED_BEEN_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash, int weaponType) /*0x2D343D2219CD027A*/ {
	uint64_t val;
	nativeInit(0x2D343D2219CD027A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = weaponType;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo) /*0x2E1202248937775C*/ {
	uint64_t val;
	nativeInit(0x2E1202248937775C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int**)(&val) = ammo;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline float WEAPON_0x3133B907D8B32053(Hash weapon, int p1) /*0x3133B907D8B32053*/ {
	uint64_t val;
	nativeInit(0x3133B907D8B32053);
	*(Hash*)(&val) = weapon;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void WEAPON_GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(Object weaponObject, Hash addonHash) /*0x33E179436C0B31DB*/ {
	uint64_t val;
	nativeInit(0x33E179436C0B31DB);
	*(Object*)(&val) = weaponObject;
	nativePush(val);
	*(Hash*)(&val) = addonHash;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_HAS_WEAPON_ASSET_LOADED(Hash weaponHash) /*0x36E353271F0E90EE*/ {
	uint64_t val;
	nativeInit(0x36E353271F0E90EE);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int WEAPON_GET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoType) /*0x39D22031557946C1*/ {
	uint64_t val;
	nativeInit(0x39D22031557946C1);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = ammoType;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool WEAPON_GET_CURRENT_PED_WEAPON(Ped ped, Hash* weaponHash, bool unused) /*0x3A87E44BB9A01D54*/ {
	uint64_t val;
	nativeInit(0x3A87E44BB9A01D54);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash**)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Entity WEAPON_GET_CURRENT_PED_WEAPON_ENTITY_INDEX(Ped ped) /*0x3B390A939AF0B5FC*/ {
	uint64_t val;
	nativeInit(0x3B390A939AF0B5FC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline int WEAPON_GET_WEAPON_DAMAGE_TYPE(Hash weaponHash) /*0x3BE0BB12D25FB305*/ {
	uint64_t val;
	nativeInit(0x3BE0BB12D25FB305);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void WEAPON_SET_PED_INFINITE_AMMO(Ped ped, bool toggle, Hash weaponHash) /*0x3EDCB0505123623B*/ {
	uint64_t val;
	nativeInit(0x3EDCB0505123623B);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_WEAPONTYPE_SLOT(Hash weaponHash) /*0x4215460B9B8B7FA0*/ {
	uint64_t val;
	nativeInit(0x4215460B9B8B7FA0);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool WEAPON_IS_PED_ARMED(Ped ped, int p1) /*0x475768A975D5AD17*/ {
	uint64_t val;
	nativeInit(0x475768A975D5AD17);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_SET_PED_DROPS_WEAPONS_WHEN_DEAD(Ped ped, bool toggle) /*0x476AE72C1D19D1A8*/ {
	uint64_t val;
	nativeInit(0x476AE72C1D19D1A8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REQUEST_WEAPON_HIGH_DETAIL_MODEL(Entity weaponObject) /*0x48164DBB970AC3F0*/ {
	uint64_t val;
	nativeInit(0x48164DBB970AC3F0);
	*(Entity*)(&val) = weaponObject;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REMOVE_WEAPON_FROM_PED(Ped ped, Hash weaponHash) /*0x4899CB088EDF59B8*/ {
	uint64_t val;
	nativeInit(0x4899CB088EDF59B8);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_SET_WEAPON_SMOKEGRENADE_ASSIGNED(Ped ped) /*0x4B7620C47217126C*/ {
	uint64_t val;
	nativeInit(0x4B7620C47217126C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_SET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash, int tintIndex) /*0x50969B9B89ED5738*/ {
	uint64_t val;
	nativeInit(0x50969B9B89ED5738);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REQUEST_WEAPON_ASSET(Hash weaponHash, int p1, int p2) /*0x5443438F033E29C3*/ {
	uint64_t val;
	nativeInit(0x5443438F033E29C3);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = p1;
	nativePush(val);
	*(int*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline int WEAPON_GET_WEAPON_CLIP_SIZE(Hash weaponHash) /*0x583BE370B1EC6EB4*/ {
	uint64_t val;
	nativeInit(0x583BE370B1EC6EB4);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline bool WEAPON_DOES_WEAPON_TAKE_WEAPON_COMPONENT(Hash weaponHash, Hash componentHash) /*0x5CEE3DF569CECAB0*/ {
	uint64_t val;
	nativeInit(0x5CEE3DF569CECAB0);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline int WEAPON_GET_WEAPON_TINT_COUNT(Hash weaponHash) /*0x5DCF6C5CAB2E9BF7*/ {
	uint64_t val;
	nativeInit(0x5DCF6C5CAB2E9BF7);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void WEAPON_SET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoType, int ammo) /*0x5FD1E1F011E76D7E*/ {
	uint64_t val;
	nativeInit(0x5FD1E1F011E76D7E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = ammoType;
	nativePush(val);
	*(int*)(&val) = ammo;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_IS_PED_CURRENT_WEAPON_SILENCED(Ped ped) /*0x65F0C5AE05943EC7*/ {
	uint64_t val;
	nativeInit(0x65F0C5AE05943EC7);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_SET_PED_DROPS_WEAPON(Ped ped) /*0x6B7513D9966FBEC0*/ {
	uint64_t val;
	nativeInit(0x6B7513D9966FBEC0);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_GET_PED_LAST_WEAPON_IMPACT_COORD(Ped ped, Vector3* coords) /*0x6C4D0409BA1A2BC2*/ {
	uint64_t val;
	nativeInit(0x6C4D0409BA1A2BC2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Vector3**)(&val) = coords;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(Ped ped, bool toggle) /*0x6F6981D2253C208F*/ {
	uint64_t val;
	nativeInit(0x6F6981D2253C208F);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3) /*0x717C8481234E3B88*/ {
	uint64_t val;
	nativeInit(0x717C8481234E3B88);
	*(Ped*)(&val) = driver;
	nativePush(val);
	*(Vehicle*)(&val) = vehicle;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Any*)(&val) = p3;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_SET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash weaponHash) /*0x75C55983C2C39DAA*/ {
	uint64_t val;
	nativeInit(0x75C55983C2C39DAA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_HAS_WEAPON_GOT_WEAPON_COMPONENT(Object weapon, Hash addonHash) /*0x76A18844E743BF91*/ {
	uint64_t val;
	nativeInit(0x76A18844E743BF91);
	*(Object*)(&val) = weapon;
	nativePush(val);
	*(Hash*)(&val) = addonHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_ADD_AMMO_TO_PED(Ped ped, Hash weaponHash, int ammo) /*0x78F0424C34306220*/ {
	uint64_t val;
	nativeInit(0x78F0424C34306220);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammo;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_PED_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) /*0x7FEAD38B326B9F74*/ {
	uint64_t val;
	nativeInit(0x7FEAD38B326B9F74);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline float WEAPON_GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(Ped ped) /*0x814C9D19DFD69679*/ {
	uint64_t val;
	nativeInit(0x814C9D19DFD69679);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline void WEAPON_SET_PED_CHANCE_OF_FIRING_BLANKS(Ped ped, float xBias, float yBias) /*0x8378627201D5497D*/ {
	uint64_t val;
	nativeInit(0x8378627201D5497D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(float*)(&val) = xBias;
	nativePush(val);
	*(float*)(&val) = yBias;
	nativePush(val);
	nativeCall();
}
inline float WEAPON__GET_LOCKON_RANGE_OF_CURRENT_PED_WEAPON(Ped ped) /*0x840F03E9041E2C9C*/ {
	uint64_t val;
	nativeInit(0x840F03E9041E2C9C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(float*)(nativeCall());
}
inline Hash WEAPON_GET_BEST_PED_WEAPON(Ped ped, bool p1) /*0x8483E98E8B888AE2*/ {
	uint64_t val;
	nativeInit(0x8483E98E8B888AE2);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool WEAPON__PED_SKIP_NEXT_RELOADING(Ped ped) /*0x8C0D57EA686FAD87*/ {
	uint64_t val;
	nativeInit(0x8C0D57EA686FAD87);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_HAS_PED_GOT_WEAPON(Ped ped, Hash weaponHash, bool p2) /*0x8DECB02F88F428BC*/ {
	uint64_t val;
	nativeInit(0x8DECB02F88F428BC);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_IS_WEAPON_VALID(Hash weaponHash) /*0x937C71165CF334B3*/ {
	uint64_t val;
	nativeInit(0x937C71165CF334B3);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Object WEAPON_CREATE_WEAPON_OBJECT(Hash weaponHash, int ammoCount, float x, float y, float z, bool showWorldModel, float heading, Any p7) /*0x9541D3CF0D398F36*/ {
	uint64_t val;
	nativeInit(0x9541D3CF0D398F36);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammoCount;
	nativePush(val);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(bool*)(&val) = showWorldModel;
	nativePush(val);
	*(float*)(&val) = heading;
	nativePush(val);
	*(Any*)(&val) = p7;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline int WEAPON_GET_MAX_AMMO_IN_CLIP(Ped ped, Hash weaponHash, bool p2) /*0xA38DCFFCEA8962FA*/ {
	uint64_t val;
	nativeInit(0xA38DCFFCEA8962FA);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void WEAPON_SET_PED_AMMO_TO_DROP(Any ammoType, int ammo) /*0xA4EFEF9440A5B0EF*/ {
	uint64_t val;
	nativeInit(0xA4EFEF9440A5B0EF);
	*(Any*)(&val) = ammoType;
	nativePush(val);
	*(int*)(&val) = ammo;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REMOVE_WEAPON_ASSET(Hash weaponHash) /*0xAA08EF13F341C8FC*/ {
	uint64_t val;
	nativeInit(0xAA08EF13F341C8FC);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_CLEAR_ENTITY_LAST_WEAPON_DAMAGE(Entity entity) /*0xAC678E40BE7C74D2*/ {
	uint64_t val;
	nativeInit(0xAC678E40BE7C74D2);
	*(Entity*)(&val) = entity;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_SET_CURRENT_PED_WEAPON(Ped ped, Hash weaponHash, bool equipNow) /*0xADF692B254977C0C*/ {
	uint64_t val;
	nativeInit(0xADF692B254977C0C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = equipNow;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_GIVE_WEAPON_OBJECT_TO_PED(Object weaponObject, Ped ped) /*0xB1FA61371AF7C4B7*/ {
	uint64_t val;
	nativeInit(0xB1FA61371AF7C4B7);
	*(Object*)(&val) = weaponObject;
	nativePush(val);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_GIVE_DELAYED_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, bool equipNow) /*0xB282DC6EBD803C75*/ {
	uint64_t val;
	nativeInit(0xB282DC6EBD803C75);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammoCount;
	nativePush(val);
	*(bool*)(&val) = equipNow;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_GET_WEAPON_COMPONENT_HUD_STATS(Hash componentHash, int* outData) /*0xB3CAF387AE12E9F8*/ {
	uint64_t val;
	nativeInit(0xB3CAF387AE12E9F8);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	*(int**)(&val) = outData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline Entity WEAPON_0xB4C8D77C80C0421E(Ped ped, bool p1) /*0xB4C8D77C80C0421E*/ {
	uint64_t val;
	nativeInit(0xB4C8D77C80C0421E);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Entity*)(nativeCall());
}
inline bool WEAPON_IS_PED_WEAPON_READY_TO_SHOOT(Ped ped) /*0xB80CA294F2F26749*/ {
	uint64_t val;
	nativeInit(0xB80CA294F2F26749);
	*(Ped*)(&val) = ped;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_CAN_USE_WEAPON_ON_PARACHUTE(Hash weaponHash) /*0xBC7BE5ABC0879F74*/ {
	uint64_t val;
	nativeInit(0xBC7BE5ABC0879F74);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_GIVE_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, bool isHidden, bool equipNow) /*0xBF0FD6E56C964FCB*/ {
	uint64_t val;
	nativeInit(0xBF0FD6E56C964FCB);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammoCount;
	nativePush(val);
	*(bool*)(&val) = isHidden;
	nativePush(val);
	*(bool*)(&val) = equipNow;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_WEAPONTYPE_GROUP(Hash weaponHash) /*0xC3287EE3050FB74C*/ {
	uint64_t val;
	nativeInit(0xC3287EE3050FB74C);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool WEAPON_HAS_PED_GOT_WEAPON_COMPONENT(Ped ped, Hash weaponHash, Hash componentHash) /*0xC593212475FAE340*/ {
	uint64_t val;
	nativeInit(0xC593212475FAE340);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_ENABLE_LASER_SIGHT_RENDERING(bool toggle) /*0xC8B46D7727D864AA*/ {
	uint64_t val;
	nativeInit(0xC8B46D7727D864AA);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline Object WEAPON_GET_WEAPON_OBJECT_FROM_PED(Ped ped, bool p1) /*0xCAE1DC9A0E22A16D*/ {
	uint64_t val;
	nativeInit(0xCAE1DC9A0E22A16D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	return *(Object*)(nativeCall());
}
inline int WEAPON_GET_WEAPON_OBJECT_TINT_INDEX(Object weapon) /*0xCD183314F7CD2E57*/ {
	uint64_t val;
	nativeInit(0xCD183314F7CD2E57);
	*(Object*)(&val) = weapon;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline Any WEAPON_SET_FLASH_LIGHT_FADE_DISTANCE(float distance) /*0xCEA66DAD478CD39B*/ {
	uint64_t val;
	nativeInit(0xCEA66DAD478CD39B);
	*(float*)(&val) = distance;
	nativePush(val);
	return *(Any*)(nativeCall());
}
inline void WEAPON_SET_PED_GADGET(Ped ped, Hash gadgetHash, bool p2) /*0xD0D7B1E680ED4A1A*/ {
	uint64_t val;
	nativeInit(0xD0D7B1E680ED4A1A);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = gadgetHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_GET_WEAPON_HUD_STATS(Hash weaponHash, Any* outData) /*0xD92C739EE34C9EBA*/ {
	uint64_t val;
	nativeInit(0xD92C739EE34C9EBA);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Any**)(&val) = outData;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_GIVE_WEAPON_COMPONENT_TO_PED(Ped ped, Hash weaponHash, Hash componentHash) /*0xD966D51AA5B28BB9*/ {
	uint64_t val;
	nativeInit(0xD966D51AA5B28BB9);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(Hash*)(&val) = componentHash;
	nativePush(val);
	nativeCall();
}
inline bool WEAPON_GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo) /*0xDC16122C7A20C933*/ {
	uint64_t val;
	nativeInit(0xDC16122C7A20C933);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int**)(&val) = ammo;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline bool WEAPON_SET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int ammo) /*0xDCD2A934D65CB497*/ {
	uint64_t val;
	nativeInit(0xDCD2A934D65CB497);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(int*)(&val) = ammo;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_0xE4DCEC7FD5B739A5(Ped ped) /*0xE4DCEC7FD5B739A5*/ {
	uint64_t val;
	nativeInit(0xE4DCEC7FD5B739A5);
	*(Ped*)(&val) = ped;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_0xE620FD3512A04F18(float p0) /*0xE620FD3512A04F18*/ {
	uint64_t val;
	nativeInit(0xE620FD3512A04F18);
	*(float*)(&val) = p0;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_PED_WEAPONTYPE_IN_SLOT(Ped ped, Hash weaponSlot) /*0xEFFED78E9011134D*/ {
	uint64_t val;
	nativeInit(0xEFFED78E9011134D);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponSlot;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline void WEAPON_REMOVE_ALL_PED_WEAPONS(Ped ped, bool unused) /*0xF25DF915FA38C5F3*/ {
	uint64_t val;
	nativeInit(0xF25DF915FA38C5F3);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(bool*)(&val) = unused;
	nativePush(val);
	nativeCall();
}
inline Hash WEAPON_GET_WEAPONTYPE_MODEL(Hash weaponHash) /*0xF46CDC33180FDA94*/ {
	uint64_t val;
	nativeInit(0xF46CDC33180FDA94);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline bool WEAPON_GET_IS_PED_GADGET_EQUIPPED(Ped ped, Hash gadgetHash) /*0xF731332072F5156C*/ {
	uint64_t val;
	nativeInit(0xF731332072F5156C);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = gadgetHash;
	nativePush(val);
	return *(bool*)(nativeCall());
}
inline void WEAPON_REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(Object weaponObject, Hash component) /*0xF7D82B0D66777611*/ {
	uint64_t val;
	nativeInit(0xF7D82B0D66777611);
	*(Object*)(&val) = weaponObject;
	nativePush(val);
	*(Hash*)(&val) = component;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_SET_WEAPON_OBJECT_TINT_INDEX(Object weapon, int tintIndex) /*0xF827589017D4E4A9*/ {
	uint64_t val;
	nativeInit(0xF827589017D4E4A9);
	*(Object*)(&val) = weapon;
	nativePush(val);
	*(int*)(&val) = tintIndex;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_EXPLODE_PROJECTILES(Ped ped, Hash weaponHash, bool p2) /*0xFC4BD125DE7611E4*/ {
	uint64_t val;
	nativeInit(0xFC4BD125DE7611E4);
	*(Ped*)(&val) = ped;
	nativePush(val);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = p2;
	nativePush(val);
	nativeCall();
}
inline void WEAPON_REMOVE_ALL_PROJECTILES_OF_TYPE(Hash weaponHash, bool p1) /*0xFC52E0F37E446528*/ {
	uint64_t val;
	nativeInit(0xFC52E0F37E446528);
	*(Hash*)(&val) = weaponHash;
	nativePush(val);
	*(bool*)(&val) = p1;
	nativePush(val);
	nativeCall();
}
inline int WORLDPROBE_START_SHAPE_TEST_BOUNDING_BOX(Entity entity, int flags1, int flags2) /*0x052837721A854EC7*/ {
	uint64_t val;
	nativeInit(0x052837721A854EC7);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = flags1;
	nativePush(val);
	*(int*)(&val) = flags2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE_START_SHAPE_TEST_CAPSULE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9) /*0x28579D1B8F8AAC80*/ {
	uint64_t val;
	nativeInit(0x28579D1B8F8AAC80);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = p9;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void WORLDPROBE__SHAPE_TEST_RESULT_ENTITY(Hash entityHit) /*0x2B3334BCA57CD799*/ {
	uint64_t val;
	nativeInit(0x2B3334BCA57CD799);
	*(Hash*)(&val) = entityHit;
	nativePush(val);
	nativeCall();
}
inline int WORLDPROBE_START_SHAPE_TEST_BOUND(Entity entity, int flags1, int flags2) /*0x37181417CE7C8900*/ {
	uint64_t val;
	nativeInit(0x37181417CE7C8900);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = flags1;
	nativePush(val);
	*(int*)(&val) = flags2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE__START_SHAPE_TEST_RAY(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) /*0x377906D8A31E5586*/ {
	uint64_t val;
	nativeInit(0x377906D8A31E5586);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE_GET_SHAPE_TEST_RESULT(int rayHandle, bool* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit) /*0x3D87450E15D98694*/ {
	uint64_t val;
	nativeInit(0x3D87450E15D98694);
	*(int*)(&val) = rayHandle;
	nativePush(val);
	*(bool**)(&val) = hit;
	nativePush(val);
	*(Vector3**)(&val) = endCoords;
	nativePush(val);
	*(Vector3**)(&val) = surfaceNormal;
	nativePush(val);
	*(Entity**)(&val) = entityHit;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE__GET_SHAPE_TEST_RESULT_EX(int rayHandle, bool* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit) /*0x65287525D951F6BE*/ {
	uint64_t val;
	nativeInit(0x65287525D951F6BE);
	*(int*)(&val) = rayHandle;
	nativePush(val);
	*(bool**)(&val) = hit;
	nativePush(val);
	*(Vector3**)(&val) = endCoords;
	nativePush(val);
	*(Vector3**)(&val) = surfaceNormal;
	nativePush(val);
	*(Hash**)(&val) = materialHash;
	nativePush(val);
	*(Entity**)(&val) = entityHit;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE_START_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity ent, int p8) /*0x7EE9F5D83DD4F90E*/ {
	uint64_t val;
	nativeInit(0x7EE9F5D83DD4F90E);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(Entity*)(&val) = ent;
	nativePush(val);
	*(int*)(&val) = p8;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE__START_SHAPE_TEST_CAPSULE_2(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9) /*0xE6AC6C45FBE83004*/ {
	uint64_t val;
	nativeInit(0xE6AC6C45FBE83004);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y1;
	nativePush(val);
	*(float*)(&val) = z1;
	nativePush(val);
	*(float*)(&val) = x2;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = radius;
	nativePush(val);
	*(int*)(&val) = flags;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE_START_SHAPE_TEST_BOX(float x, float y, float z, float x1, float y2, float z2, float rotX, float rotY, float rotZ, Any p9, Any p10, Any entity, Any p12) /*0xFE466162C4401D18*/ {
	uint64_t val;
	nativeInit(0xFE466162C4401D18);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	*(float*)(&val) = x1;
	nativePush(val);
	*(float*)(&val) = y2;
	nativePush(val);
	*(float*)(&val) = z2;
	nativePush(val);
	*(float*)(&val) = rotX;
	nativePush(val);
	*(float*)(&val) = rotY;
	nativePush(val);
	*(float*)(&val) = rotZ;
	nativePush(val);
	*(Any*)(&val) = p9;
	nativePush(val);
	*(Any*)(&val) = p10;
	nativePush(val);
	*(Any*)(&val) = entity;
	nativePush(val);
	*(Any*)(&val) = p12;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int WORLDPROBE__START_SHAPE_TEST_SURROUNDING_COORDS(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2) /*0xFF6BE494C7987F34*/ {
	uint64_t val;
	nativeInit(0xFF6BE494C7987F34);
	*(Vector3**)(&val) = pVec1;
	nativePush(val);
	*(Vector3**)(&val) = pVec2;
	nativePush(val);
	*(int*)(&val) = flag;
	nativePush(val);
	*(Entity*)(&val) = entity;
	nativePush(val);
	*(int*)(&val) = flag2;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int ZONE_GET_ZONE_AT_COORDS(float x, float y, float z) /*0x27040C25DE6CB2F4*/ {
	uint64_t val;
	nativeInit(0x27040C25DE6CB2F4);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline int ZONE_GET_ZONE_POPSCHEDULE(int zoneId) /*0x4334BC40AA0CB4BB*/ {
	uint64_t val;
	nativeInit(0x4334BC40AA0CB4BB);
	*(int*)(&val) = zoneId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ZONE_CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(int scheduleId) /*0x5C0DE367AA0D911C*/ {
	uint64_t val;
	nativeInit(0x5C0DE367AA0D911C);
	*(int*)(&val) = scheduleId;
	nativePush(val);
	nativeCall();
}
inline int ZONE_GET_ZONE_SCUMMINESS(int zoneId) /*0x5F7B268D15BA0739*/ {
	uint64_t val;
	nativeInit(0x5F7B268D15BA0739);
	*(int*)(&val) = zoneId;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ZONE_OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(int scheduleId, Hash vehicleHash) /*0x5F7D596BAC2E7777*/ {
	uint64_t val;
	nativeInit(0x5F7D596BAC2E7777);
	*(int*)(&val) = scheduleId;
	nativePush(val);
	*(Hash*)(&val) = vehicleHash;
	nativePush(val);
	nativeCall();
}
inline Hash ZONE_GET_HASH_OF_MAP_AREA_AT_COORDS(float x, float y, float z) /*0x7EE64D51E8498728*/ {
	uint64_t val;
	nativeInit(0x7EE64D51E8498728);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(Hash*)(nativeCall());
}
inline int ZONE_GET_ZONE_FROM_NAME_ID(const char* zoneName) /*0x98CD1D2934B76CC1*/ {
	uint64_t val;
	nativeInit(0x98CD1D2934B76CC1);
	*(const char**)(&val) = zoneName;
	nativePush(val);
	return *(int*)(nativeCall());
}
inline void ZONE_SET_ZONE_ENABLED(int zoneId, bool toggle) /*0xBA5ECEEA120E5611*/ {
	uint64_t val;
	nativeInit(0xBA5ECEEA120E5611);
	*(int*)(&val) = zoneId;
	nativePush(val);
	*(bool*)(&val) = toggle;
	nativePush(val);
	nativeCall();
}
inline const char* ZONE_GET_NAME_OF_ZONE(float x, float y, float z) /*0xCD90657D4C30E1CA*/ {
	uint64_t val;
	nativeInit(0xCD90657D4C30E1CA);
	*(float*)(&val) = x;
	nativePush(val);
	*(float*)(&val) = y;
	nativePush(val);
	*(float*)(&val) = z;
	nativePush(val);
	return *(const char**)(nativeCall());
}
